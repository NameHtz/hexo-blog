{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_drafts/git-merge-abort.md","hash":"5b60baaa67e1d9b4aaea4e5a4868ce8c8e2a9194","modified":1600763192567},{"_id":"source/_drafts/hello-world.md","hash":"22449682667825de040e32a4d4667b5eb10cc5eb","modified":1600238175418},{"_id":"source/_drafts/js-array-01.md","hash":"42f28d4276d57f876736cb74912c7ad31275558e","modified":1600857218850},{"_id":"source/_drafts/js-array-min-max.md","hash":"033a4212ca39b062e9e42204f673c6e826b34d90","modified":1600758812612},{"_id":"source/_drafts/react-nodejs-socket.md","hash":"92556f3dde49fae4b7a97ace53eabe95b9e14174","modified":1600161998560},{"_id":"source/_posts/chinese-initials-sort.md","hash":"c5115e21055516a1966cee0c489d0ebd9b42d6f9","modified":1600680597637},{"_id":"source/_posts/javascript-random-string.md","hash":"e78ebd0aa7d55c1fb41cb3bc4d492b065bdf2b79","modified":1600754434510},{"_id":"source/_posts/js-array-00.md","hash":"6cdea869f7fda49faeca3626f619284128b12892","modified":1600765922306},{"_id":"source/_posts/node-rename-file.md","hash":"3345d3e9fa9cc0d022601191be5e6b734b9476e3","modified":1600753370920},{"_id":"source/_posts/linux-command.md","hash":"0d2a58786f40d5c9b0aaec1bb36fa688f3b402b1","modified":1600769864697},{"_id":"source/_posts/react-component-life-cycle.md","hash":"d691c9cafffdcd2a7df3923f96399c67a4b363f4","modified":1600770990075},{"_id":"source/_posts/ssl-https.md","hash":"755403e5f2d01766ba3ea95e5e6d65dbe4e1f442","modified":1601909051568},{"_id":"source/_posts/ufw-config.md","hash":"87bf5db3a5d5fe1f321adfe58216180fa457c9ce","modified":1600753510867},{"_id":"source/_posts/url-search-params.md","hash":"be7823275b01c39db4941472e3fd04442ed5b8a6","modified":1600680496500},{"_id":"source/_posts/vue-Stretch-div.md","hash":"3036aaa5fbdf1ca5cccf511bcaf9033c83af7e0d","modified":1600680681804},{"_id":"source/_posts/when-to-use-state-management-in-react.md","hash":"7bd53954be9ff0a641cf6f7d64e51a16b7e193c0","modified":1600739986513},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1597740471655},{"_id":"themes/landscape/_config.yml","hash":"7cf82b58cbcb878cfa6845e56d5fb5c5a26a9c70","modified":1598791822176},{"_id":"themes/landscape/.DS_Store","hash":"18b40c0a074fb756ef76fd437c21c2205a08a585","modified":1601258704855},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1597740471655},{"_id":"themes/landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1597740471656},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1597740471656},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1597740471655},{"_id":"themes/landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1597740471656},{"_id":"themes/landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1597740471656},{"_id":"themes/landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1597740471656},{"_id":"themes/landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1597740471656},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1597740471656},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1597740471656},{"_id":"themes/landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1597740471656},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1597740471657},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"db70258daa6a9a5b7ad48f516e82cc832758d256","modified":1597744755089},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1597740471657},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1597740471660},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1597740471660},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1597740471660},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1597740471660},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1597740471660},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1597740471660},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1597740471660},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1597740471661},{"_id":"themes/landscape/README.md","hash":"37fae88639ef60d63bd0de22314d7cc4c5d94b07","modified":1597740471655},{"_id":"themes/landscape/package.json","hash":"544f21a0b2c7034998b36ae94dba6e3e0f39f228","modified":1597740471661},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"d0d753d39038284d52b10e5075979cc97db9cd20","modified":1597740471657},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1597740471657},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"2cace3976c53d7c1e7dbecff42617a3d2e3419c3","modified":1600828847504},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"10e6322cec14e42eae62ef55fed11ed553fa0bfb","modified":1597743173741},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"aad6312ac197d6c5aaf2104ac863d7eba46b772a","modified":1597740471658},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1597740471657},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1597740471658},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"5abf77aec957d9445fc71a8310252f0013c84578","modified":1597740471658},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"839d78d14de72aaed952dbc1db94029ac2106a4b","modified":1597744829230},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1597740471658},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1597740471659},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1597740471659},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1597740471659},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1597740471659},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1597740471660},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1597740471660},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1597740471661},{"_id":"themes/landscape/source/css/_variables.styl","hash":"628e307579ea46b5928424313993f17b8d729e92","modified":1597740471664},{"_id":"themes/landscape/source/css/style.styl","hash":"2932e7bf971977e1b4902d33fd351669efba630e","modified":1600754816192},{"_id":"themes/landscape/source/.DS_Store","hash":"2e53d1879c043e609a05944538a024554c5a24cd","modified":1601258699431},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1597740471669},{"_id":"themes/landscape/source/css/.DS_Store","hash":"b8e5951c497e1060bfccf7be197be3bad8cb1885","modified":1598004122685},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1597740471669},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1597740471670},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1597740471671},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1597740471670},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1597740471672},{"_id":"themes/landscape/source/images/favicon.ico","hash":"a3beb7eb947c66057809eff7642102733b8aaecb","modified":1598004018955},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1597740471672},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1597740471658},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1597740471658},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1597742207229},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1597740471659},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1597740471659},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1597740471659},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1597740471670},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1597740471661},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1597740471670},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1597740471661},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1597740471662},{"_id":"themes/landscape/source/css/_partial/customize.styl","hash":"7b7bcccc8d516d36b2f07dfd90667eda7cb1f3b5","modified":1600754816189},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1597740471672},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1597740471662},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"0b50b5a689949c207f112d4f4fc4390feb6f49a0","modified":1600754242421},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1597740471662},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1597740471662},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1597740471663},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1597740471663},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1597740471663},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1597740471664},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1597740471663},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1597740471667},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1597740471664},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1597740471665},{"_id":"themes/landscape/source/css/images/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1600612199003},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1597740471670},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1597740471670},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1597740471670},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1597740471671},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1597740471671},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1597740471671},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1597740471667},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1597740471666},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"dd3d6b5b74156a755c21bdf1bdcd5e20b17bfa22","modified":1600612160757},{"_id":"source/_posts/git-merge-abort.md","hash":"f90e3bfb5cddbea3515e7eb729a58c37eb2ef7b8","modified":1600828507023},{"_id":"source/_posts/js-array-min-max.md","hash":"e3ca85d60a3a22b7d6803a80016bacd93e9798a2","modified":1600828530518},{"_id":"source/_posts/git-commit-emoji.md","hash":"dc4b130c85fea96b7dccfe280327b44ca3520264","modified":1601436633844},{"_id":"public/2020/09/23/js-array-min-max/index.html","hash":"5c12738b6e020478b4ced905d79eb73565524da7","modified":1606722373054},{"_id":"public/2020/09/23/git-merge-abort/index.html","hash":"2024af371b2e226a8f753e0e602f00dbc88fa850","modified":1606722373054},{"_id":"public/2020/09/23/git-commit-emoji/index.html","hash":"895c90441a8e1930780e30e3ec137bf445b1f4ad","modified":1606722373054},{"_id":"public/2020/09/20/js-array-00/index.html","hash":"9ad6cb2adaabdef02c9c0d12c3919aec14b5d8c2","modified":1606722373054},{"_id":"public/2020/09/17/javascript-random-string/index.html","hash":"ab29878416b82d7bcd932b5e863bac2d34b97437","modified":1606722373054},{"_id":"public/2020/09/17/when-to-use-state-management-in-react/index.html","hash":"ce4ffe39ef27added80db278d13d200f7b5aaef9","modified":1606722373054},{"_id":"public/2020/09/10/ufw-config/index.html","hash":"1bbd70a7163411a1801d754bd352969d96464fd2","modified":1606722373054},{"_id":"public/2020/09/08/node-rename-file/index.html","hash":"352d9d6851e9c0c39af4c261e8bd2e2fc4c2df61","modified":1606722373054},{"_id":"public/2020/09/07/ssl-https/index.html","hash":"b3604cb1e67d14e4d21599bdda3986631aef2978","modified":1606722373054},{"_id":"public/2020/09/02/vue-Stretch-div/index.html","hash":"f7f8b08a1b7e5cbb5f7cf68ae8288b53f47260d9","modified":1606722373054},{"_id":"public/2020/08/31/url-search-params/index.html","hash":"85b14a6671bd3db7b92e9d789f8fe31617145508","modified":1606722373054},{"_id":"public/2020/08/25/chinese-initials-sort/index.html","hash":"bfcc435ce23b7099f6db34e03ea49b2ccb0ba0dd","modified":1606722373054},{"_id":"public/archives/index.html","hash":"70be3644b80ae94d54ab9f366b3b581ac1ba175a","modified":1606722373054},{"_id":"public/archives/page/2/index.html","hash":"2d4dbc26d9d463c8653faff6a52b742ca1845b11","modified":1606722373054},{"_id":"public/archives/2020/index.html","hash":"21129c8706d3520dd3ff4efb20be298a53cd448b","modified":1606722373054},{"_id":"public/archives/2020/08/index.html","hash":"a7b04f4c51e54c41b5710f08aedff14d2630bdd7","modified":1606722373054},{"_id":"public/archives/2020/page/2/index.html","hash":"738e588cca80416b0d6dadd56a4e90a201cf0589","modified":1606722373054},{"_id":"public/archives/2020/09/index.html","hash":"9889a1809b639622e017c4e1fe184fe3289ce849","modified":1606722373054},{"_id":"public/archives/2020/09/page/2/index.html","hash":"3fa212e11dd3cec1a6a88b7f9e63226bcc8cfcbf","modified":1606722373054},{"_id":"public/page/2/index.html","hash":"51c5d770724fe23316315cf6535c38b63d7fafd9","modified":1606722373054},{"_id":"public/tags/javaScript/index.html","hash":"097efaf21eaf8deccc0f813c199fd16b519ad629","modified":1606722373054},{"_id":"public/tags/git/index.html","hash":"2476f960b49579e97e5da7dd32306a0ed35e538b","modified":1606722373054},{"_id":"public/tags/Linux/index.html","hash":"5c68dfe6e5f9ddab37b16ff1e37b82096384a478","modified":1606722373054},{"_id":"public/tags/Node-js/index.html","hash":"22dc0fdf912ff9ddb016307b545a36d64dfa5fc2","modified":1606722373054},{"_id":"public/2020/09/16/linux-command/index.html","hash":"a09c8ef4a031f4789f03454b150c4ccc7233a528","modified":1606722373054},{"_id":"public/2020/08/20/react-component-life-cycle/index.html","hash":"ca911dac79209f716156f5570fff5da5351cbf82","modified":1606722373054},{"_id":"public/index.html","hash":"17ee9ecf685796a8bf968c7bffe93a9f5c8f71bb","modified":1606722519230},{"_id":"public/tags/React/index.html","hash":"aae701546386db39fb51691ee7bbb12ea921cc3c","modified":1606722373054},{"_id":"public/tags/ufw/index.html","hash":"c059582cb7c10fdafe578f84cb09fb2414f2fad6","modified":1606722373054},{"_id":"public/tags/Nginx/index.html","hash":"517ef3dd85a0f7ba76d1997890854827760bf809","modified":1606722373054},{"_id":"public/tags/Vue/index.html","hash":"18d2351aa179ec34962d5bc7eee29452946c7a9d","modified":1606722373054},{"_id":"source/_posts/js-array-01.md","hash":"bb127dc3248529bc6ecdc3a89ba367e7a041102e","modified":1601027804782},{"_id":"source/_posts/component-library.md","hash":"a0c626f4c6bfc6ad1a6e186c898a8b01372af8a9","modified":1600845939941},{"_id":"source/_posts/some-books.md","hash":"842ddb753cba9f2a74d947a35f40f598fea9d014","modified":1600845939938},{"_id":"public/2020/09/24/component-library/index.html","hash":"db6a4f563b9102f09df16140dfb8d89a86a3e2ae","modified":1606722373054},{"_id":"public/2020/09/24/some-books/index.html","hash":"c12e03d760d5a3a304bcabc7cfbb4e4af1e7df15","modified":1606722373054},{"_id":"public/tags/component-library/index.html","hash":"b7a00ad0814d7b801b1bdf00e3fb90b38aea6b7e","modified":1606722373054},{"_id":"public/2020/09/25/js-array-01/index.html","hash":"b57c218ce5bf5abd772bd2bdf9ad02035a5e308c","modified":1606722373054},{"_id":"source/_drafts/js-array-02.md","hash":"c80db8373c4f416959cb312b66c7c968fcc6dfae","modified":1601027804784},{"_id":"source/_posts/js-array-02.md","hash":"c2ee2e3205de3d5793286d6f5b7a34e0fd9e9fea","modified":1601130355265},{"_id":"public/2020/09/26/js-array-02/index.html","hash":"9b8310a0ce0d94df0db19568602b97f40e4be87e","modified":1606722373054},{"_id":"source/_posts/web-yslow.md","hash":"8a4d068f95b8714f3754a7194d40a8dcefb8755f","modified":1601436590166},{"_id":"public/2020/09/29/web-yslow/index.html","hash":"388cad425e9226982563c299e10e4501c40e3eff","modified":1606722373054},{"_id":"public/tags/yslow/index.html","hash":"b72a1e5c1cc8beae450c74b54f5d064213239b8e","modified":1606722373054},{"_id":"source/_posts/nodejs-message-queue.md","hash":"e932c57c10ac1cf6c4227ed11782978bc9dc3cb4","modified":1602326692676},{"_id":"source/_posts/chrome-devtools-javascript.md","hash":"ee04d4a94d7feaeb0518d52b08ee2f2aafbe5656","modified":1602314689860},{"_id":"public/2020/10/10/nodejs-message-queue/index.html","hash":"9b8817cf8bfbb4b027bb38656086598815cadccf","modified":1606722373054},{"_id":"public/2020/10/10/chrome-devtools-javascript/index.html","hash":"a3c5399f7368b3d12eba225f81aca1fbe574d759","modified":1606722373054},{"_id":"public/archives/page/3/index.html","hash":"90fc10236b977279a46803b9d55c6e6c9fde440c","modified":1606722373054},{"_id":"public/archives/2020/page/3/index.html","hash":"62e5ffd7f1c64c46aadaebef259162109f88712a","modified":1606722373054},{"_id":"public/archives/2020/10/index.html","hash":"a9690ae288c3e81eb30915056b15caf22bed76ba","modified":1606722373054},{"_id":"public/page/3/index.html","hash":"490cfc9e14603861da5027a9c1833315ab29dc2c","modified":1606722373054},{"_id":"source/_posts/scc.md","hash":"51d156913e5e88e9692cd9fa397088fc268e0d7f","modified":1602582836393},{"_id":"source/_drafts/js-cache.md","hash":"318d45be88ea005ba89ed59c7184a9158bd1e865","modified":1603450411374},{"_id":"source/_drafts/nodejs-01.md","hash":"e7310e0846927760c037eea272129264ffaef0ee","modified":1603770088533},{"_id":"source/_drafts/react-redux.md","hash":"6ebfe05e4d496eb9d01fed2d0f98ded2b6aa9513","modified":1603450920456},{"_id":"source/_posts/cloud-tencent-ubuntu-install-mysql.md","hash":"f6abb38b206911100e405d2fb68e04bf7430db12","modified":1603257869464},{"_id":"source/_posts/cloud-tencent-ubuntu-root-use.md","hash":"ba18ce3cb14452cd37c1982e66305c1db45b43b0","modified":1603257779584},{"_id":"source/_drafts/routinepanic.md","hash":"d8159f48334e4d1f1b2959ff92824d8379e21280","modified":1603450138600},{"_id":"public/2020/10/21/cloud-tencent-ubuntu-install-mysql/index.html","hash":"704842937584bc44f8809bcf61892c333ba29eab","modified":1606722373054},{"_id":"public/2020/10/21/cloud-tencent-ubuntu-root-use/index.html","hash":"bc3d1903fdd8e8c76fc3ba0290f36bfde485fd11","modified":1606722373054},{"_id":"source/_posts/MutationObserver.md","hash":"5c1bf63798dbed237b5e0061609d66fb8cda9257","modified":1606722505670},{"_id":"public/2020/11/30/MutationObserver/index.html","hash":"a76d54967137a3b564daea5dc28ebc4930a0bbe5","modified":1606722519230},{"_id":"public/archives/2020/11/index.html","hash":"b69e2f51f9f68ab11dc1dbb239e402a3e3668e5a","modified":1606722373054},{"_id":"public/tags/javsScript/index.html","hash":"5e22b54a27d9ecbc40dfcb2feaefcc050c853d58","modified":1606722373054}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"js-cache","_content":"\n[一次JS请求一般情况下有哪些地方会有缓存处理](https://www.cnblogs.com/jett-woo/p/12514215.html)\n","source":"_drafts/js-cache.md","raw":"---\ntitle: js-cache\ntags:\n---\n\n[一次JS请求一般情况下有哪些地方会有缓存处理](https://www.cnblogs.com/jett-woo/p/12514215.html)\n","slug":"js-cache","published":0,"date":"2020-10-23T10:53:31.374Z","updated":"2020-10-23T10:53:31.374Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghe0000jwj58r8nh91l","content":"<p><a href=\"https://www.cnblogs.com/jett-woo/p/12514215.html\">一次JS请求一般情况下有哪些地方会有缓存处理</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.cnblogs.com/jett-woo/p/12514215.html\">一次JS请求一般情况下有哪些地方会有缓存处理</a></p>\n"},{"title":"nodejs-01","_content":"* ##### Node.js 是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境","source":"_drafts/nodejs-01.md","raw":"---\ntitle: nodejs-01\ntags:\n---\n* ##### Node.js 是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境","slug":"nodejs-01","published":0,"date":"2020-10-27T03:37:37.217Z","updated":"2020-10-27T03:41:28.533Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghk0001jwj59lzy1jdv","content":"<ul>\n<li><h5 id=\"Node-js-是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\"><a href=\"#Node-js-是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\" class=\"headerlink\" title=\"Node.js 是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\"></a>Node.js 是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境</h5></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><h5 id=\"Node-js-是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\"><a href=\"#Node-js-是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\" class=\"headerlink\" title=\"Node.js 是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境\"></a>Node.js 是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript运行环境</h5></li>\n</ul>\n"},{"title":"react-redux","_content":"\n[Modern Redux with Redux Toolkit: createAction](https://www.valentinog.com/blog/redux/)\n","source":"_drafts/react-redux.md","raw":"---\ntitle: react-redux\ntags:\n---\n\n[Modern Redux with Redux Toolkit: createAction](https://www.valentinog.com/blog/redux/)\n","slug":"react-redux","published":0,"date":"2020-10-23T11:02:00.456Z","updated":"2020-10-23T11:02:00.456Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghm0002jwj5001y1i6t","content":"<p><a href=\"https://www.valentinog.com/blog/redux/\">Modern Redux with Redux Toolkit: createAction</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.valentinog.com/blog/redux/\">Modern Redux with Redux Toolkit: createAction</a></p>\n"},{"title":"routinepanic","_content":"\n[协慌网](https://routinepanic.com)\n","source":"_drafts/routinepanic.md","raw":"---\ntitle: routinepanic\ntags: 协慌网\n---\n\n[协慌网](https://routinepanic.com)\n","slug":"routinepanic","published":0,"date":"2020-10-23T10:48:58.600Z","updated":"2020-10-23T10:48:58.600Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghn0003jwj5a7dd8xc3","content":"<p><a href=\"https://routinepanic.com/\">协慌网</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://routinepanic.com/\">协慌网</a></p>\n"},{"title":"cloud-tencent-ubuntu-install-mysql","date":"2020-10-21T05:23:41.000Z","_content":"\n[安装MySQL](https://cloud.tencent.com/developer/article/1470612)","source":"_posts/cloud-tencent-ubuntu-install-mysql.md","raw":"---\ntitle: cloud-tencent-ubuntu-install-mysql\ndate: 2020-10-21 13:23:41\ntags: \n---\n\n[安装MySQL](https://cloud.tencent.com/developer/article/1470612)","slug":"cloud-tencent-ubuntu-install-mysql","published":1,"updated":"2020-10-21T05:24:29.464Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghn0004jwj5azjb45ip","content":"<p><a href=\"https://cloud.tencent.com/developer/article/1470612\">安装MySQL</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://cloud.tencent.com/developer/article/1470612\">安装MySQL</a></p>\n"},{"title":"cloud-tencent-ubuntu-root-use","date":"2020-10-21T05:20:55.000Z","_content":"\n[腾讯云 ubuntu 系统改为 root 登陆](https://cloud.tencent.com/developer/article/1405735)","source":"_posts/cloud-tencent-ubuntu-root-use.md","raw":"---\ntitle: cloud-tencent-ubuntu-root-use\ndate: 2020-10-21 13:20:55\ntags:\n---\n\n[腾讯云 ubuntu 系统改为 root 登陆](https://cloud.tencent.com/developer/article/1405735)","slug":"cloud-tencent-ubuntu-root-use","published":1,"updated":"2020-10-21T05:22:59.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghp0006jwj5h4k67mw1","content":"<p><a href=\"https://cloud.tencent.com/developer/article/1405735\">腾讯云 ubuntu 系统改为 root 登陆</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://cloud.tencent.com/developer/article/1405735\">腾讯云 ubuntu 系统改为 root 登陆</a></p>\n"},{"title":"按照中文拼音首字母顺序排序","date":"2020-08-25T10:57:06.000Z","_content":"\n<b class=\"bgc-e4e6e8\">localeCompare()</b>方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。\n\n<!-- more -->\n\n新的 locales 、 options 参数能让应用程序定制函数的行为即指定用来排序的语言。\nlocales 和 options 参数是依赖于具体实现的，在旧的实现中这两个参数是完全被忽略的。\n\n```javascript\nlet arr = [\"按\", \"照\", \"中\", \"文\", \"拼\", \"音\", \"首\", \"字\", \"母\", \"顺\", \"序\", \"排\", \"序\"];\narr.sort((a, b) => a.localeCompare(b, \"zh-Hans-CN\", {sensitivity:\"accent\"}))\n// [\"按\", \"母\", \"排\", \"拼\", \"首\", \"顺\", \"文\", \"序\", \"序\", \"音\", \"照\", \"中\", \"字\"]\n```\n\n[String.prototype.localeCompare()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare)\n","source":"_posts/chinese-initials-sort.md","raw":"---\ntitle: 按照中文拼音首字母顺序排序\ndate: 2020-08-25 18:57:06\ntags: javaScript\n---\n\n<b class=\"bgc-e4e6e8\">localeCompare()</b>方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。\n\n<!-- more -->\n\n新的 locales 、 options 参数能让应用程序定制函数的行为即指定用来排序的语言。\nlocales 和 options 参数是依赖于具体实现的，在旧的实现中这两个参数是完全被忽略的。\n\n```javascript\nlet arr = [\"按\", \"照\", \"中\", \"文\", \"拼\", \"音\", \"首\", \"字\", \"母\", \"顺\", \"序\", \"排\", \"序\"];\narr.sort((a, b) => a.localeCompare(b, \"zh-Hans-CN\", {sensitivity:\"accent\"}))\n// [\"按\", \"母\", \"排\", \"拼\", \"首\", \"顺\", \"文\", \"序\", \"序\", \"音\", \"照\", \"中\", \"字\"]\n```\n\n[String.prototype.localeCompare()](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare)\n","slug":"chinese-initials-sort","published":1,"updated":"2020-09-21T09:29:57.637Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodght0008jwj5b6mz1jb5","content":"<p><b class=\"bgc-e4e6e8\">localeCompare()</b>方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。</p>\n<a id=\"more\"></a>\n\n<p>新的 locales 、 options 参数能让应用程序定制函数的行为即指定用来排序的语言。<br>locales 和 options 参数是依赖于具体实现的，在旧的实现中这两个参数是完全被忽略的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&quot;按&quot;</span>, <span class=\"string\">&quot;照&quot;</span>, <span class=\"string\">&quot;中&quot;</span>, <span class=\"string\">&quot;文&quot;</span>, <span class=\"string\">&quot;拼&quot;</span>, <span class=\"string\">&quot;音&quot;</span>, <span class=\"string\">&quot;首&quot;</span>, <span class=\"string\">&quot;字&quot;</span>, <span class=\"string\">&quot;母&quot;</span>, <span class=\"string\">&quot;顺&quot;</span>, <span class=\"string\">&quot;序&quot;</span>, <span class=\"string\">&quot;排&quot;</span>, <span class=\"string\">&quot;序&quot;</span>];</span><br><span class=\"line\">arr.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a.localeCompare(b, <span class=\"string\">&quot;zh-Hans-CN&quot;</span>, &#123;<span class=\"attr\">sensitivity</span>:<span class=\"string\">&quot;accent&quot;</span>&#125;))</span><br><span class=\"line\"><span class=\"comment\">// [&quot;按&quot;, &quot;母&quot;, &quot;排&quot;, &quot;拼&quot;, &quot;首&quot;, &quot;顺&quot;, &quot;文&quot;, &quot;序&quot;, &quot;序&quot;, &quot;音&quot;, &quot;照&quot;, &quot;中&quot;, &quot;字&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\">String.prototype.localeCompare()</a></p>\n","site":{"data":{}},"excerpt":"<p><b class=\"bgc-e4e6e8\">localeCompare()</b>方法返回一个数字来指示一个参考字符串是否在排序顺序前面或之后或与给定字符串相同。</p>","more":"<p>新的 locales 、 options 参数能让应用程序定制函数的行为即指定用来排序的语言。<br>locales 和 options 参数是依赖于具体实现的，在旧的实现中这两个参数是完全被忽略的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> arr = [<span class=\"string\">&quot;按&quot;</span>, <span class=\"string\">&quot;照&quot;</span>, <span class=\"string\">&quot;中&quot;</span>, <span class=\"string\">&quot;文&quot;</span>, <span class=\"string\">&quot;拼&quot;</span>, <span class=\"string\">&quot;音&quot;</span>, <span class=\"string\">&quot;首&quot;</span>, <span class=\"string\">&quot;字&quot;</span>, <span class=\"string\">&quot;母&quot;</span>, <span class=\"string\">&quot;顺&quot;</span>, <span class=\"string\">&quot;序&quot;</span>, <span class=\"string\">&quot;排&quot;</span>, <span class=\"string\">&quot;序&quot;</span>];</span><br><span class=\"line\">arr.sort(<span class=\"function\">(<span class=\"params\">a, b</span>) =&gt;</span> a.localeCompare(b, <span class=\"string\">&quot;zh-Hans-CN&quot;</span>, &#123;<span class=\"attr\">sensitivity</span>:<span class=\"string\">&quot;accent&quot;</span>&#125;))</span><br><span class=\"line\"><span class=\"comment\">// [&quot;按&quot;, &quot;母&quot;, &quot;排&quot;, &quot;拼&quot;, &quot;首&quot;, &quot;顺&quot;, &quot;文&quot;, &quot;序&quot;, &quot;序&quot;, &quot;音&quot;, &quot;照&quot;, &quot;中&quot;, &quot;字&quot;]</span></span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String/localeCompare\">String.prototype.localeCompare()</a></p>"},{"title":"在 Chrome DevTools 中调试 JavaScript 入门","date":"2020-10-10T07:23:29.000Z","_content":"\n[在 Chrome DevTools 中调试 JavaScript 入门](https://developers.google.com/web/tools/chrome-devtools/javascript)","source":"_posts/chrome-devtools-javascript.md","raw":"---\ntitle: 在 Chrome DevTools 中调试 JavaScript 入门\ndate: 2020-10-10 15:23:29\ntags: javaScript\n---\n\n[在 Chrome DevTools 中调试 JavaScript 入门](https://developers.google.com/web/tools/chrome-devtools/javascript)","slug":"chrome-devtools-javascript","published":1,"updated":"2020-10-10T07:24:49.860Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghu0009jwj52suz30qs","content":"<p><a href=\"https://developers.google.com/web/tools/chrome-devtools/javascript\">在 Chrome DevTools 中调试 JavaScript 入门</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://developers.google.com/web/tools/chrome-devtools/javascript\">在 Chrome DevTools 中调试 JavaScript 入门</a></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\nhexo publish draft file_name","source":"_drafts/hello-world.md","raw":"---\ntitle: Hello World\ntags: test\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\nhexo publish draft file_name","slug":"hello-world","published":0,"date":"2020-08-30T12:50:22.174Z","updated":"2020-09-16T06:36:15.418Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghv000bjwj509s590hf","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<p>hexo publish draft file_name</p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<p>hexo publish draft file_name</p>\n"},{"title":"React.js + Node.js + socket.io","_content":"#### 准备\n新建两个项目，一个React.js前端项目, 一个Node.js后端项目\n>前端\n```shell script\ncreate-react-app my-socket-app\ncd my-socket-app\nyarn add socket.io-client\n\n#or\n\nnpx create-react-app my-app\ncd my-app\nyarn add socket.io-client\nyarn start \n```\n>Node.js\n```shell script\nmkdir node-socket && cd node-socket\nyarn add express socket.io nodemon\n```\n#### 前端代码\n```jsx\n\n```\n#### Node.js代码\n在package.json中添加启动命令\n```json\n {\n  .....\n \"sctipts\": {\n     \"start\": \"nodemon index.js\"\n  }\n  ......\n }\n```\n关于更多 [nodemon](https://github.com/remy/nodemon#nodemon)\n","source":"_drafts/react-nodejs-socket.md","raw":"---\ntitle: React.js + Node.js + socket.io\ntags: \n---\n#### 准备\n新建两个项目，一个React.js前端项目, 一个Node.js后端项目\n>前端\n```shell script\ncreate-react-app my-socket-app\ncd my-socket-app\nyarn add socket.io-client\n\n#or\n\nnpx create-react-app my-app\ncd my-app\nyarn add socket.io-client\nyarn start \n```\n>Node.js\n```shell script\nmkdir node-socket && cd node-socket\nyarn add express socket.io nodemon\n```\n#### 前端代码\n```jsx\n\n```\n#### Node.js代码\n在package.json中添加启动命令\n```json\n {\n  .....\n \"sctipts\": {\n     \"start\": \"nodemon index.js\"\n  }\n  ......\n }\n```\n关于更多 [nodemon](https://github.com/remy/nodemon#nodemon)\n","slug":"react-nodejs-socket","published":0,"date":"2020-09-15T09:26:38.560Z","updated":"2020-09-15T09:26:38.560Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghw000cjwj5anfc0jyj","content":"<h4 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h4><p>新建两个项目，一个React.js前端项目, 一个Node.js后端项目</p>\n<blockquote>\n<p>前端</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create-react-app my-socket-app</span><br><span class=\"line\">cd my-socket-app</span><br><span class=\"line\">yarn add socket.io-client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">or</span></span><br><span class=\"line\"></span><br><span class=\"line\">npx create-react-app my-app</span><br><span class=\"line\">cd my-app</span><br><span class=\"line\">yarn add socket.io-client</span><br><span class=\"line\">yarn start </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Node.js</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir node-socket &amp;&amp; cd node-socket</span><br><span class=\"line\">yarn add express socket.io nodemon</span><br></pre></td></tr></table></figure>\n<h4 id=\"前端代码\"><a href=\"#前端代码\" class=\"headerlink\" title=\"前端代码\"></a>前端代码</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"Node-js代码\"><a href=\"#Node-js代码\" class=\"headerlink\" title=\"Node.js代码\"></a>Node.js代码</h4><p>在package.json中添加启动命令</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> .....</span><br><span class=\"line\">&quot;sctipts&quot;: &#123;</span><br><span class=\"line\">    &quot;start&quot;: &quot;nodemon index.js&quot;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> ......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>关于更多 <a href=\"https://github.com/remy/nodemon#nodemon\">nodemon</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h4><p>新建两个项目，一个React.js前端项目, 一个Node.js后端项目</p>\n<blockquote>\n<p>前端</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create-react-app my-socket-app</span><br><span class=\"line\">cd my-socket-app</span><br><span class=\"line\">yarn add socket.io-client</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">or</span></span><br><span class=\"line\"></span><br><span class=\"line\">npx create-react-app my-app</span><br><span class=\"line\">cd my-app</span><br><span class=\"line\">yarn add socket.io-client</span><br><span class=\"line\">yarn start </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>Node.js</p>\n</blockquote>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir node-socket &amp;&amp; cd node-socket</span><br><span class=\"line\">yarn add express socket.io nodemon</span><br></pre></td></tr></table></figure>\n<h4 id=\"前端代码\"><a href=\"#前端代码\" class=\"headerlink\" title=\"前端代码\"></a>前端代码</h4><figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"Node-js代码\"><a href=\"#Node-js代码\" class=\"headerlink\" title=\"Node.js代码\"></a>Node.js代码</h4><p>在package.json中添加启动命令</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\"> .....</span><br><span class=\"line\">&quot;sctipts&quot;: &#123;</span><br><span class=\"line\">    &quot;start&quot;: &quot;nodemon index.js&quot;</span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"> ......</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>关于更多 <a href=\"https://github.com/remy/nodemon#nodemon\">nodemon</a></p>\n"},{"title":"git commit emoji","date":"2020-09-23T02:32:52.000Z","_content":"git commit emoji\n\n<!-- more -->\n\n|   Commit type              | Emoji                                         |\n|:---------------------------|:----------------------------------------------|\n| Initial commit             |  🎉 `:tada:`                                   |\n| Version tag                |  🔖 `:bookmark:`                               |\n| New feature                |  ✨ `:sparkles:`                               |\n| Bugfix                     |  🐛 `:bug:`                                    |\n| Metadata                   |  📇 `:card_index:`                             |\n| Documentation              |  📚 `:books:`                                  |\n| Documenting source code    |  💡 `:bulb:`                                   |\n| Performance                |  🐎 `:racehorse:`                              |\n| Cosmetic                   |  💄 `:lipstick:`                               |\n| Tests                      |  🚨 `:rotating_light:`                         |\n| Adding a test              |  ✅ `:white_check_mark:`                       |\n| Make a test pass           |  ✔️ `:heavy_check_mark:`                       |\n| General update             |  ⚡ `:zap:`                                    |\n| Improve format/structure   |  🎨 `:art:`                                    |\n| Refactor code              |  🔨 `:hammer:`                                 |\n| Removing code/files        |  🔥 `:fire:`                                   |\n| Continuous Integration     |  💚 `:green_heart:`                            |\n| Security                   |  🔒 `:lock:`                                   |\n| Upgrading dependencies     |  ⬆️ `:arrow_up:`                               |\n| Downgrading dependencies   |  ⬇️ `:arrow_down:`                             |\n| Lint                       |  👕 `:shirt:`                                  |\n| Translation                |  👽 `:alien:`                                  |\n| Text                       |  📝 `:pencil:`                                 |\n| Critical hotfix            |  🚑 `:ambulance:`                              |\n| Deploying stuff            |  🚀 `:rocket:`                                 |\n| Fixing on MacOS            |  🍎 `:apple:`                                  |\n| Fixing on Linux            |  🐧 `:penguin:`                                |\n| Fixing on Windows          |  🏁 `:checkered_flag:`                         |\n| Work in progress           |  🚧 `:construction:`                           |\n| Adding CI build system     |  👷 `:construction_worker:`                    |\n| Analytics or tracking code |  📈 `:chart_with_upwards_trend:`               |\n| Removing a dependency      |  ➖ `:heavy_minus_sign:`                       |\n| Adding a dependency        |  ➕ `:heavy_plus_sign:`                        |\n| Docker                     |  🐳 `:whale:`                                  |\n| Configuration files        |  🔧 `:wrench:`                                 |\n| Package.json in JS         |  📦 `:package:`                                |\n| Merging branches           |  🔀 `:twisted_rightwards_arrows:`              |\n| Bad code / need improv.    |  💩 `:hankey:`                                 |\n| Reverting changes          |  ⏪ `:rewind:`                                 |\n| Breaking changes           |  💥 `:boom:`                                   |\n| Code review changes        |  👌 `:ok_hand:`                                |\n| Accessibility              |  ♿ `:wheelchair:`                             |\n| Move/rename repository     |  🚚 `:truck:`                                  |\n","source":"_posts/git-commit-emoji.md","raw":"---\ntitle: git commit emoji\ntags: git\ndate: 2020-09-23 10:32:52\n---\ngit commit emoji\n\n<!-- more -->\n\n|   Commit type              | Emoji                                         |\n|:---------------------------|:----------------------------------------------|\n| Initial commit             |  🎉 `:tada:`                                   |\n| Version tag                |  🔖 `:bookmark:`                               |\n| New feature                |  ✨ `:sparkles:`                               |\n| Bugfix                     |  🐛 `:bug:`                                    |\n| Metadata                   |  📇 `:card_index:`                             |\n| Documentation              |  📚 `:books:`                                  |\n| Documenting source code    |  💡 `:bulb:`                                   |\n| Performance                |  🐎 `:racehorse:`                              |\n| Cosmetic                   |  💄 `:lipstick:`                               |\n| Tests                      |  🚨 `:rotating_light:`                         |\n| Adding a test              |  ✅ `:white_check_mark:`                       |\n| Make a test pass           |  ✔️ `:heavy_check_mark:`                       |\n| General update             |  ⚡ `:zap:`                                    |\n| Improve format/structure   |  🎨 `:art:`                                    |\n| Refactor code              |  🔨 `:hammer:`                                 |\n| Removing code/files        |  🔥 `:fire:`                                   |\n| Continuous Integration     |  💚 `:green_heart:`                            |\n| Security                   |  🔒 `:lock:`                                   |\n| Upgrading dependencies     |  ⬆️ `:arrow_up:`                               |\n| Downgrading dependencies   |  ⬇️ `:arrow_down:`                             |\n| Lint                       |  👕 `:shirt:`                                  |\n| Translation                |  👽 `:alien:`                                  |\n| Text                       |  📝 `:pencil:`                                 |\n| Critical hotfix            |  🚑 `:ambulance:`                              |\n| Deploying stuff            |  🚀 `:rocket:`                                 |\n| Fixing on MacOS            |  🍎 `:apple:`                                  |\n| Fixing on Linux            |  🐧 `:penguin:`                                |\n| Fixing on Windows          |  🏁 `:checkered_flag:`                         |\n| Work in progress           |  🚧 `:construction:`                           |\n| Adding CI build system     |  👷 `:construction_worker:`                    |\n| Analytics or tracking code |  📈 `:chart_with_upwards_trend:`               |\n| Removing a dependency      |  ➖ `:heavy_minus_sign:`                       |\n| Adding a dependency        |  ➕ `:heavy_plus_sign:`                        |\n| Docker                     |  🐳 `:whale:`                                  |\n| Configuration files        |  🔧 `:wrench:`                                 |\n| Package.json in JS         |  📦 `:package:`                                |\n| Merging branches           |  🔀 `:twisted_rightwards_arrows:`              |\n| Bad code / need improv.    |  💩 `:hankey:`                                 |\n| Reverting changes          |  ⏪ `:rewind:`                                 |\n| Breaking changes           |  💥 `:boom:`                                   |\n| Code review changes        |  👌 `:ok_hand:`                                |\n| Accessibility              |  ♿ `:wheelchair:`                             |\n| Move/rename repository     |  🚚 `:truck:`                                  |\n","slug":"git-commit-emoji","published":1,"updated":"2020-09-30T03:30:33.844Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghw000djwj5drexb46l","content":"<p>git commit emoji</p>\n<a id=\"more\"></a>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">Commit type</th>\n<th align=\"left\">Emoji</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Initial commit</td>\n<td align=\"left\">🎉 <code>:tada:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Version tag</td>\n<td align=\"left\">🔖 <code>:bookmark:</code></td>\n</tr>\n<tr>\n<td align=\"left\">New feature</td>\n<td align=\"left\">✨ <code>:sparkles:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Bugfix</td>\n<td align=\"left\">🐛 <code>:bug:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Metadata</td>\n<td align=\"left\">📇 <code>:card_index:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Documentation</td>\n<td align=\"left\">📚 <code>:books:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Documenting source code</td>\n<td align=\"left\">💡 <code>:bulb:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Performance</td>\n<td align=\"left\">🐎 <code>:racehorse:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Cosmetic</td>\n<td align=\"left\">💄 <code>:lipstick:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Tests</td>\n<td align=\"left\">🚨 <code>:rotating_light:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Adding a test</td>\n<td align=\"left\">✅ <code>:white_check_mark:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Make a test pass</td>\n<td align=\"left\">✔️ <code>:heavy_check_mark:</code></td>\n</tr>\n<tr>\n<td align=\"left\">General update</td>\n<td align=\"left\">⚡ <code>:zap:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Improve format/structure</td>\n<td align=\"left\">🎨 <code>:art:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Refactor code</td>\n<td align=\"left\">🔨 <code>:hammer:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Removing code/files</td>\n<td align=\"left\">🔥 <code>:fire:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Continuous Integration</td>\n<td align=\"left\">💚 <code>:green_heart:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Security</td>\n<td align=\"left\">🔒 <code>:lock:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Upgrading dependencies</td>\n<td align=\"left\">⬆️ <code>:arrow_up:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Downgrading dependencies</td>\n<td align=\"left\">⬇️ <code>:arrow_down:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Lint</td>\n<td align=\"left\">👕 <code>:shirt:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Translation</td>\n<td align=\"left\">👽 <code>:alien:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Text</td>\n<td align=\"left\">📝 <code>:pencil:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Critical hotfix</td>\n<td align=\"left\">🚑 <code>:ambulance:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Deploying stuff</td>\n<td align=\"left\">🚀 <code>:rocket:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Fixing on MacOS</td>\n<td align=\"left\">🍎 <code>:apple:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Fixing on Linux</td>\n<td align=\"left\">🐧 <code>:penguin:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Fixing on Windows</td>\n<td align=\"left\">🏁 <code>:checkered_flag:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Work in progress</td>\n<td align=\"left\">🚧 <code>:construction:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Adding CI build system</td>\n<td align=\"left\">👷 <code>:construction_worker:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Analytics or tracking code</td>\n<td align=\"left\">📈 <code>:chart_with_upwards_trend:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Removing a dependency</td>\n<td align=\"left\">➖ <code>:heavy_minus_sign:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Adding a dependency</td>\n<td align=\"left\">➕ <code>:heavy_plus_sign:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Docker</td>\n<td align=\"left\">🐳 <code>:whale:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Configuration files</td>\n<td align=\"left\">🔧 <code>:wrench:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Package.json in JS</td>\n<td align=\"left\">📦 <code>:package:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Merging branches</td>\n<td align=\"left\">🔀 <code>:twisted_rightwards_arrows:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Bad code / need improv.</td>\n<td align=\"left\">💩 <code>:hankey:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Reverting changes</td>\n<td align=\"left\">⏪ <code>:rewind:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Breaking changes</td>\n<td align=\"left\">💥 <code>:boom:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Code review changes</td>\n<td align=\"left\">👌 <code>:ok_hand:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Accessibility</td>\n<td align=\"left\">♿ <code>:wheelchair:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Move/rename repository</td>\n<td align=\"left\">🚚 <code>:truck:</code></td>\n</tr>\n</tbody></table>\n","site":{"data":{}},"excerpt":"<p>git commit emoji</p>","more":"<table>\n<thead>\n<tr>\n<th align=\"left\">Commit type</th>\n<th align=\"left\">Emoji</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">Initial commit</td>\n<td align=\"left\">🎉 <code>:tada:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Version tag</td>\n<td align=\"left\">🔖 <code>:bookmark:</code></td>\n</tr>\n<tr>\n<td align=\"left\">New feature</td>\n<td align=\"left\">✨ <code>:sparkles:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Bugfix</td>\n<td align=\"left\">🐛 <code>:bug:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Metadata</td>\n<td align=\"left\">📇 <code>:card_index:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Documentation</td>\n<td align=\"left\">📚 <code>:books:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Documenting source code</td>\n<td align=\"left\">💡 <code>:bulb:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Performance</td>\n<td align=\"left\">🐎 <code>:racehorse:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Cosmetic</td>\n<td align=\"left\">💄 <code>:lipstick:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Tests</td>\n<td align=\"left\">🚨 <code>:rotating_light:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Adding a test</td>\n<td align=\"left\">✅ <code>:white_check_mark:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Make a test pass</td>\n<td align=\"left\">✔️ <code>:heavy_check_mark:</code></td>\n</tr>\n<tr>\n<td align=\"left\">General update</td>\n<td align=\"left\">⚡ <code>:zap:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Improve format/structure</td>\n<td align=\"left\">🎨 <code>:art:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Refactor code</td>\n<td align=\"left\">🔨 <code>:hammer:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Removing code/files</td>\n<td align=\"left\">🔥 <code>:fire:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Continuous Integration</td>\n<td align=\"left\">💚 <code>:green_heart:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Security</td>\n<td align=\"left\">🔒 <code>:lock:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Upgrading dependencies</td>\n<td align=\"left\">⬆️ <code>:arrow_up:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Downgrading dependencies</td>\n<td align=\"left\">⬇️ <code>:arrow_down:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Lint</td>\n<td align=\"left\">👕 <code>:shirt:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Translation</td>\n<td align=\"left\">👽 <code>:alien:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Text</td>\n<td align=\"left\">📝 <code>:pencil:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Critical hotfix</td>\n<td align=\"left\">🚑 <code>:ambulance:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Deploying stuff</td>\n<td align=\"left\">🚀 <code>:rocket:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Fixing on MacOS</td>\n<td align=\"left\">🍎 <code>:apple:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Fixing on Linux</td>\n<td align=\"left\">🐧 <code>:penguin:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Fixing on Windows</td>\n<td align=\"left\">🏁 <code>:checkered_flag:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Work in progress</td>\n<td align=\"left\">🚧 <code>:construction:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Adding CI build system</td>\n<td align=\"left\">👷 <code>:construction_worker:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Analytics or tracking code</td>\n<td align=\"left\">📈 <code>:chart_with_upwards_trend:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Removing a dependency</td>\n<td align=\"left\">➖ <code>:heavy_minus_sign:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Adding a dependency</td>\n<td align=\"left\">➕ <code>:heavy_plus_sign:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Docker</td>\n<td align=\"left\">🐳 <code>:whale:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Configuration files</td>\n<td align=\"left\">🔧 <code>:wrench:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Package.json in JS</td>\n<td align=\"left\">📦 <code>:package:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Merging branches</td>\n<td align=\"left\">🔀 <code>:twisted_rightwards_arrows:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Bad code / need improv.</td>\n<td align=\"left\">💩 <code>:hankey:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Reverting changes</td>\n<td align=\"left\">⏪ <code>:rewind:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Breaking changes</td>\n<td align=\"left\">💥 <code>:boom:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Code review changes</td>\n<td align=\"left\">👌 <code>:ok_hand:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Accessibility</td>\n<td align=\"left\">♿ <code>:wheelchair:</code></td>\n</tr>\n<tr>\n<td align=\"left\">Move/rename repository</td>\n<td align=\"left\">🚚 <code>:truck:</code></td>\n</tr>\n</tbody></table>"},{"title":"如何撤消有冲突的git merge","date":"2020-09-23T02:33:15.000Z","_content":"\n[How to undo a git merge with conflicts](https://stackoverflow.com/questions/5741407/how-to-undo-a-git-merge-with-conflicts)\n\n最新的Git:\n```shell script\ngit merge --abort\n```\n将会把当前工作空间重置到合并之前的状态，这意味着，如果有未提交的代码，将会丢失\n\n1.7.4：\n```shell script\ngit reset --merge\n```\n功能和<b class=\"bgc-e4e6e8\">git merge --abort</b>相同\n\n1.6.2之前：\n\n```shell script\ngit reset --hard\n```\n删除所有未提交的更改，包括未提交的合并","source":"_posts/git-merge-abort.md","raw":"---\ntitle: 如何撤消有冲突的git merge\ntags: git\ndate: 2020-09-23 10:33:15\n---\n\n[How to undo a git merge with conflicts](https://stackoverflow.com/questions/5741407/how-to-undo-a-git-merge-with-conflicts)\n\n最新的Git:\n```shell script\ngit merge --abort\n```\n将会把当前工作空间重置到合并之前的状态，这意味着，如果有未提交的代码，将会丢失\n\n1.7.4：\n```shell script\ngit reset --merge\n```\n功能和<b class=\"bgc-e4e6e8\">git merge --abort</b>相同\n\n1.6.2之前：\n\n```shell script\ngit reset --hard\n```\n删除所有未提交的更改，包括未提交的合并","slug":"git-merge-abort","published":1,"updated":"2020-09-23T02:35:07.023Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghy000gjwj550txf8gh","content":"<p><a href=\"https://stackoverflow.com/questions/5741407/how-to-undo-a-git-merge-with-conflicts\">How to undo a git merge with conflicts</a></p>\n<p>最新的Git:</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge --abort</span><br></pre></td></tr></table></figure>\n<p>将会把当前工作空间重置到合并之前的状态，这意味着，如果有未提交的代码，将会丢失</p>\n<p>1.7.4：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --merge</span><br></pre></td></tr></table></figure>\n<p>功能和<b class=\"bgc-e4e6e8\">git merge –abort</b>相同</p>\n<p>1.6.2之前：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard</span><br></pre></td></tr></table></figure>\n<p>删除所有未提交的更改，包括未提交的合并</p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://stackoverflow.com/questions/5741407/how-to-undo-a-git-merge-with-conflicts\">How to undo a git merge with conflicts</a></p>\n<p>最新的Git:</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git merge --abort</span><br></pre></td></tr></table></figure>\n<p>将会把当前工作空间重置到合并之前的状态，这意味着，如果有未提交的代码，将会丢失</p>\n<p>1.7.4：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --merge</span><br></pre></td></tr></table></figure>\n<p>功能和<b class=\"bgc-e4e6e8\">git merge –abort</b>相同</p>\n<p>1.6.2之前：</p>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset --hard</span><br></pre></td></tr></table></figure>\n<p>删除所有未提交的更改，包括未提交的合并</p>\n"},{"title":"javaScript 随机生成字符串","date":"2020-09-17T08:48:07.000Z","_content":"\n<b class=\"bgc-a5673f\">记录</b>\n\n[在 JavaScript 中生成随机字符串 / 字符](https://routinepanic.com/questions/generate-random-string-characters-in-javascript)\n\n","source":"_posts/javascript-random-string.md","raw":"---\ntitle: javaScript 随机生成字符串\ndate: 2020-09-17 16:48:07\ntags: javaScript\n---\n\n<b class=\"bgc-a5673f\">记录</b>\n\n[在 JavaScript 中生成随机字符串 / 字符](https://routinepanic.com/questions/generate-random-string-characters-in-javascript)\n\n","slug":"javascript-random-string","published":1,"updated":"2020-09-22T06:00:34.510Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodghz000hjwj5bjvu5gem","content":"<p><b class=\"bgc-a5673f\">记录</b></p>\n<p><a href=\"https://routinepanic.com/questions/generate-random-string-characters-in-javascript\">在 JavaScript 中生成随机字符串 / 字符</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><b class=\"bgc-a5673f\">记录</b></p>\n<p><a href=\"https://routinepanic.com/questions/generate-random-string-characters-in-javascript\">在 JavaScript 中生成随机字符串 / 字符</a></p>\n"},{"title":"javaScript Array.reduce()","date":"2020-09-26T14:25:55.000Z","_content":"\n\n`reduce()` 方法对数组中的每个元素执行一个由您提供的**reducer**函数(升序执行)，将其结果汇总为单个返回值。\n\n##### 语法:\n\n```\narr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])\n```\n<!--more-->\n##### 参数:\n\n`callback`: 执行数组中每个值 (如果没有提供 `initialValue则第一个值除外`)的函数，包含四个参数:\n   1. `accumulator`: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值，或`initialValue`（见于下方)\n   2. `currentValue`: 数组中正在处理的元素\n   3. `index`: (可选) 数组中正在处理的当前元素的索引。 如果提供了`initialValue`，则起始索引号为0，否则从索引1起始\n   4. `array`: (可选) 调用`reduce()`的数组\n`initialValue`: (可选) 作为第一次调用 `callback`函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错\n\n##### 例子：\n\n```javascript\n[0, 1, 2, 3, 4].reduce(function(accumulator, currentValue, currentIndex, array){\n  return accumulator + currentValue;\n});\n// 10\n```\n\n##### 实现一个 reduce\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{initialValue}\n * @returns{callback 处理后的结果}\n */ \nfunction reduce() {\n  let [array, callback, initialValue] = [...arguments];\n  let accumulator = initialValue || array[0];\n  let startIndex = initialValue ? 0 : 1;\n  for (let i = startIndex; i < array.length; i++){\n    accumulator = callback(total, array[i], i, array)\n  }\n  return accumulator\n}\nlet num = reduce([1,2,3,4],function(total, value){return total = total + value},0); // 10\n```\n\n##### 用 reduce 实现 map\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */ \nfunction mapUsingReduce() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  return array.reduce(function (accumulator, currentValue, index, array) {\n    accumulator[index] = callback.call(thisArg, currentValue, index, array);\n    return accumulator\n  }, [])\n}\nmapUsingReduce([1,2,3,4,5], function(value){return value * 2}) // [2, 4, 6, 8, 10]\n```\n\n##### 用 reduce 实现 filter\n\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */ \nfunction filterUsingReduce() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  return array.reduce(function (accumulator, currentValue, index, array) {\n    //accumulator\n    if(callback.call(thisArg, currentValue, index, array)) {\n      accumulator.push(currentValue)\n    };\n    return accumulator\n  }, [])\n}\nfilterUsingReduce([1,2,3,4,5,6], function(value){return value > 3}) //[4, 5, 6]\n```","source":"_posts/js-array-02.md","raw":"---\ntitle: javaScript Array.reduce()\ntags: javaScript\ndate: 2020-09-26 22:25:55\n---\n\n\n`reduce()` 方法对数组中的每个元素执行一个由您提供的**reducer**函数(升序执行)，将其结果汇总为单个返回值。\n\n##### 语法:\n\n```\narr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])\n```\n<!--more-->\n##### 参数:\n\n`callback`: 执行数组中每个值 (如果没有提供 `initialValue则第一个值除外`)的函数，包含四个参数:\n   1. `accumulator`: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值，或`initialValue`（见于下方)\n   2. `currentValue`: 数组中正在处理的元素\n   3. `index`: (可选) 数组中正在处理的当前元素的索引。 如果提供了`initialValue`，则起始索引号为0，否则从索引1起始\n   4. `array`: (可选) 调用`reduce()`的数组\n`initialValue`: (可选) 作为第一次调用 `callback`函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错\n\n##### 例子：\n\n```javascript\n[0, 1, 2, 3, 4].reduce(function(accumulator, currentValue, currentIndex, array){\n  return accumulator + currentValue;\n});\n// 10\n```\n\n##### 实现一个 reduce\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{initialValue}\n * @returns{callback 处理后的结果}\n */ \nfunction reduce() {\n  let [array, callback, initialValue] = [...arguments];\n  let accumulator = initialValue || array[0];\n  let startIndex = initialValue ? 0 : 1;\n  for (let i = startIndex; i < array.length; i++){\n    accumulator = callback(total, array[i], i, array)\n  }\n  return accumulator\n}\nlet num = reduce([1,2,3,4],function(total, value){return total = total + value},0); // 10\n```\n\n##### 用 reduce 实现 map\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */ \nfunction mapUsingReduce() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  return array.reduce(function (accumulator, currentValue, index, array) {\n    accumulator[index] = callback.call(thisArg, currentValue, index, array);\n    return accumulator\n  }, [])\n}\nmapUsingReduce([1,2,3,4,5], function(value){return value * 2}) // [2, 4, 6, 8, 10]\n```\n\n##### 用 reduce 实现 filter\n\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */ \nfunction filterUsingReduce() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  return array.reduce(function (accumulator, currentValue, index, array) {\n    //accumulator\n    if(callback.call(thisArg, currentValue, index, array)) {\n      accumulator.push(currentValue)\n    };\n    return accumulator\n  }, [])\n}\nfilterUsingReduce([1,2,3,4,5,6], function(value){return value > 3}) //[4, 5, 6]\n```","slug":"js-array-02","published":1,"updated":"2020-09-26T14:25:55.265Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi0000kjwj5hqsl2dtl","content":"<p><code>reduce()</code> 方法对数组中的每个元素执行一个由您提供的<strong>reducer</strong>函数(升序执行)，将其结果汇总为单个返回值。</p>\n<h5 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法:\"></a>语法:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数:\"></a>参数:</h5><p><code>callback</code>: 执行数组中每个值 (如果没有提供 <code>initialValue则第一个值除外</code>)的函数，包含四个参数:</p>\n<ol>\n<li><code>accumulator</code>: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值，或<code>initialValue</code>（见于下方)</li>\n<li><code>currentValue</code>: 数组中正在处理的元素</li>\n<li><code>index</code>: (可选) 数组中正在处理的当前元素的索引。 如果提供了<code>initialValue</code>，则起始索引号为0，否则从索引1起始</li>\n<li><code>array</code>: (可选) 调用<code>reduce()</code>的数组<br><code>initialValue</code>: (可选) 作为第一次调用 <code>callback</code>函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错</li>\n</ol>\n<h5 id=\"例子：\"><a href=\"#例子：\" class=\"headerlink\" title=\"例子：\"></a>例子：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>].reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">accumulator, currentValue, currentIndex, array</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> accumulator + currentValue;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"实现一个-reduce\"><a href=\"#实现一个-reduce\" class=\"headerlink\" title=\"实现一个 reduce\"></a>实现一个 reduce</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;initialValue&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;callback 处理后的结果&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reduce</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, initialValue] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> accumulator = initialValue || array[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> startIndex = initialValue ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = startIndex; i &lt; array.length; i++)&#123;</span><br><span class=\"line\">    accumulator = callback(total, array[i], i, array)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> accumulator</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> num = reduce([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">total, value</span>)</span>&#123;<span class=\"keyword\">return</span> total = total + value&#125;,<span class=\"number\">0</span>); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"用-reduce-实现-map\"><a href=\"#用-reduce-实现-map\" class=\"headerlink\" title=\"用 reduce 实现 map\"></a>用 reduce 实现 map</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapUsingReduce</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">accumulator, currentValue, index, array</span>) </span>&#123;</span><br><span class=\"line\">    accumulator[index] = callback.call(thisArg, currentValue, index, array);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulator</span><br><span class=\"line\">  &#125;, [])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mapUsingReduce([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;<span class=\"keyword\">return</span> value * <span class=\"number\">2</span>&#125;) <span class=\"comment\">// [2, 4, 6, 8, 10]</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"用-reduce-实现-filter\"><a href=\"#用-reduce-实现-filter\" class=\"headerlink\" title=\"用 reduce 实现 filter\"></a>用 reduce 实现 filter</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filterUsingReduce</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">accumulator, currentValue, index, array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//accumulator</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(callback.call(thisArg, currentValue, index, array)) &#123;</span><br><span class=\"line\">      accumulator.push(currentValue)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulator</span><br><span class=\"line\">  &#125;, [])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filterUsingReduce([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;<span class=\"keyword\">return</span> value &gt; <span class=\"number\">3</span>&#125;) <span class=\"comment\">//[4, 5, 6]</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p><code>reduce()</code> 方法对数组中的每个元素执行一个由您提供的<strong>reducer</strong>函数(升序执行)，将其结果汇总为单个返回值。</p>\n<h5 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法:\"></a>语法:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arr.reduce(callback(accumulator, currentValue[, index[, array]])[, initialValue])</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数:\"></a>参数:</h5><p><code>callback</code>: 执行数组中每个值 (如果没有提供 <code>initialValue则第一个值除外</code>)的函数，包含四个参数:</p>\n<ol>\n<li><code>accumulator</code>: 累计器累计回调的返回值; 它是上一次调用回调时返回的累积值，或<code>initialValue</code>（见于下方)</li>\n<li><code>currentValue</code>: 数组中正在处理的元素</li>\n<li><code>index</code>: (可选) 数组中正在处理的当前元素的索引。 如果提供了<code>initialValue</code>，则起始索引号为0，否则从索引1起始</li>\n<li><code>array</code>: (可选) 调用<code>reduce()</code>的数组<br><code>initialValue</code>: (可选) 作为第一次调用 <code>callback</code>函数时的第一个参数的值。 如果没有提供初始值，则将使用数组中的第一个元素。 在没有初始值的空数组上调用 reduce 将报错</li>\n</ol>\n<h5 id=\"例子：\"><a href=\"#例子：\" class=\"headerlink\" title=\"例子：\"></a>例子：</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"number\">0</span>, <span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>].reduce(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">accumulator, currentValue, currentIndex, array</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> accumulator + currentValue;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"><span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"实现一个-reduce\"><a href=\"#实现一个-reduce\" class=\"headerlink\" title=\"实现一个 reduce\"></a>实现一个 reduce</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;initialValue&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;callback 处理后的结果&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">reduce</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, initialValue] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> accumulator = initialValue || array[<span class=\"number\">0</span>];</span><br><span class=\"line\">  <span class=\"keyword\">let</span> startIndex = initialValue ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = startIndex; i &lt; array.length; i++)&#123;</span><br><span class=\"line\">    accumulator = callback(total, array[i], i, array)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> accumulator</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> num = reduce([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>],<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">total, value</span>)</span>&#123;<span class=\"keyword\">return</span> total = total + value&#125;,<span class=\"number\">0</span>); <span class=\"comment\">// 10</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"用-reduce-实现-map\"><a href=\"#用-reduce-实现-map\" class=\"headerlink\" title=\"用 reduce 实现 map\"></a>用 reduce 实现 map</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">mapUsingReduce</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">accumulator, currentValue, index, array</span>) </span>&#123;</span><br><span class=\"line\">    accumulator[index] = callback.call(thisArg, currentValue, index, array);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulator</span><br><span class=\"line\">  &#125;, [])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">mapUsingReduce([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;<span class=\"keyword\">return</span> value * <span class=\"number\">2</span>&#125;) <span class=\"comment\">// [2, 4, 6, 8, 10]</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"用-reduce-实现-filter\"><a href=\"#用-reduce-实现-filter\" class=\"headerlink\" title=\"用 reduce 实现 filter\"></a>用 reduce 实现 filter</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filterUsingReduce</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> array.reduce(<span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">accumulator, currentValue, index, array</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//accumulator</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(callback.call(thisArg, currentValue, index, array)) &#123;</span><br><span class=\"line\">      accumulator.push(currentValue)</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> accumulator</span><br><span class=\"line\">  &#125;, [])</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">filterUsingReduce([<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>], <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">value</span>)</span>&#123;<span class=\"keyword\">return</span> value &gt; <span class=\"number\">3</span>&#125;) <span class=\"comment\">//[4, 5, 6]</span></span><br></pre></td></tr></table></figure>"},{"title":"javaScript Array some every","date":"2020-09-20T14:47:42.000Z","_content":"\n\n<b class=\"bgc-e4e6e8\">every()</b> Array 里的每一项都满足条件 即返回 true 反之 false；\n\n```javascript\nconst isBelowThreshold = (currentValue) => currentValue < 40;\nconst array1 = [1, 30, 39, 29, 10, 13];\nconsole.log(array1.every(isBelowThreshold));  // true\n```\n\n<b class=\"bgc-e4e6e8\">some()</b> Array 里只要有一项满足条件 即返回 true，每一项都不满足条件时返回 false；\n\n```javascript\nconst array = [1, 2, 3, 4, 5];\nconst even = (element) => element % 2 === 0;\nconsole.log(array.some(even)); // true\n```","source":"_posts/js-array-00.md","raw":"---\ntitle: javaScript Array some every\ntags: javaScript\ndate: 2020-09-20 22:47:42\n---\n\n\n<b class=\"bgc-e4e6e8\">every()</b> Array 里的每一项都满足条件 即返回 true 反之 false；\n\n```javascript\nconst isBelowThreshold = (currentValue) => currentValue < 40;\nconst array1 = [1, 30, 39, 29, 10, 13];\nconsole.log(array1.every(isBelowThreshold));  // true\n```\n\n<b class=\"bgc-e4e6e8\">some()</b> Array 里只要有一项满足条件 即返回 true，每一项都不满足条件时返回 false；\n\n```javascript\nconst array = [1, 2, 3, 4, 5];\nconst even = (element) => element % 2 === 0;\nconsole.log(array.some(even)); // true\n```","slug":"js-array-00","published":1,"updated":"2020-09-22T09:12:02.306Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi1000mjwj54tez577w","content":"<p><b class=\"bgc-e4e6e8\">every()</b> Array 里的每一项都满足条件 即返回 true 反之 false；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isBelowThreshold = <span class=\"function\">(<span class=\"params\">currentValue</span>) =&gt;</span> currentValue &lt; <span class=\"number\">40</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"number\">1</span>, <span class=\"number\">30</span>, <span class=\"number\">39</span>, <span class=\"number\">29</span>, <span class=\"number\">10</span>, <span class=\"number\">13</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array1.every(isBelowThreshold));  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p><b class=\"bgc-e4e6e8\">some()</b> Array 里只要有一项满足条件 即返回 true，每一项都不满足条件时返回 false；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> even = <span class=\"function\">(<span class=\"params\">element</span>) =&gt;</span> element % <span class=\"number\">2</span> === <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.some(even)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><b class=\"bgc-e4e6e8\">every()</b> Array 里的每一项都满足条件 即返回 true 反之 false；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> isBelowThreshold = <span class=\"function\">(<span class=\"params\">currentValue</span>) =&gt;</span> currentValue &lt; <span class=\"number\">40</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> array1 = [<span class=\"number\">1</span>, <span class=\"number\">30</span>, <span class=\"number\">39</span>, <span class=\"number\">29</span>, <span class=\"number\">10</span>, <span class=\"number\">13</span>];</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array1.every(isBelowThreshold));  <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>\n\n<p><b class=\"bgc-e4e6e8\">some()</b> Array 里只要有一项满足条件 即返回 true，每一项都不满足条件时返回 false；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> array = [<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>, <span class=\"number\">5</span>];</span><br><span class=\"line\"><span class=\"keyword\">const</span> even = <span class=\"function\">(<span class=\"params\">element</span>) =&gt;</span> element % <span class=\"number\">2</span> === <span class=\"number\">0</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(array.some(even)); <span class=\"comment\">// true</span></span><br></pre></td></tr></table></figure>"},{"title":"javaScript Array.map() Array.filter()","date":"2020-09-25T08:28:52.000Z","_content":"\n `map()` 方法创建一个新数组，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。\n \n##### 语法:\n```\nvar new_array = arr.map(function callback(currentValue[, index[, array]]) {\n // Return element for new_array \n}[, thisArg])\n```\n<!--more-->\n##### 参数:\n`callback`: 生成新数组元素的函数，使用三个参数:\n   1. `currentValue`: (`callback` 数组中正在处理的当前元素)\n   2. `index`: (`callback` 数组中正在处理的当前元素的索引)\n   3. `array`: (`map` 方法调用的数组)\n\n`thisArg`: (执行 `callback` 函数时值被用作`this`)\n\n##### 例子:\n```javascript\nlet list = [1,2,3,4]; \nlet result = list.map(currentValue => currentValue * 2 );\nconsole.log(result) // [2,4,6,8]\n```\n\n##### 实现一个 `map`\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */\nfunction map() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  let length = array.length;\n  let result = new Array(length)\n  for (let i = 0; i < length; i++) {\n    if (i in array) {\n      result[i] = callback.call(thisArg, array[i], i, array)\n    }\n  }\n  return result\n}\nconsole.log(map([1, 2, 3, 4], (item) => ({num: item})))\n```\n\n`filter()` 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。\n\n### 语法:\n\n```\nvar newArray = arr.filter(callback(element[, index[, array]])[, thisArg])\n```\n\n##### 参数:\n\n`callback`:用来测试数组的每个元素的函数。返回 true 表示该元素通过测试，保留该元素，false 则不保留。它接受以下三个参数:\n   1. `element`: 数组中当前正在处理的元素\n   2. `index`: (可选) 正在处理的元素在数组中的索引\n   3. `array`: (可选) 调用了 filter 的数组本身\n\n`thisArg` (可选) 执行 callback 时，用于 this 的值\n\n##### 例子:\n\n```javascript\nlet list = [1,2,3,4]; \nlet result = list.filter(element => element > 2 );\nconsole.log(result) // [3,4]\n```\n\n##### 实现一个 `filter`\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */ \nfunction filter() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  let length = array.length;\n  let result = []\n  for (let i = 0; i < length; i++) {\n    if (i in array && callback.call(thisArg, array[i], i, array)) {\n      result.push(array[i])\n    }\n  }\n  return result\n}\nconsole.log(filter([1, 2, 3, 4], (item) =>(item > 2)))\n```","source":"_posts/js-array-01.md","raw":"---\ntitle: javaScript Array.map() Array.filter()\ntags: javaScript\ndate: 2020-09-25 16:28:52\n---\n\n `map()` 方法创建一个新数组，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。\n \n##### 语法:\n```\nvar new_array = arr.map(function callback(currentValue[, index[, array]]) {\n // Return element for new_array \n}[, thisArg])\n```\n<!--more-->\n##### 参数:\n`callback`: 生成新数组元素的函数，使用三个参数:\n   1. `currentValue`: (`callback` 数组中正在处理的当前元素)\n   2. `index`: (`callback` 数组中正在处理的当前元素的索引)\n   3. `array`: (`map` 方法调用的数组)\n\n`thisArg`: (执行 `callback` 函数时值被用作`this`)\n\n##### 例子:\n```javascript\nlet list = [1,2,3,4]; \nlet result = list.map(currentValue => currentValue * 2 );\nconsole.log(result) // [2,4,6,8]\n```\n\n##### 实现一个 `map`\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */\nfunction map() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  let length = array.length;\n  let result = new Array(length)\n  for (let i = 0; i < length; i++) {\n    if (i in array) {\n      result[i] = callback.call(thisArg, array[i], i, array)\n    }\n  }\n  return result\n}\nconsole.log(map([1, 2, 3, 4], (item) => ({num: item})))\n```\n\n`filter()` 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。\n\n### 语法:\n\n```\nvar newArray = arr.filter(callback(element[, index[, array]])[, thisArg])\n```\n\n##### 参数:\n\n`callback`:用来测试数组的每个元素的函数。返回 true 表示该元素通过测试，保留该元素，false 则不保留。它接受以下三个参数:\n   1. `element`: 数组中当前正在处理的元素\n   2. `index`: (可选) 正在处理的元素在数组中的索引\n   3. `array`: (可选) 调用了 filter 的数组本身\n\n`thisArg` (可选) 执行 callback 时，用于 this 的值\n\n##### 例子:\n\n```javascript\nlet list = [1,2,3,4]; \nlet result = list.filter(element => element > 2 );\nconsole.log(result) // [3,4]\n```\n\n##### 实现一个 `filter`\n\n```javascript\n/**\n * @param {Array}\n * @param{function}\n * @param{thisAgs}\n * @returns{Array}\n */ \nfunction filter() {\n  let [array, callback, thisArg] = [...arguments];\n  if (!Array.isArray(array)) {\n    throw new TypeError(array + ' is not a Array');\n  }\n  if (typeof callback !== 'function') {\n    throw new TypeError(callback + ' is not a function');\n  }\n  let length = array.length;\n  let result = []\n  for (let i = 0; i < length; i++) {\n    if (i in array && callback.call(thisArg, array[i], i, array)) {\n      result.push(array[i])\n    }\n  }\n  return result\n}\nconsole.log(filter([1, 2, 3, 4], (item) =>(item > 2)))\n```","slug":"js-array-01","published":1,"updated":"2020-09-25T09:56:44.782Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi3000pjwj52d7j9ut8","content":"<p> <code>map()</code> 方法创建一个新数组，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。</p>\n<h5 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法:\"></a>语法:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var new_array &#x3D; arr.map(function callback(currentValue[, index[, array]]) &#123;</span><br><span class=\"line\"> &#x2F;&#x2F; Return element for new_array </span><br><span class=\"line\">&#125;[, thisArg])</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h5 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数:\"></a>参数:</h5><p><code>callback</code>: 生成新数组元素的函数，使用三个参数:</p>\n<ol>\n<li><code>currentValue</code>: (<code>callback</code> 数组中正在处理的当前元素)</li>\n<li><code>index</code>: (<code>callback</code> 数组中正在处理的当前元素的索引)</li>\n<li><code>array</code>: (<code>map</code> 方法调用的数组)</li>\n</ol>\n<p><code>thisArg</code>: (执行 <code>callback</code> 函数时值被用作<code>this</code>)</p>\n<h5 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子:\"></a>例子:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]; </span><br><span class=\"line\"><span class=\"keyword\">let</span> result = list.map(<span class=\"function\"><span class=\"params\">currentValue</span> =&gt;</span> currentValue * <span class=\"number\">2</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// [2,4,6,8]</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"实现一个-map\"><a href=\"#实现一个-map\" class=\"headerlink\" title=\"实现一个 map\"></a>实现一个 <code>map</code></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">map</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> length = array.length;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(length)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i <span class=\"keyword\">in</span> array) &#123;</span><br><span class=\"line\">      result[i] = callback.call(thisArg, array[i], i, array)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(map([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> (&#123;<span class=\"attr\">num</span>: item&#125;)))</span><br></pre></td></tr></table></figure>\n\n<p><code>filter()</code> 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。</p>\n<h3 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法:\"></a>语法:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var newArray &#x3D; arr.filter(callback(element[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"参数-1\"><a href=\"#参数-1\" class=\"headerlink\" title=\"参数:\"></a>参数:</h5><p><code>callback</code>:用来测试数组的每个元素的函数。返回 true 表示该元素通过测试，保留该元素，false 则不保留。它接受以下三个参数:</p>\n<ol>\n<li><code>element</code>: 数组中当前正在处理的元素</li>\n<li><code>index</code>: (可选) 正在处理的元素在数组中的索引</li>\n<li><code>array</code>: (可选) 调用了 filter 的数组本身</li>\n</ol>\n<p><code>thisArg</code> (可选) 执行 callback 时，用于 this 的值</p>\n<h5 id=\"例子-1\"><a href=\"#例子-1\" class=\"headerlink\" title=\"例子:\"></a>例子:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]; </span><br><span class=\"line\"><span class=\"keyword\">let</span> result = list.filter(<span class=\"function\"><span class=\"params\">element</span> =&gt;</span> element &gt; <span class=\"number\">2</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// [3,4]</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"实现一个-filter\"><a href=\"#实现一个-filter\" class=\"headerlink\" title=\"实现一个 filter\"></a>实现一个 <code>filter</code></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> length = array.length;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i <span class=\"keyword\">in</span> array &amp;&amp; callback.call(thisArg, array[i], i, array)) &#123;</span><br><span class=\"line\">      result.push(array[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(filter([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span>(item &gt; <span class=\"number\">2</span>)))</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p> <code>map()</code> 方法创建一个新数组，其结果是该数组中的每个元素是调用一次提供的函数后的返回值。</p>\n<h5 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法:\"></a>语法:</h5><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var new_array &#x3D; arr.map(function callback(currentValue[, index[, array]]) &#123;</span><br><span class=\"line\"> &#x2F;&#x2F; Return element for new_array </span><br><span class=\"line\">&#125;[, thisArg])</span><br></pre></td></tr></table></figure>","more":"<h5 id=\"参数\"><a href=\"#参数\" class=\"headerlink\" title=\"参数:\"></a>参数:</h5><p><code>callback</code>: 生成新数组元素的函数，使用三个参数:</p>\n<ol>\n<li><code>currentValue</code>: (<code>callback</code> 数组中正在处理的当前元素)</li>\n<li><code>index</code>: (<code>callback</code> 数组中正在处理的当前元素的索引)</li>\n<li><code>array</code>: (<code>map</code> 方法调用的数组)</li>\n</ol>\n<p><code>thisArg</code>: (执行 <code>callback</code> 函数时值被用作<code>this</code>)</p>\n<h5 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子:\"></a>例子:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]; </span><br><span class=\"line\"><span class=\"keyword\">let</span> result = list.map(<span class=\"function\"><span class=\"params\">currentValue</span> =&gt;</span> currentValue * <span class=\"number\">2</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// [2,4,6,8]</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"实现一个-map\"><a href=\"#实现一个-map\" class=\"headerlink\" title=\"实现一个 map\"></a>实现一个 <code>map</code></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">map</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> length = array.length;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = <span class=\"keyword\">new</span> <span class=\"built_in\">Array</span>(length)</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i <span class=\"keyword\">in</span> array) &#123;</span><br><span class=\"line\">      result[i] = callback.call(thisArg, array[i], i, array)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(map([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span> (&#123;<span class=\"attr\">num</span>: item&#125;)))</span><br></pre></td></tr></table></figure>\n\n<p><code>filter()</code> 方法创建一个新数组, 其包含通过所提供函数实现的测试的所有元素。</p>\n<h3 id=\"语法-1\"><a href=\"#语法-1\" class=\"headerlink\" title=\"语法:\"></a>语法:</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var newArray &#x3D; arr.filter(callback(element[, index[, array]])[, thisArg])</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"参数-1\"><a href=\"#参数-1\" class=\"headerlink\" title=\"参数:\"></a>参数:</h5><p><code>callback</code>:用来测试数组的每个元素的函数。返回 true 表示该元素通过测试，保留该元素，false 则不保留。它接受以下三个参数:</p>\n<ol>\n<li><code>element</code>: 数组中当前正在处理的元素</li>\n<li><code>index</code>: (可选) 正在处理的元素在数组中的索引</li>\n<li><code>array</code>: (可选) 调用了 filter 的数组本身</li>\n</ol>\n<p><code>thisArg</code> (可选) 执行 callback 时，用于 this 的值</p>\n<h5 id=\"例子-1\"><a href=\"#例子-1\" class=\"headerlink\" title=\"例子:\"></a>例子:</h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">1</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">4</span>]; </span><br><span class=\"line\"><span class=\"keyword\">let</span> result = list.filter(<span class=\"function\"><span class=\"params\">element</span> =&gt;</span> element &gt; <span class=\"number\">2</span> );</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(result) <span class=\"comment\">// [3,4]</span></span><br></pre></td></tr></table></figure>\n\n<h5 id=\"实现一个-filter\"><a href=\"#实现一个-filter\" class=\"headerlink\" title=\"实现一个 filter\"></a>实现一个 <code>filter</code></h5><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param <span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;function&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@param<span class=\"type\">&#123;thisAgs&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@returns<span class=\"type\">&#123;Array&#125;</span></span></span></span><br><span class=\"line\"><span class=\"comment\"> */</span> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> [array, callback, thisArg] = [...arguments];</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!<span class=\"built_in\">Array</span>.isArray(array)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(array + <span class=\"string\">&#x27; is not a Array&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> callback !== <span class=\"string\">&#x27;function&#x27;</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"built_in\">TypeError</span>(callback + <span class=\"string\">&#x27; is not a function&#x27;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> length = array.length;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = []</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (i <span class=\"keyword\">in</span> array &amp;&amp; callback.call(thisArg, array[i], i, array)) &#123;</span><br><span class=\"line\">      result.push(array[i])</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(filter([<span class=\"number\">1</span>, <span class=\"number\">2</span>, <span class=\"number\">3</span>, <span class=\"number\">4</span>], <span class=\"function\">(<span class=\"params\">item</span>) =&gt;</span>(item &gt; <span class=\"number\">2</span>)))</span><br></pre></td></tr></table></figure>"},{"title":"Node.js 修改文件后缀","date":"2020-09-08T07:20:15.000Z","_content":"\n把项目修改成ts，第一个痛点，修改文件后缀，突然意识到可以用Node.js写个脚本自动修改，于是就动手了；\n\n<!-- more -->\n```typescript\nimport fs = require('fs');\nimport  chalk = require('chalk');\n\nexport default function rename(path?: string): void {\n  if (path === undefined) return;\n  let readDir: string[] = fs.readdirSync(path);\n  for (let i = 0; i < readDir.length; i++) {\n    let isFile: boolean = fs.lstatSync(`${path}/${readDir[i]}`).isFile();\n    if (isFile) {\n      let data: string = fs.readFileSync(`${path}/${readDir[i]}`, {encoding: \"utf-8\"});\n      let name: string = readDir[i];\n      let reg = /js$/;\n      if (reg.test(name)) {\n        name = name.replace(reg, 'ts');\n        let oldPath: string = `${path}/${readDir[i]}`;\n        let newPath: string = `${path}/${name}`;\n        let err: any = fs.renameSync(oldPath, newPath);\n        if (err) {\n          console.log(chalk.red(`${oldPath}(修改失败)`))\n        } else {\n          console.log(chalk.blue(`new path: ${newPath} ->(修改成功)`))\n        }\n      }\n    } else {\n      rename(`${path}/${readDir[i]}`)\n    }\n  }\n}\n\n/** \n * 参数为要修改文件夹的路径\n * 🌰\n */\nrename('/Users/namehtz/Documents/github/project/src')\n```\n到这里革命还未胜利，后续还要手动修改文件内容； /手动狗头","source":"_posts/node-rename-file.md","raw":"---\ntitle: Node.js 修改文件后缀\ndate: 2020-09-08 15:20:15\ntags: Node.js\n---\n\n把项目修改成ts，第一个痛点，修改文件后缀，突然意识到可以用Node.js写个脚本自动修改，于是就动手了；\n\n<!-- more -->\n```typescript\nimport fs = require('fs');\nimport  chalk = require('chalk');\n\nexport default function rename(path?: string): void {\n  if (path === undefined) return;\n  let readDir: string[] = fs.readdirSync(path);\n  for (let i = 0; i < readDir.length; i++) {\n    let isFile: boolean = fs.lstatSync(`${path}/${readDir[i]}`).isFile();\n    if (isFile) {\n      let data: string = fs.readFileSync(`${path}/${readDir[i]}`, {encoding: \"utf-8\"});\n      let name: string = readDir[i];\n      let reg = /js$/;\n      if (reg.test(name)) {\n        name = name.replace(reg, 'ts');\n        let oldPath: string = `${path}/${readDir[i]}`;\n        let newPath: string = `${path}/${name}`;\n        let err: any = fs.renameSync(oldPath, newPath);\n        if (err) {\n          console.log(chalk.red(`${oldPath}(修改失败)`))\n        } else {\n          console.log(chalk.blue(`new path: ${newPath} ->(修改成功)`))\n        }\n      }\n    } else {\n      rename(`${path}/${readDir[i]}`)\n    }\n  }\n}\n\n/** \n * 参数为要修改文件夹的路径\n * 🌰\n */\nrename('/Users/namehtz/Documents/github/project/src')\n```\n到这里革命还未胜利，后续还要手动修改文件内容； /手动狗头","slug":"node-rename-file","published":1,"updated":"2020-09-22T05:42:50.920Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi3000rjwj59eyl2mbd","content":"<p>把项目修改成ts，第一个痛点，修改文件后缀，突然意识到可以用Node.js写个脚本自动修改，于是就动手了；</p>\n<a id=\"more\"></a>\n<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span>  chalk = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;chalk&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rename</span>(<span class=\"params\">path?: <span class=\"built_in\">string</span></span>): <span class=\"title\">void</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path === <span class=\"literal\">undefined</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> readDir: <span class=\"built_in\">string</span>[] = fs.readdirSync(path);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; readDir.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> isFile: <span class=\"built_in\">boolean</span> = fs.lstatSync(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>).isFile();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isFile) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> data: <span class=\"built_in\">string</span> = fs.readFileSync(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>, &#123;encoding: <span class=\"string\">&quot;utf-8&quot;</span>&#125;);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> name: <span class=\"built_in\">string</span> = readDir[i];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/js$/</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (reg.test(name)) &#123;</span><br><span class=\"line\">        name = name.replace(reg, <span class=\"string\">&#x27;ts&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> oldPath: <span class=\"built_in\">string</span> = <span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> newPath: <span class=\"built_in\">string</span> = <span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;name&#125;</span>`</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> err: <span class=\"built_in\">any</span> = fs.renameSync(oldPath, newPath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(chalk.red(<span class=\"string\">`<span class=\"subst\">$&#123;oldPath&#125;</span>(修改失败)`</span>))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(chalk.blue(<span class=\"string\">`new path: <span class=\"subst\">$&#123;newPath&#125;</span> -&gt;(修改成功)`</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      rename(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * 参数为要修改文件夹的路径</span></span><br><span class=\"line\"><span class=\"comment\"> * 🌰</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">rename(<span class=\"string\">&#x27;/Users/namehtz/Documents/github/project/src&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>到这里革命还未胜利，后续还要手动修改文件内容； /手动狗头</p>\n","site":{"data":{}},"excerpt":"<p>把项目修改成ts，第一个痛点，修改文件后缀，突然意识到可以用Node.js写个脚本自动修改，于是就动手了；</p>","more":"<figure class=\"highlight typescript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">import</span>  chalk = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;chalk&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">rename</span>(<span class=\"params\">path?: <span class=\"built_in\">string</span></span>): <span class=\"title\">void</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (path === <span class=\"literal\">undefined</span>) <span class=\"keyword\">return</span>;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> readDir: <span class=\"built_in\">string</span>[] = fs.readdirSync(path);</span><br><span class=\"line\">  <span class=\"keyword\">for</span> (<span class=\"keyword\">let</span> i = <span class=\"number\">0</span>; i &lt; readDir.length; i++) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> isFile: <span class=\"built_in\">boolean</span> = fs.lstatSync(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>).isFile();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isFile) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> data: <span class=\"built_in\">string</span> = fs.readFileSync(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>, &#123;encoding: <span class=\"string\">&quot;utf-8&quot;</span>&#125;);</span><br><span class=\"line\">      <span class=\"keyword\">let</span> name: <span class=\"built_in\">string</span> = readDir[i];</span><br><span class=\"line\">      <span class=\"keyword\">let</span> reg = <span class=\"regexp\">/js$/</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (reg.test(name)) &#123;</span><br><span class=\"line\">        name = name.replace(reg, <span class=\"string\">&#x27;ts&#x27;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">let</span> oldPath: <span class=\"built_in\">string</span> = <span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> newPath: <span class=\"built_in\">string</span> = <span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;name&#125;</span>`</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> err: <span class=\"built_in\">any</span> = fs.renameSync(oldPath, newPath);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(chalk.red(<span class=\"string\">`<span class=\"subst\">$&#123;oldPath&#125;</span>(修改失败)`</span>))</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">          <span class=\"built_in\">console</span>.log(chalk.blue(<span class=\"string\">`new path: <span class=\"subst\">$&#123;newPath&#125;</span> -&gt;(修改成功)`</span>))</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      rename(<span class=\"string\">`<span class=\"subst\">$&#123;path&#125;</span>/<span class=\"subst\">$&#123;readDir[i]&#125;</span>`</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/** </span></span><br><span class=\"line\"><span class=\"comment\"> * 参数为要修改文件夹的路径</span></span><br><span class=\"line\"><span class=\"comment\"> * 🌰</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">rename(<span class=\"string\">&#x27;/Users/namehtz/Documents/github/project/src&#x27;</span>)</span><br></pre></td></tr></table></figure>\n<p>到这里革命还未胜利，后续还要手动修改文件内容； /手动狗头</p>"},{"title":"那些组件库","date":"2020-09-23T22:10:23.000Z","_content":"### React：\n1. `antd` 是基于 Ant Design 设计规范实现的 [高质量 React 组件库](https://ant.design/components/overview-cn/)\n\n2. [MATERIAL-UI](https://material-ui.com) React 组件用于更快速、更简便的 web 开发。\n\n\n\n### Vue\n\n1. [Vuetify](https://vuetifyjs.com) 是 Vue.js 的头号组件库，自 2016 年以来一直在积极开发。\n\n2. [Element](https://element.eleme.cn)，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n\n3. [Mint UI](http://mint-ui.github.io) 基于 Vue.js 的移动端组件库\n\n4. [PrimeVue](https://athemes.com)\n\n5. [BootstrapVue](https://bootstrap-vue.org)\n\n\n简单列举几个；在 `Google` 上搜索关键字 `React｜Vue component library` 会获取到更多有用的数据;","source":"_posts/component-library.md","raw":"---\ntitle: 那些组件库\ndate: 2020-09-24 06:10:23\ntags: component library\n---\n### React：\n1. `antd` 是基于 Ant Design 设计规范实现的 [高质量 React 组件库](https://ant.design/components/overview-cn/)\n\n2. [MATERIAL-UI](https://material-ui.com) React 组件用于更快速、更简便的 web 开发。\n\n\n\n### Vue\n\n1. [Vuetify](https://vuetifyjs.com) 是 Vue.js 的头号组件库，自 2016 年以来一直在积极开发。\n\n2. [Element](https://element.eleme.cn)，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库\n\n3. [Mint UI](http://mint-ui.github.io) 基于 Vue.js 的移动端组件库\n\n4. [PrimeVue](https://athemes.com)\n\n5. [BootstrapVue](https://bootstrap-vue.org)\n\n\n简单列举几个；在 `Google` 上搜索关键字 `React｜Vue component library` 会获取到更多有用的数据;","slug":"component-library","published":1,"updated":"2020-09-23T07:25:39.941Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi5000ujwj5g6n7gmc4","content":"<h3 id=\"React：\"><a href=\"#React：\" class=\"headerlink\" title=\"React：\"></a>React：</h3><ol>\n<li><p><code>antd</code> 是基于 Ant Design 设计规范实现的 <a href=\"https://ant.design/components/overview-cn/\">高质量 React 组件库</a></p>\n</li>\n<li><p><a href=\"https://material-ui.com/\">MATERIAL-UI</a> React 组件用于更快速、更简便的 web 开发。</p>\n</li>\n</ol>\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ol>\n<li><p><a href=\"https://vuetifyjs.com/\">Vuetify</a> 是 Vue.js 的头号组件库，自 2016 年以来一直在积极开发。</p>\n</li>\n<li><p><a href=\"https://element.eleme.cn/\">Element</a>，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库</p>\n</li>\n<li><p><a href=\"http://mint-ui.github.io/\">Mint UI</a> 基于 Vue.js 的移动端组件库</p>\n</li>\n<li><p><a href=\"https://athemes.com/\">PrimeVue</a></p>\n</li>\n<li><p><a href=\"https://bootstrap-vue.org/\">BootstrapVue</a></p>\n</li>\n</ol>\n<p>简单列举几个；在 <code>Google</code> 上搜索关键字 <code>React｜Vue component library</code> 会获取到更多有用的数据;</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"React：\"><a href=\"#React：\" class=\"headerlink\" title=\"React：\"></a>React：</h3><ol>\n<li><p><code>antd</code> 是基于 Ant Design 设计规范实现的 <a href=\"https://ant.design/components/overview-cn/\">高质量 React 组件库</a></p>\n</li>\n<li><p><a href=\"https://material-ui.com/\">MATERIAL-UI</a> React 组件用于更快速、更简便的 web 开发。</p>\n</li>\n</ol>\n<h3 id=\"Vue\"><a href=\"#Vue\" class=\"headerlink\" title=\"Vue\"></a>Vue</h3><ol>\n<li><p><a href=\"https://vuetifyjs.com/\">Vuetify</a> 是 Vue.js 的头号组件库，自 2016 年以来一直在积极开发。</p>\n</li>\n<li><p><a href=\"https://element.eleme.cn/\">Element</a>，一套为开发者、设计师和产品经理准备的基于 Vue 2.0 的桌面端组件库</p>\n</li>\n<li><p><a href=\"http://mint-ui.github.io/\">Mint UI</a> 基于 Vue.js 的移动端组件库</p>\n</li>\n<li><p><a href=\"https://athemes.com/\">PrimeVue</a></p>\n</li>\n<li><p><a href=\"https://bootstrap-vue.org/\">BootstrapVue</a></p>\n</li>\n</ol>\n<p>简单列举几个；在 <code>Google</code> 上搜索关键字 <code>React｜Vue component library</code> 会获取到更多有用的数据;</p>\n"},{"title":"JS Array 里找出，最大值、最小值","date":"2020-09-23T02:35:30.000Z","_content":"\n#### Math\n+ max\n```javascript\nfunction max(arr) {\n  return Math.max.apply(null, arr);\n}\nlet list = [5,4,3,0,2,9];\nmax(list) // 9\n```\n<!-- more -->\n+ min \n```javascript\nfunction min(arr) {\n  return Math.min.apply(null, arr);\n}\nlet list = [5,4,3,0,2,9,100,1024,32,16,8,21,30];\nmin(list) // 0\n```\n<b class=\"bgc-e4e6e8\">Math.min</b>  <b class=\"bgc-e4e6e8\">Math.max</b> 都比较消耗堆栈  \n\n\n#### reduce\n+ max\n```javascript\nfunction max(arr) {\n  return arr.reduce((a,b) => (a > b ? a : b))\n}\nlet list = [5,4,3,0,2,9,100,1024,32,16,8,21,30];\nmax(list) // 1024\n```\n+ min\n```javascript\nfunction min(arr) {\n  return arr.reduce((a,b) => (a < b ? a : b))\n}\nlet list = [5,4,3,0,2,9,100,1024,32,16,8,21,30];\nmin(list) // 0\n```\n","source":"_posts/js-array-min-max.md","raw":"---\ntitle: JS Array 里找出，最大值、最小值\ntags: javaScript\ndate: 2020-09-23 10:35:30\n---\n\n#### Math\n+ max\n```javascript\nfunction max(arr) {\n  return Math.max.apply(null, arr);\n}\nlet list = [5,4,3,0,2,9];\nmax(list) // 9\n```\n<!-- more -->\n+ min \n```javascript\nfunction min(arr) {\n  return Math.min.apply(null, arr);\n}\nlet list = [5,4,3,0,2,9,100,1024,32,16,8,21,30];\nmin(list) // 0\n```\n<b class=\"bgc-e4e6e8\">Math.min</b>  <b class=\"bgc-e4e6e8\">Math.max</b> 都比较消耗堆栈  \n\n\n#### reduce\n+ max\n```javascript\nfunction max(arr) {\n  return arr.reduce((a,b) => (a > b ? a : b))\n}\nlet list = [5,4,3,0,2,9,100,1024,32,16,8,21,30];\nmax(list) // 1024\n```\n+ min\n```javascript\nfunction min(arr) {\n  return arr.reduce((a,b) => (a < b ? a : b))\n}\nlet list = [5,4,3,0,2,9,100,1024,32,16,8,21,30];\nmin(list) // 0\n```\n","slug":"js-array-min-max","published":1,"updated":"2020-09-23T02:35:30.518Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi5000wjwj58el1ghen","content":"<h4 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h4><ul>\n<li>max<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">max</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max.apply(<span class=\"literal\">null</span>, arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\">max(list) <span class=\"comment\">// 9</span></span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a></li>\n<li>min <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">min</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.min.apply(<span class=\"literal\">null</span>, arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">100</span>,<span class=\"number\">1024</span>,<span class=\"number\">32</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>,<span class=\"number\">21</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">min(list) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n<b class=\"bgc-e4e6e8\">Math.min</b>  <b class=\"bgc-e4e6e8\">Math.max</b> 都比较消耗堆栈  </li>\n</ul>\n<h4 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h4><ul>\n<li>max<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">max</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> (a &gt; b ? a : b))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">100</span>,<span class=\"number\">1024</span>,<span class=\"number\">32</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>,<span class=\"number\">21</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">max(list) <span class=\"comment\">// 1024</span></span><br></pre></td></tr></table></figure></li>\n<li>min<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">min</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> (a &lt; b ? a : b))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">100</span>,<span class=\"number\">1024</span>,<span class=\"number\">32</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>,<span class=\"number\">21</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">min(list) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h4 id=\"Math\"><a href=\"#Math\" class=\"headerlink\" title=\"Math\"></a>Math</h4><ul>\n<li>max<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">max</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.max.apply(<span class=\"literal\">null</span>, arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>];</span><br><span class=\"line\">max(list) <span class=\"comment\">// 9</span></span><br></pre></td></tr></table></figure>","more":"</li>\n<li>min <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">min</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"built_in\">Math</span>.min.apply(<span class=\"literal\">null</span>, arr);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">100</span>,<span class=\"number\">1024</span>,<span class=\"number\">32</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>,<span class=\"number\">21</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">min(list) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n<b class=\"bgc-e4e6e8\">Math.min</b>  <b class=\"bgc-e4e6e8\">Math.max</b> 都比较消耗堆栈  </li>\n</ul>\n<h4 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h4><ul>\n<li>max<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">max</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> (a &gt; b ? a : b))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">100</span>,<span class=\"number\">1024</span>,<span class=\"number\">32</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>,<span class=\"number\">21</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">max(list) <span class=\"comment\">// 1024</span></span><br></pre></td></tr></table></figure></li>\n<li>min<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">min</span>(<span class=\"params\">arr</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> arr.reduce(<span class=\"function\">(<span class=\"params\">a,b</span>) =&gt;</span> (a &lt; b ? a : b))</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">let</span> list = [<span class=\"number\">5</span>,<span class=\"number\">4</span>,<span class=\"number\">3</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"number\">100</span>,<span class=\"number\">1024</span>,<span class=\"number\">32</span>,<span class=\"number\">16</span>,<span class=\"number\">8</span>,<span class=\"number\">21</span>,<span class=\"number\">30</span>];</span><br><span class=\"line\">min(list) <span class=\"comment\">// 0</span></span><br></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"Linux 命令","date":"2020-09-16T06:34:27.000Z","_content":"\n\n###  <font color=\"#dd0000\">1. 文件和目录</font>\n\n<font color=\"#dd0000\">1.1</font> `cd` 命令，用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。\n\n```shell\ncd /home    #进入 '/home' 目录\ncd ..       #返回上一级目录 \ncd ../..    #返回上两级目录 \ncd          #进入个人的主目录 \ncd ~user1   #进入个人的主目录 \ncd -        #返回上次所在的目录\n```\n<!--more -->\n<font color=\"#dd0000\">1.2 </font> `pwd` 命令，显示工作路径\n\n```shell\n[root@mailvip ~]# pwd\n/root\n```\n\n<font color=\"#dd0000\">1.3</font> `ls` 命令，查看文件与目录的命令，list之意\n\n```shell\nls       #查看目录中的文件 \nls -l    #显示文件和目录的详细资料 \nls -a    #列出全部文件，包含隐藏文件\nls -R    #连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来  \nls [0-9] #显示包含数字的文件名和目录名\n```\n\n<font color=\"#dd0000\">1.4</font> `cp` 命令，用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下\n\n```shell\n-a   #将文件的特性一起复制\n-p   #连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份\n-i   #若目标文件已经存在时，在覆盖时会先询问操作的进行\n-r   #递归持续复制，用于目录的复制行为 //经常使用递归复制\n-u   #目标文件与源文件有差异时才会复制\n```\n\n<font color=\"#dd0000\">1.5</font> `mv` 命令，用于移动文件、目录或更名，move之意\n\n```shell\n-f   #force强制的意思，如果目标文件已经存在，不会询问而直接覆盖\n-i   #若目标文件已经存在，就会询问是否覆盖\n-u   #若目标文件已经存在，且比目标文件新，才会更新\n```\n\n<font color=\"#dd0000\">1.6</font> `rm` 命令，用于删除文件或目录，`remove` 之意\n\n```shell\n-f   #就是force的意思，忽略不存在的文件，不会出现警告消息\n-i   #互动模式，在删除前会询问用户是否操作\n-r   #递归删除，最常用于目录删除，它是一个非常危险的参数\n```\n\n###  <font color=\"#dd0000\">2. 查看文件内容</font>\n\n<font color=\"#dd0000\">2.1</font> `cat` 命令，用于查看文本文件的内容，后接要查看的文件名，通常可用管道与`more`和`less`一起使用\n\n```shell\ncat file1     #从第一个字节开始正向查看文件的内容 \ntac file1     #从最后一行开始反向查看一个文件的内容 \ncat -n file1  #标示文件的行数 \nmore file1    #查看一个长文件的内容 \n\nhead -n 2 file1      #查看一个文件的前两行 \ntail -n 2 file1      #查看一个文件的最后两行 \ntail -n +1000 file1  #从1000行开始显示，显示1000行以后的\ncat filename | head -n 3000 | tail -n +1000  #显示1000行到3000行\ncat filename | tail -n +3000 | head -n 1000  #从第3000行开始，显示1000(即显示3000~3999行)\n```\n\n###  <font color=\"#dd0000\">3. 文件搜索</font>\n\n<font color=\"#dd0000\">3.1</font> `find` 命令，用来查找系统的\n\n```shell\nfind / -name file1                  #从 '/' 开始进入根文件系统搜索文件和目录 \nfind / -user user1                  #搜索属于用户 'user1' 的文件和目录 \nfind /usr/bin -type f -atime +100   #搜索在过去100天内未被使用过的执行文件 \nfind /usr/bin -type f -mtime -10    #搜索在10天内被创建或者修改过的文件 \nwhereis halt     #显示一个二进制文件、源码或man的位置 \nwhich halt       #显示一个二进制文件或可执行文件的完整路径\n```\n\n<font color=\"#dd0000\">3.2</font> 删除大于50M的文件：\n\n```shell\nfind /var/mail/ -size +50M -exec rm {} ＼;\n```\n\n### <font color=\"#dd000\"> 4. 文件的权限 - 使用 \"+\" 设置权限，使用 \"-\" 用于取消</font>\n\n<font color=\"#dd0000\">4.1</font> `chmod` 命令，改变文件/文件夹权限\n```shell\nls -lh                     #显示权限 \nchmod ugo+rwx directory1   #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r，4 ）、写(w，2)和执行(x，1)的权限 \nchmod go-rwx directory1    #删除群组(g)与其他人(o)对目录的读写执行权限\n```\n\n<font color=\"#dd0000\">4.2</font> `chown` 命令，改变文件的所有者\n\n```shell\nchown user1 file1          #改变一个文件的所有人属性 \nchown -R user1 directory1  #改变一个目录的所有人属性并同时改变改目录下所有文件的属性 \nchown user1:group1 file1   #改变一个文件的所有人和群组属性\n```\n\n<font color=\"#dd0000\">4.3</font> `chgrp` 命令，改变文件所属用户组\n```shell\nchgrp group1 file1     #改变文件的群组\n```\n\n### <font color=\"#dd000\">5. 文本处理</font>\n\n<font color=\"#dd0000\">5.1</font> `grep` 命令，分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等\n\n```shell\ngrep Aug /var/log/messages      #在文件 '/var/log/messages'中查找关键词\"Aug\" \ngrep ^Aug /var/log/messages     #在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇 \ngrep [0-9]  /var/log/messages   #选择 '/var/log/messages' 文件中所有包含数字的行 \ngrep Aug -R /var/log/*          #在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\" \nsed 's/stringa1/stringa2/g' example.txt  #将example.txt文件中的 \"string1\" 替换成 \"string2\" \nsed '/^$/d' example.txt         #从example.txt文件中删除所有空白行\n```\n\n<font color=\"#dd0000\">5.2</font> `paste` 命令\n\n```shell\npaste file1 file2         #合并两个文件或两栏的内容 \npaste -d '+' file1 file2  #合并两个文件或两栏的内容，中间用\"+\"区分\n```\n\n<font color=\"#dd0000\">5.3 </font> `sort` 命令\n\n```shell\nsort file1 file2            #排序两个文件的内容 \nsort file1 file2 | uniq     #取出两个文件的并集(重复的行只保留一份) \nsort file1 file2 | uniq -u  #删除交集，留下其他的行 \nsort file1 file2 | uniq -d  #取出两个文件的交集(只留下同时存在于两个文件中的文件)\n```\n\n<font color=\"#dd0000\">5.4</font> `comm` 命令\n\n```shell\ncomm -1 file1 file2   #比较两个文件的内容只删除 'file1' 所包含的内容 \ncomm -2 file1 file2   #比较两个文件的内容只删除 'file2' 所包含的内容 \ncomm -3 file1 file2   #比较两个文件的内容只删除两个文件共有的部分\n```\n\n### <font color=\"#dd000\">6. 打包和压缩文件</font>\n\n<font color=\"#dd0000\">6.1 </font> `tar` 命令，对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压\n\n```shell\n-c  #新建打包文件\n-t  #查看打包文件的内容含有哪些文件名\n-x  #解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中\n-j  #通过bzip2的支持进行压缩/解压缩\n-z  #通过gzip的支持进行压缩/解压缩\n-v  #在压缩/解压缩过程中，将正在处理的文件名显示出来\n-f filename  #filename为要处理的文件\n-C dir  #指定压缩/解压缩的目录dir\n```\n\n<font color=\"#dd0000\">6.2</font> 压缩：`tar -jcv -f filename.tar.bz2` (要被处理的文件或目录名称) 查询：`tar -jtv -f filename.tar.bz2` 解压：`tar -jxv -f filename.tar.bz2 -C` (欲解压缩的目录)\n\n```shell\nbunzip2 file1.bz2  #解压一个叫做 'file1.bz2'的文件 \nbzip2 file1        #压缩一个叫做 'file1' 的文件 \ngunzip file1.gz    #解压一个叫做 'file1.gz'的文件 \ngzip file1         #压缩一个叫做 'file1'的文件 \ngzip -9 file1      #最大程度压缩 \nrar a file1.rar test_file         #创建一个叫做 'file1.rar' 的包 \nrar a file1.rar file1 file2 dir1  #同时压缩 'file1', 'file2' 以及目录 'dir1' \nrar x file1.rar    #解压rar包\n\nzip file1.zip file1   #创建一个zip格式的压缩包 \nunzip file1.zip       #解压一个zip格式压缩包 \nzip -r file1.zip file1 file2 dir1    #将几个文件和目录同时压缩成一个zip格式的压缩包\n```\n\n### <font color=\"#dd000\">7. 系统和关机（关机、重启和登出）</font>\n```shell\nshutdown -h now  #关闭系统(1) \ninit 0           #关闭系统(2) \ntelinit 0        #关闭系统(3) \nshutdown -h hours:minutes &   #按预定时间关闭系统 \nshutdown -c      #取消按预定时间关闭系统 \nshutdown -r now  #重启(1) \nreboot           #重启(2) \nlogout           #注销 \ntime             #测算一个命令（即程序）的执行时间 \n```\n\n### <font color=\"#dd000\">8. 进程相关的命令</font>\n\n<font color=\"#dd0000\">8.1 </font> `jps` 命令，显示当前系统的java进程情况，及其id号 `jps (Java Virtual Machine Process Status Tool)` 是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。\n\n<font color=\"#dd0000\">8.2</font> `ps` 命令，用于将某个时间点的进程运行情况选取下来并输出，`process` 之意\n\n```shell\n-A   #所有的进程均显示出来\n-a   #不与terminal有关的所有进程\n-u   #有效用户的相关进程\n-x   #一般与a参数一起使用，可列出较完整的信息\n-l   #较长，较详细地将PID的信息列出\n\nps aux  # 查看系统所有的进程数据\nps ax   # 查看不与terminal有关的所有进程\nps -lA  # 查看系统所有的进程数据\nps axjf # 查看连同一部分进程树状态\n```\n\n<font color=\"#dd0000\">8.3</font> `kill` 命令,用于向某个工作（jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用\n\n命令格式 : kill[命令参数][进程id]\n\n命令参数:\n\n```shell\n-l  #信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n-a  #当处理当前进程时，不限制命令名和进程号的对应关系\n-p  #指定kill 命令只打印相关进程的进程号，而不发送任何信号\n-s  #指定发送信号\n-u  #指定用户\n\n```\n\n🌰1：列出所有信号名称 命令：`kill -l` 输出：\n\n```shell\n[root@localhost test6]# kill -l\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL\n 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE\n 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2\n13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT\n17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU\n25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH\n29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN\n35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4\n39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12\n47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14\n51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10\n55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6\n59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n```\n\n说明：\n\n\n只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。   下面是常用的信号\n\n```shell\nHUP     1     #终端断线\nINT     2    #中断（同 Ctrl + C）\nQUIT    3    #退出（同 Ctrl + \\）\nTERM    15    #终止\nKILL    9    #强制终止\nCONT    18    #继续（与STOP相反， fg/bg命令）\nSTOP    19   #暂停（同 Ctrl + Z）\n```\n\n\n🌰2: 得到指定信号的数值\n\n```shell\n[root@localhost test6]# kill -l KILL\n[root@localhost test6]# kill -l SIGKILL\n[root@localhost test6]# kill -l TERM\n[root@localhost test6]# kill -l SIGTERM\n[root@localhost test6]#\n```\n\n\n🌰3: 先用 `ps` 查找进程，然后用 `kill` 杀掉\n\n```shell\n#命令：\nkill 3268\n[root@localhost test6]# ps -ef|grep vim \nroot      3268  2884  0 16:21 pts/1    00:00:00 vim install.log\nroot      3370  2822  0 16:21 pts/0    00:00:00 grep vim\n[root@localhost test6]# kill 3268 \n```\n\n🌰4: 彻底杀死进程\n\n```shell\n #命令：\nkill –9 3268   # -9 强制杀掉进程\n```\n\n<font color=\"#dd0000\">8.4</font> `killall` 命令，向一个命令启动的进程发送一个信号，用于杀死指定名字的进程\n\n命令格式 : killall[命令参数][进程名]\n\n```shell\n#命令参数：\n-Z      #只杀死拥有scontext 的进程\n-e      #要求匹配进程名称\n-I      #忽略小写\n-g      #杀死进程组而不是进程\n-i      #交互模式，杀死进程前先询问用户\n-l      #列出所有的已知信号名称\n-q      #不输出警告信息\n-s      #发送指定的信号\n-v      #报告信号是否成功发送\n-w      #等待进程死亡\n--help  #显示帮助信息\n--version  #显示版本显示\n```\n\n🌰: \n\n```shell\n#1：杀死所有同名进程\n    killall nginx\n    killall -9 bash\n\n#2.向进程发送指定信号\n    killall -TERM ngixn  或者  killall -KILL nginx\n```\n\n<font color=\"#dd0000\">8.5</font> `top` 命令，是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。\n\n如何杀死进程：\n\n```shell\n（1）图形化界面的方式\n（2）kill -9 pid  （-9表示强制关闭）\n（3）killall -9 程序的名字\n（4）pkill 程序的名字\n\n```\n\n\n查看进程端口号：\n\n```shell\nnetstat -tunlp|grep 端口号\n```","source":"_posts/linux-command.md","raw":"---\ntitle: Linux 命令\ndate: 2020-09-16 14:34:27\ntags: Linux\n---\n\n\n###  <font color=\"#dd0000\">1. 文件和目录</font>\n\n<font color=\"#dd0000\">1.1</font> `cd` 命令，用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。\n\n```shell\ncd /home    #进入 '/home' 目录\ncd ..       #返回上一级目录 \ncd ../..    #返回上两级目录 \ncd          #进入个人的主目录 \ncd ~user1   #进入个人的主目录 \ncd -        #返回上次所在的目录\n```\n<!--more -->\n<font color=\"#dd0000\">1.2 </font> `pwd` 命令，显示工作路径\n\n```shell\n[root@mailvip ~]# pwd\n/root\n```\n\n<font color=\"#dd0000\">1.3</font> `ls` 命令，查看文件与目录的命令，list之意\n\n```shell\nls       #查看目录中的文件 \nls -l    #显示文件和目录的详细资料 \nls -a    #列出全部文件，包含隐藏文件\nls -R    #连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来  \nls [0-9] #显示包含数字的文件名和目录名\n```\n\n<font color=\"#dd0000\">1.4</font> `cp` 命令，用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下\n\n```shell\n-a   #将文件的特性一起复制\n-p   #连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份\n-i   #若目标文件已经存在时，在覆盖时会先询问操作的进行\n-r   #递归持续复制，用于目录的复制行为 //经常使用递归复制\n-u   #目标文件与源文件有差异时才会复制\n```\n\n<font color=\"#dd0000\">1.5</font> `mv` 命令，用于移动文件、目录或更名，move之意\n\n```shell\n-f   #force强制的意思，如果目标文件已经存在，不会询问而直接覆盖\n-i   #若目标文件已经存在，就会询问是否覆盖\n-u   #若目标文件已经存在，且比目标文件新，才会更新\n```\n\n<font color=\"#dd0000\">1.6</font> `rm` 命令，用于删除文件或目录，`remove` 之意\n\n```shell\n-f   #就是force的意思，忽略不存在的文件，不会出现警告消息\n-i   #互动模式，在删除前会询问用户是否操作\n-r   #递归删除，最常用于目录删除，它是一个非常危险的参数\n```\n\n###  <font color=\"#dd0000\">2. 查看文件内容</font>\n\n<font color=\"#dd0000\">2.1</font> `cat` 命令，用于查看文本文件的内容，后接要查看的文件名，通常可用管道与`more`和`less`一起使用\n\n```shell\ncat file1     #从第一个字节开始正向查看文件的内容 \ntac file1     #从最后一行开始反向查看一个文件的内容 \ncat -n file1  #标示文件的行数 \nmore file1    #查看一个长文件的内容 \n\nhead -n 2 file1      #查看一个文件的前两行 \ntail -n 2 file1      #查看一个文件的最后两行 \ntail -n +1000 file1  #从1000行开始显示，显示1000行以后的\ncat filename | head -n 3000 | tail -n +1000  #显示1000行到3000行\ncat filename | tail -n +3000 | head -n 1000  #从第3000行开始，显示1000(即显示3000~3999行)\n```\n\n###  <font color=\"#dd0000\">3. 文件搜索</font>\n\n<font color=\"#dd0000\">3.1</font> `find` 命令，用来查找系统的\n\n```shell\nfind / -name file1                  #从 '/' 开始进入根文件系统搜索文件和目录 \nfind / -user user1                  #搜索属于用户 'user1' 的文件和目录 \nfind /usr/bin -type f -atime +100   #搜索在过去100天内未被使用过的执行文件 \nfind /usr/bin -type f -mtime -10    #搜索在10天内被创建或者修改过的文件 \nwhereis halt     #显示一个二进制文件、源码或man的位置 \nwhich halt       #显示一个二进制文件或可执行文件的完整路径\n```\n\n<font color=\"#dd0000\">3.2</font> 删除大于50M的文件：\n\n```shell\nfind /var/mail/ -size +50M -exec rm {} ＼;\n```\n\n### <font color=\"#dd000\"> 4. 文件的权限 - 使用 \"+\" 设置权限，使用 \"-\" 用于取消</font>\n\n<font color=\"#dd0000\">4.1</font> `chmod` 命令，改变文件/文件夹权限\n```shell\nls -lh                     #显示权限 \nchmod ugo+rwx directory1   #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r，4 ）、写(w，2)和执行(x，1)的权限 \nchmod go-rwx directory1    #删除群组(g)与其他人(o)对目录的读写执行权限\n```\n\n<font color=\"#dd0000\">4.2</font> `chown` 命令，改变文件的所有者\n\n```shell\nchown user1 file1          #改变一个文件的所有人属性 \nchown -R user1 directory1  #改变一个目录的所有人属性并同时改变改目录下所有文件的属性 \nchown user1:group1 file1   #改变一个文件的所有人和群组属性\n```\n\n<font color=\"#dd0000\">4.3</font> `chgrp` 命令，改变文件所属用户组\n```shell\nchgrp group1 file1     #改变文件的群组\n```\n\n### <font color=\"#dd000\">5. 文本处理</font>\n\n<font color=\"#dd0000\">5.1</font> `grep` 命令，分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等\n\n```shell\ngrep Aug /var/log/messages      #在文件 '/var/log/messages'中查找关键词\"Aug\" \ngrep ^Aug /var/log/messages     #在文件 '/var/log/messages'中查找以\"Aug\"开始的词汇 \ngrep [0-9]  /var/log/messages   #选择 '/var/log/messages' 文件中所有包含数字的行 \ngrep Aug -R /var/log/*          #在目录 '/var/log' 及随后的目录中搜索字符串\"Aug\" \nsed 's/stringa1/stringa2/g' example.txt  #将example.txt文件中的 \"string1\" 替换成 \"string2\" \nsed '/^$/d' example.txt         #从example.txt文件中删除所有空白行\n```\n\n<font color=\"#dd0000\">5.2</font> `paste` 命令\n\n```shell\npaste file1 file2         #合并两个文件或两栏的内容 \npaste -d '+' file1 file2  #合并两个文件或两栏的内容，中间用\"+\"区分\n```\n\n<font color=\"#dd0000\">5.3 </font> `sort` 命令\n\n```shell\nsort file1 file2            #排序两个文件的内容 \nsort file1 file2 | uniq     #取出两个文件的并集(重复的行只保留一份) \nsort file1 file2 | uniq -u  #删除交集，留下其他的行 \nsort file1 file2 | uniq -d  #取出两个文件的交集(只留下同时存在于两个文件中的文件)\n```\n\n<font color=\"#dd0000\">5.4</font> `comm` 命令\n\n```shell\ncomm -1 file1 file2   #比较两个文件的内容只删除 'file1' 所包含的内容 \ncomm -2 file1 file2   #比较两个文件的内容只删除 'file2' 所包含的内容 \ncomm -3 file1 file2   #比较两个文件的内容只删除两个文件共有的部分\n```\n\n### <font color=\"#dd000\">6. 打包和压缩文件</font>\n\n<font color=\"#dd0000\">6.1 </font> `tar` 命令，对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压\n\n```shell\n-c  #新建打包文件\n-t  #查看打包文件的内容含有哪些文件名\n-x  #解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中\n-j  #通过bzip2的支持进行压缩/解压缩\n-z  #通过gzip的支持进行压缩/解压缩\n-v  #在压缩/解压缩过程中，将正在处理的文件名显示出来\n-f filename  #filename为要处理的文件\n-C dir  #指定压缩/解压缩的目录dir\n```\n\n<font color=\"#dd0000\">6.2</font> 压缩：`tar -jcv -f filename.tar.bz2` (要被处理的文件或目录名称) 查询：`tar -jtv -f filename.tar.bz2` 解压：`tar -jxv -f filename.tar.bz2 -C` (欲解压缩的目录)\n\n```shell\nbunzip2 file1.bz2  #解压一个叫做 'file1.bz2'的文件 \nbzip2 file1        #压缩一个叫做 'file1' 的文件 \ngunzip file1.gz    #解压一个叫做 'file1.gz'的文件 \ngzip file1         #压缩一个叫做 'file1'的文件 \ngzip -9 file1      #最大程度压缩 \nrar a file1.rar test_file         #创建一个叫做 'file1.rar' 的包 \nrar a file1.rar file1 file2 dir1  #同时压缩 'file1', 'file2' 以及目录 'dir1' \nrar x file1.rar    #解压rar包\n\nzip file1.zip file1   #创建一个zip格式的压缩包 \nunzip file1.zip       #解压一个zip格式压缩包 \nzip -r file1.zip file1 file2 dir1    #将几个文件和目录同时压缩成一个zip格式的压缩包\n```\n\n### <font color=\"#dd000\">7. 系统和关机（关机、重启和登出）</font>\n```shell\nshutdown -h now  #关闭系统(1) \ninit 0           #关闭系统(2) \ntelinit 0        #关闭系统(3) \nshutdown -h hours:minutes &   #按预定时间关闭系统 \nshutdown -c      #取消按预定时间关闭系统 \nshutdown -r now  #重启(1) \nreboot           #重启(2) \nlogout           #注销 \ntime             #测算一个命令（即程序）的执行时间 \n```\n\n### <font color=\"#dd000\">8. 进程相关的命令</font>\n\n<font color=\"#dd0000\">8.1 </font> `jps` 命令，显示当前系统的java进程情况，及其id号 `jps (Java Virtual Machine Process Status Tool)` 是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。\n\n<font color=\"#dd0000\">8.2</font> `ps` 命令，用于将某个时间点的进程运行情况选取下来并输出，`process` 之意\n\n```shell\n-A   #所有的进程均显示出来\n-a   #不与terminal有关的所有进程\n-u   #有效用户的相关进程\n-x   #一般与a参数一起使用，可列出较完整的信息\n-l   #较长，较详细地将PID的信息列出\n\nps aux  # 查看系统所有的进程数据\nps ax   # 查看不与terminal有关的所有进程\nps -lA  # 查看系统所有的进程数据\nps axjf # 查看连同一部分进程树状态\n```\n\n<font color=\"#dd0000\">8.3</font> `kill` 命令,用于向某个工作（jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用\n\n命令格式 : kill[命令参数][进程id]\n\n命令参数:\n\n```shell\n-l  #信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称\n-a  #当处理当前进程时，不限制命令名和进程号的对应关系\n-p  #指定kill 命令只打印相关进程的进程号，而不发送任何信号\n-s  #指定发送信号\n-u  #指定用户\n\n```\n\n🌰1：列出所有信号名称 命令：`kill -l` 输出：\n\n```shell\n[root@localhost test6]# kill -l\n 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL\n 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE\n 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2\n13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT\n17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP\n21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU\n25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH\n29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN\n35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4\n39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8\n43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12\n47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14\n51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10\n55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6\n59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2\n63) SIGRTMAX-1  64) SIGRTMAX\n```\n\n说明：\n\n\n只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。   下面是常用的信号\n\n```shell\nHUP     1     #终端断线\nINT     2    #中断（同 Ctrl + C）\nQUIT    3    #退出（同 Ctrl + \\）\nTERM    15    #终止\nKILL    9    #强制终止\nCONT    18    #继续（与STOP相反， fg/bg命令）\nSTOP    19   #暂停（同 Ctrl + Z）\n```\n\n\n🌰2: 得到指定信号的数值\n\n```shell\n[root@localhost test6]# kill -l KILL\n[root@localhost test6]# kill -l SIGKILL\n[root@localhost test6]# kill -l TERM\n[root@localhost test6]# kill -l SIGTERM\n[root@localhost test6]#\n```\n\n\n🌰3: 先用 `ps` 查找进程，然后用 `kill` 杀掉\n\n```shell\n#命令：\nkill 3268\n[root@localhost test6]# ps -ef|grep vim \nroot      3268  2884  0 16:21 pts/1    00:00:00 vim install.log\nroot      3370  2822  0 16:21 pts/0    00:00:00 grep vim\n[root@localhost test6]# kill 3268 \n```\n\n🌰4: 彻底杀死进程\n\n```shell\n #命令：\nkill –9 3268   # -9 强制杀掉进程\n```\n\n<font color=\"#dd0000\">8.4</font> `killall` 命令，向一个命令启动的进程发送一个信号，用于杀死指定名字的进程\n\n命令格式 : killall[命令参数][进程名]\n\n```shell\n#命令参数：\n-Z      #只杀死拥有scontext 的进程\n-e      #要求匹配进程名称\n-I      #忽略小写\n-g      #杀死进程组而不是进程\n-i      #交互模式，杀死进程前先询问用户\n-l      #列出所有的已知信号名称\n-q      #不输出警告信息\n-s      #发送指定的信号\n-v      #报告信号是否成功发送\n-w      #等待进程死亡\n--help  #显示帮助信息\n--version  #显示版本显示\n```\n\n🌰: \n\n```shell\n#1：杀死所有同名进程\n    killall nginx\n    killall -9 bash\n\n#2.向进程发送指定信号\n    killall -TERM ngixn  或者  killall -KILL nginx\n```\n\n<font color=\"#dd0000\">8.5</font> `top` 命令，是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。\n\n如何杀死进程：\n\n```shell\n（1）图形化界面的方式\n（2）kill -9 pid  （-9表示强制关闭）\n（3）killall -9 程序的名字\n（4）pkill 程序的名字\n\n```\n\n\n查看进程端口号：\n\n```shell\nnetstat -tunlp|grep 端口号\n```","slug":"linux-command","published":1,"updated":"2020-09-22T10:17:44.697Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi6000zjwj57yv7byq3","content":"<h3 id=\"1-文件和目录\"><a href=\"#1-文件和目录\" class=\"headerlink\" title=\"1. 文件和目录\"></a><font color=\"#dd0000\">1. 文件和目录</font></h3><p><font color=\"#dd0000\">1.1</font> <code>cd</code> 命令，用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home    #进入 &#x27;/home&#x27; 目录</span><br><span class=\"line\">cd ..       #返回上一级目录 </span><br><span class=\"line\">cd ../..    #返回上两级目录 </span><br><span class=\"line\">cd          #进入个人的主目录 </span><br><span class=\"line\">cd ~user1   #进入个人的主目录 </span><br><span class=\"line\">cd -        #返回上次所在的目录</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p><font color=\"#dd0000\">1.2 </font> <code>pwd</code> 命令，显示工作路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@mailvip ~]# pwd</span><br><span class=\"line\">/root</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.3</font> <code>ls</code> 命令，查看文件与目录的命令，list之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls       #查看目录中的文件 </span><br><span class=\"line\">ls -l    #显示文件和目录的详细资料 </span><br><span class=\"line\">ls -a    #列出全部文件，包含隐藏文件</span><br><span class=\"line\">ls -R    #连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来  </span><br><span class=\"line\">ls [0-9] #显示包含数字的文件名和目录名</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.4</font> <code>cp</code> 命令，用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a   #将文件的特性一起复制</span><br><span class=\"line\">-p   #连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份</span><br><span class=\"line\">-i   #若目标文件已经存在时，在覆盖时会先询问操作的进行</span><br><span class=\"line\">-r   #递归持续复制，用于目录的复制行为 //经常使用递归复制</span><br><span class=\"line\">-u   #目标文件与源文件有差异时才会复制</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.5</font> <code>mv</code> 命令，用于移动文件、目录或更名，move之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-f   #force强制的意思，如果目标文件已经存在，不会询问而直接覆盖</span><br><span class=\"line\">-i   #若目标文件已经存在，就会询问是否覆盖</span><br><span class=\"line\">-u   #若目标文件已经存在，且比目标文件新，才会更新</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.6</font> <code>rm</code> 命令，用于删除文件或目录，<code>remove</code> 之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-f   #就是force的意思，忽略不存在的文件，不会出现警告消息</span><br><span class=\"line\">-i   #互动模式，在删除前会询问用户是否操作</span><br><span class=\"line\">-r   #递归删除，最常用于目录删除，它是一个非常危险的参数</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-查看文件内容\"><a href=\"#2-查看文件内容\" class=\"headerlink\" title=\"2. 查看文件内容\"></a><font color=\"#dd0000\">2. 查看文件内容</font></h3><p><font color=\"#dd0000\">2.1</font> <code>cat</code> 命令，用于查看文本文件的内容，后接要查看的文件名，通常可用管道与<code>more</code>和<code>less</code>一起使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat file1     #从第一个字节开始正向查看文件的内容 </span><br><span class=\"line\">tac file1     #从最后一行开始反向查看一个文件的内容 </span><br><span class=\"line\">cat -n file1  #标示文件的行数 </span><br><span class=\"line\">more file1    #查看一个长文件的内容 </span><br><span class=\"line\"></span><br><span class=\"line\">head -n 2 file1      #查看一个文件的前两行 </span><br><span class=\"line\">tail -n 2 file1      #查看一个文件的最后两行 </span><br><span class=\"line\">tail -n +1000 file1  #从1000行开始显示，显示1000行以后的</span><br><span class=\"line\">cat filename | head -n 3000 | tail -n +1000  #显示1000行到3000行</span><br><span class=\"line\">cat filename | tail -n +3000 | head -n 1000  #从第3000行开始，显示1000(即显示3000~3999行)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-文件搜索\"><a href=\"#3-文件搜索\" class=\"headerlink\" title=\"3. 文件搜索\"></a><font color=\"#dd0000\">3. 文件搜索</font></h3><p><font color=\"#dd0000\">3.1</font> <code>find</code> 命令，用来查找系统的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find / -name file1                  #从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录 </span><br><span class=\"line\">find / -user user1                  #搜索属于用户 &#x27;user1&#x27; 的文件和目录 </span><br><span class=\"line\">find /usr/bin -type f -atime +100   #搜索在过去100天内未被使用过的执行文件 </span><br><span class=\"line\">find /usr/bin -type f -mtime -10    #搜索在10天内被创建或者修改过的文件 </span><br><span class=\"line\">whereis halt     #显示一个二进制文件、源码或man的位置 </span><br><span class=\"line\">which halt       #显示一个二进制文件或可执行文件的完整路径</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">3.2</font> 删除大于50M的文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /var/mail/ -size +50M -exec rm &#123;&#125; ＼;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\"><a href=\"#4-文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\" class=\"headerlink\" title=\" 4. 文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消\"></a><font color=\"#dd000\"> 4. 文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</font></h3><p><font color=\"#dd0000\">4.1</font> <code>chmod</code> 命令，改变文件/文件夹权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -lh                     #显示权限 </span><br><span class=\"line\">chmod ugo+rwx directory1   #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r，4 ）、写(w，2)和执行(x，1)的权限 </span><br><span class=\"line\">chmod go-rwx directory1    #删除群组(g)与其他人(o)对目录的读写执行权限</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">4.2</font> <code>chown</code> 命令，改变文件的所有者</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown user1 file1          #改变一个文件的所有人属性 </span><br><span class=\"line\">chown -R user1 directory1  #改变一个目录的所有人属性并同时改变改目录下所有文件的属性 </span><br><span class=\"line\">chown user1:group1 file1   #改变一个文件的所有人和群组属性</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">4.3</font> <code>chgrp</code> 命令，改变文件所属用户组</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chgrp group1 file1     #改变文件的群组</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-文本处理\"><a href=\"#5-文本处理\" class=\"headerlink\" title=\"5. 文本处理\"></a><font color=\"#dd000\">5. 文本处理</font></h3><p><font color=\"#dd0000\">5.1</font> <code>grep</code> 命令，分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep Aug /var/log/messages      #在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot; </span><br><span class=\"line\">grep ^Aug /var/log/messages     #在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇 </span><br><span class=\"line\">grep [0-9]  /var/log/messages   #选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行 </span><br><span class=\"line\">grep Aug -R /var/log/*          #在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot; </span><br><span class=\"line\">sed &#x27;s/stringa1/stringa2/g&#x27; example.txt  #将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot; </span><br><span class=\"line\">sed &#x27;/^$/d&#x27; example.txt         #从example.txt文件中删除所有空白行</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">5.2</font> <code>paste</code> 命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paste file1 file2         #合并两个文件或两栏的内容 </span><br><span class=\"line\">paste -d &#x27;+&#x27; file1 file2  #合并两个文件或两栏的内容，中间用&quot;+&quot;区分</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">5.3 </font> <code>sort</code> 命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sort file1 file2            #排序两个文件的内容 </span><br><span class=\"line\">sort file1 file2 | uniq     #取出两个文件的并集(重复的行只保留一份) </span><br><span class=\"line\">sort file1 file2 | uniq -u  #删除交集，留下其他的行 </span><br><span class=\"line\">sort file1 file2 | uniq -d  #取出两个文件的交集(只留下同时存在于两个文件中的文件)</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">5.4</font> <code>comm</code> 命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comm -1 file1 file2   #比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容 </span><br><span class=\"line\">comm -2 file1 file2   #比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容 </span><br><span class=\"line\">comm -3 file1 file2   #比较两个文件的内容只删除两个文件共有的部分</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-打包和压缩文件\"><a href=\"#6-打包和压缩文件\" class=\"headerlink\" title=\"6. 打包和压缩文件\"></a><font color=\"#dd000\">6. 打包和压缩文件</font></h3><p><font color=\"#dd0000\">6.1 </font> <code>tar</code> 命令，对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-c  #新建打包文件</span><br><span class=\"line\">-t  #查看打包文件的内容含有哪些文件名</span><br><span class=\"line\">-x  #解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中</span><br><span class=\"line\">-j  #通过bzip2的支持进行压缩/解压缩</span><br><span class=\"line\">-z  #通过gzip的支持进行压缩/解压缩</span><br><span class=\"line\">-v  #在压缩/解压缩过程中，将正在处理的文件名显示出来</span><br><span class=\"line\">-f filename  #filename为要处理的文件</span><br><span class=\"line\">-C dir  #指定压缩/解压缩的目录dir</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">6.2</font> 压缩：<code>tar -jcv -f filename.tar.bz2</code> (要被处理的文件或目录名称) 查询：<code>tar -jtv -f filename.tar.bz2</code> 解压：<code>tar -jxv -f filename.tar.bz2 -C</code> (欲解压缩的目录)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bunzip2 file1.bz2  #解压一个叫做 &#x27;file1.bz2&#x27;的文件 </span><br><span class=\"line\">bzip2 file1        #压缩一个叫做 &#x27;file1&#x27; 的文件 </span><br><span class=\"line\">gunzip file1.gz    #解压一个叫做 &#x27;file1.gz&#x27;的文件 </span><br><span class=\"line\">gzip file1         #压缩一个叫做 &#x27;file1&#x27;的文件 </span><br><span class=\"line\">gzip -9 file1      #最大程度压缩 </span><br><span class=\"line\">rar a file1.rar test_file         #创建一个叫做 &#x27;file1.rar&#x27; 的包 </span><br><span class=\"line\">rar a file1.rar file1 file2 dir1  #同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27; </span><br><span class=\"line\">rar x file1.rar    #解压rar包</span><br><span class=\"line\"></span><br><span class=\"line\">zip file1.zip file1   #创建一个zip格式的压缩包 </span><br><span class=\"line\">unzip file1.zip       #解压一个zip格式压缩包 </span><br><span class=\"line\">zip -r file1.zip file1 file2 dir1    #将几个文件和目录同时压缩成一个zip格式的压缩包</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-系统和关机（关机、重启和登出）\"><a href=\"#7-系统和关机（关机、重启和登出）\" class=\"headerlink\" title=\"7. 系统和关机（关机、重启和登出）\"></a><font color=\"#dd000\">7. 系统和关机（关机、重启和登出）</font></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown -h now  #关闭系统(1) </span><br><span class=\"line\">init 0           #关闭系统(2) </span><br><span class=\"line\">telinit 0        #关闭系统(3) </span><br><span class=\"line\">shutdown -h hours:minutes &amp;   #按预定时间关闭系统 </span><br><span class=\"line\">shutdown -c      #取消按预定时间关闭系统 </span><br><span class=\"line\">shutdown -r now  #重启(1) </span><br><span class=\"line\">reboot           #重启(2) </span><br><span class=\"line\">logout           #注销 </span><br><span class=\"line\">time             #测算一个命令（即程序）的执行时间 </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-进程相关的命令\"><a href=\"#8-进程相关的命令\" class=\"headerlink\" title=\"8. 进程相关的命令\"></a><font color=\"#dd000\">8. 进程相关的命令</font></h3><p><font color=\"#dd0000\">8.1 </font> <code>jps</code> 命令，显示当前系统的java进程情况，及其id号 <code>jps (Java Virtual Machine Process Status Tool)</code> 是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p>\n<p><font color=\"#dd0000\">8.2</font> <code>ps</code> 命令，用于将某个时间点的进程运行情况选取下来并输出，<code>process</code> 之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-A   #所有的进程均显示出来</span><br><span class=\"line\">-a   #不与terminal有关的所有进程</span><br><span class=\"line\">-u   #有效用户的相关进程</span><br><span class=\"line\">-x   #一般与a参数一起使用，可列出较完整的信息</span><br><span class=\"line\">-l   #较长，较详细地将PID的信息列出</span><br><span class=\"line\"></span><br><span class=\"line\">ps aux  # 查看系统所有的进程数据</span><br><span class=\"line\">ps ax   # 查看不与terminal有关的所有进程</span><br><span class=\"line\">ps -lA  # 查看系统所有的进程数据</span><br><span class=\"line\">ps axjf # 查看连同一部分进程树状态</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">8.3</font> <code>kill</code> 命令,用于向某个工作（jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用</p>\n<p>命令格式 : kill[命令参数][进程id]</p>\n<p>命令参数:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-l  #信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</span><br><span class=\"line\">-a  #当处理当前进程时，不限制命令名和进程号的对应关系</span><br><span class=\"line\">-p  #指定kill 命令只打印相关进程的进程号，而不发送任何信号</span><br><span class=\"line\">-s  #指定发送信号</span><br><span class=\"line\">-u  #指定用户</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>🌰1：列出所有信号名称 命令：<code>kill -l</code> 输出：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost test6]# kill -l</span><br><span class=\"line\"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL</span><br><span class=\"line\"> 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE</span><br><span class=\"line\"> 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2</span><br><span class=\"line\">13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT</span><br><span class=\"line\">17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class=\"line\">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU</span><br><span class=\"line\">25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH</span><br><span class=\"line\">29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN</span><br><span class=\"line\">35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4</span><br><span class=\"line\">39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class=\"line\">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12</span><br><span class=\"line\">47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14</span><br><span class=\"line\">51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10</span><br><span class=\"line\">55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6</span><br><span class=\"line\">59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class=\"line\">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<p>只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。   下面是常用的信号</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HUP     1     #终端断线</span><br><span class=\"line\">INT     2    #中断（同 Ctrl + C）</span><br><span class=\"line\">QUIT    3    #退出（同 Ctrl + \\）</span><br><span class=\"line\">TERM    15    #终止</span><br><span class=\"line\">KILL    9    #强制终止</span><br><span class=\"line\">CONT    18    #继续（与STOP相反， fg/bg命令）</span><br><span class=\"line\">STOP    19   #暂停（同 Ctrl + Z）</span><br></pre></td></tr></table></figure>\n\n\n<p>🌰2: 得到指定信号的数值</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost test6]# kill -l KILL</span><br><span class=\"line\">[root@localhost test6]# kill -l SIGKILL</span><br><span class=\"line\">[root@localhost test6]# kill -l TERM</span><br><span class=\"line\">[root@localhost test6]# kill -l SIGTERM</span><br><span class=\"line\">[root@localhost test6]#</span><br></pre></td></tr></table></figure>\n\n\n<p>🌰3: 先用 <code>ps</code> 查找进程，然后用 <code>kill</code> 杀掉</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">命令：</span></span><br><span class=\"line\">kill 3268</span><br><span class=\"line\">[root@localhost test6]# ps -ef|grep vim </span><br><span class=\"line\">root      3268  2884  0 16:21 pts/1    00:00:00 vim install.log</span><br><span class=\"line\">root      3370  2822  0 16:21 pts/0    00:00:00 grep vim</span><br><span class=\"line\">[root@localhost test6]# kill 3268 </span><br></pre></td></tr></table></figure>\n\n<p>🌰4: 彻底杀死进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\">命令：</span></span><br><span class=\"line\">kill –9 3268   # -9 强制杀掉进程</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">8.4</font> <code>killall</code> 命令，向一个命令启动的进程发送一个信号，用于杀死指定名字的进程</p>\n<p>命令格式 : killall[命令参数][进程名]</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">命令参数：</span></span><br><span class=\"line\">-Z      #只杀死拥有scontext 的进程</span><br><span class=\"line\">-e      #要求匹配进程名称</span><br><span class=\"line\">-I      #忽略小写</span><br><span class=\"line\">-g      #杀死进程组而不是进程</span><br><span class=\"line\">-i      #交互模式，杀死进程前先询问用户</span><br><span class=\"line\">-l      #列出所有的已知信号名称</span><br><span class=\"line\">-q      #不输出警告信息</span><br><span class=\"line\">-s      #发送指定的信号</span><br><span class=\"line\">-v      #报告信号是否成功发送</span><br><span class=\"line\">-w      #等待进程死亡</span><br><span class=\"line\">--help  #显示帮助信息</span><br><span class=\"line\">--version  #显示版本显示</span><br></pre></td></tr></table></figure>\n\n<p>🌰: </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">1：杀死所有同名进程</span></span><br><span class=\"line\">    killall nginx</span><br><span class=\"line\">    killall -9 bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">2.向进程发送指定信号</span></span><br><span class=\"line\">    killall -TERM ngixn  或者  killall -KILL nginx</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">8.5</font> <code>top</code> 命令，是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。</p>\n<p>如何杀死进程：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（1）图形化界面的方式</span><br><span class=\"line\">（2）kill -9 pid  （-9表示强制关闭）</span><br><span class=\"line\">（3）killall -9 程序的名字</span><br><span class=\"line\">（4）pkill 程序的名字</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>查看进程端口号：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tunlp|grep 端口号</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"1-文件和目录\"><a href=\"#1-文件和目录\" class=\"headerlink\" title=\"1. 文件和目录\"></a><font color=\"#dd0000\">1. 文件和目录</font></h3><p><font color=\"#dd0000\">1.1</font> <code>cd</code> 命令，用于切换当前目录，它的参数是要切换到的目录的路径，可以是绝对路径，也可以是相对路径。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /home    #进入 &#x27;/home&#x27; 目录</span><br><span class=\"line\">cd ..       #返回上一级目录 </span><br><span class=\"line\">cd ../..    #返回上两级目录 </span><br><span class=\"line\">cd          #进入个人的主目录 </span><br><span class=\"line\">cd ~user1   #进入个人的主目录 </span><br><span class=\"line\">cd -        #返回上次所在的目录</span><br></pre></td></tr></table></figure>","more":"<p><font color=\"#dd0000\">1.2 </font> <code>pwd</code> 命令，显示工作路径</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@mailvip ~]# pwd</span><br><span class=\"line\">/root</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.3</font> <code>ls</code> 命令，查看文件与目录的命令，list之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls       #查看目录中的文件 </span><br><span class=\"line\">ls -l    #显示文件和目录的详细资料 </span><br><span class=\"line\">ls -a    #列出全部文件，包含隐藏文件</span><br><span class=\"line\">ls -R    #连同子目录的内容一起列出（递归列出），等于该目录下的所有文件都会显示出来  </span><br><span class=\"line\">ls [0-9] #显示包含数字的文件名和目录名</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.4</font> <code>cp</code> 命令，用于复制文件，copy之意，它还可以把多个文件一次性地复制到一个目录下</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-a   #将文件的特性一起复制</span><br><span class=\"line\">-p   #连同文件的属性一起复制，而非使用默认方式，与-a相似，常用于备份</span><br><span class=\"line\">-i   #若目标文件已经存在时，在覆盖时会先询问操作的进行</span><br><span class=\"line\">-r   #递归持续复制，用于目录的复制行为 //经常使用递归复制</span><br><span class=\"line\">-u   #目标文件与源文件有差异时才会复制</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.5</font> <code>mv</code> 命令，用于移动文件、目录或更名，move之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-f   #force强制的意思，如果目标文件已经存在，不会询问而直接覆盖</span><br><span class=\"line\">-i   #若目标文件已经存在，就会询问是否覆盖</span><br><span class=\"line\">-u   #若目标文件已经存在，且比目标文件新，才会更新</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">1.6</font> <code>rm</code> 命令，用于删除文件或目录，<code>remove</code> 之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-f   #就是force的意思，忽略不存在的文件，不会出现警告消息</span><br><span class=\"line\">-i   #互动模式，在删除前会询问用户是否操作</span><br><span class=\"line\">-r   #递归删除，最常用于目录删除，它是一个非常危险的参数</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-查看文件内容\"><a href=\"#2-查看文件内容\" class=\"headerlink\" title=\"2. 查看文件内容\"></a><font color=\"#dd0000\">2. 查看文件内容</font></h3><p><font color=\"#dd0000\">2.1</font> <code>cat</code> 命令，用于查看文本文件的内容，后接要查看的文件名，通常可用管道与<code>more</code>和<code>less</code>一起使用</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat file1     #从第一个字节开始正向查看文件的内容 </span><br><span class=\"line\">tac file1     #从最后一行开始反向查看一个文件的内容 </span><br><span class=\"line\">cat -n file1  #标示文件的行数 </span><br><span class=\"line\">more file1    #查看一个长文件的内容 </span><br><span class=\"line\"></span><br><span class=\"line\">head -n 2 file1      #查看一个文件的前两行 </span><br><span class=\"line\">tail -n 2 file1      #查看一个文件的最后两行 </span><br><span class=\"line\">tail -n +1000 file1  #从1000行开始显示，显示1000行以后的</span><br><span class=\"line\">cat filename | head -n 3000 | tail -n +1000  #显示1000行到3000行</span><br><span class=\"line\">cat filename | tail -n +3000 | head -n 1000  #从第3000行开始，显示1000(即显示3000~3999行)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-文件搜索\"><a href=\"#3-文件搜索\" class=\"headerlink\" title=\"3. 文件搜索\"></a><font color=\"#dd0000\">3. 文件搜索</font></h3><p><font color=\"#dd0000\">3.1</font> <code>find</code> 命令，用来查找系统的</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find / -name file1                  #从 &#x27;/&#x27; 开始进入根文件系统搜索文件和目录 </span><br><span class=\"line\">find / -user user1                  #搜索属于用户 &#x27;user1&#x27; 的文件和目录 </span><br><span class=\"line\">find /usr/bin -type f -atime +100   #搜索在过去100天内未被使用过的执行文件 </span><br><span class=\"line\">find /usr/bin -type f -mtime -10    #搜索在10天内被创建或者修改过的文件 </span><br><span class=\"line\">whereis halt     #显示一个二进制文件、源码或man的位置 </span><br><span class=\"line\">which halt       #显示一个二进制文件或可执行文件的完整路径</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">3.2</font> 删除大于50M的文件：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find /var/mail/ -size +50M -exec rm &#123;&#125; ＼;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4-文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\"><a href=\"#4-文件的权限-使用-“-”-设置权限，使用-“-“-用于取消\" class=\"headerlink\" title=\" 4. 文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消\"></a><font color=\"#dd000\"> 4. 文件的权限 - 使用 “+” 设置权限，使用 “-“ 用于取消</font></h3><p><font color=\"#dd0000\">4.1</font> <code>chmod</code> 命令，改变文件/文件夹权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -lh                     #显示权限 </span><br><span class=\"line\">chmod ugo+rwx directory1   #设置目录的所有人(u)、群组(g)以及其他人(o)以读（r，4 ）、写(w，2)和执行(x，1)的权限 </span><br><span class=\"line\">chmod go-rwx directory1    #删除群组(g)与其他人(o)对目录的读写执行权限</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">4.2</font> <code>chown</code> 命令，改变文件的所有者</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown user1 file1          #改变一个文件的所有人属性 </span><br><span class=\"line\">chown -R user1 directory1  #改变一个目录的所有人属性并同时改变改目录下所有文件的属性 </span><br><span class=\"line\">chown user1:group1 file1   #改变一个文件的所有人和群组属性</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">4.3</font> <code>chgrp</code> 命令，改变文件所属用户组</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chgrp group1 file1     #改变文件的群组</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"5-文本处理\"><a href=\"#5-文本处理\" class=\"headerlink\" title=\"5. 文本处理\"></a><font color=\"#dd000\">5. 文本处理</font></h3><p><font color=\"#dd0000\">5.1</font> <code>grep</code> 命令，分析一行的信息，若当中有我们所需要的信息，就将该行显示出来，该命令通常与管道命令一起使用，用于对一些命令的输出进行筛选加工等等</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grep Aug /var/log/messages      #在文件 &#x27;/var/log/messages&#x27;中查找关键词&quot;Aug&quot; </span><br><span class=\"line\">grep ^Aug /var/log/messages     #在文件 &#x27;/var/log/messages&#x27;中查找以&quot;Aug&quot;开始的词汇 </span><br><span class=\"line\">grep [0-9]  /var/log/messages   #选择 &#x27;/var/log/messages&#x27; 文件中所有包含数字的行 </span><br><span class=\"line\">grep Aug -R /var/log/*          #在目录 &#x27;/var/log&#x27; 及随后的目录中搜索字符串&quot;Aug&quot; </span><br><span class=\"line\">sed &#x27;s/stringa1/stringa2/g&#x27; example.txt  #将example.txt文件中的 &quot;string1&quot; 替换成 &quot;string2&quot; </span><br><span class=\"line\">sed &#x27;/^$/d&#x27; example.txt         #从example.txt文件中删除所有空白行</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">5.2</font> <code>paste</code> 命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">paste file1 file2         #合并两个文件或两栏的内容 </span><br><span class=\"line\">paste -d &#x27;+&#x27; file1 file2  #合并两个文件或两栏的内容，中间用&quot;+&quot;区分</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">5.3 </font> <code>sort</code> 命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sort file1 file2            #排序两个文件的内容 </span><br><span class=\"line\">sort file1 file2 | uniq     #取出两个文件的并集(重复的行只保留一份) </span><br><span class=\"line\">sort file1 file2 | uniq -u  #删除交集，留下其他的行 </span><br><span class=\"line\">sort file1 file2 | uniq -d  #取出两个文件的交集(只留下同时存在于两个文件中的文件)</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">5.4</font> <code>comm</code> 命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">comm -1 file1 file2   #比较两个文件的内容只删除 &#x27;file1&#x27; 所包含的内容 </span><br><span class=\"line\">comm -2 file1 file2   #比较两个文件的内容只删除 &#x27;file2&#x27; 所包含的内容 </span><br><span class=\"line\">comm -3 file1 file2   #比较两个文件的内容只删除两个文件共有的部分</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-打包和压缩文件\"><a href=\"#6-打包和压缩文件\" class=\"headerlink\" title=\"6. 打包和压缩文件\"></a><font color=\"#dd000\">6. 打包和压缩文件</font></h3><p><font color=\"#dd0000\">6.1 </font> <code>tar</code> 命令，对文件进行打包，默认情况并不会压缩，如果指定了相应的参数，它还会调用相应的压缩程序（如gzip和bzip等）进行压缩和解压</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-c  #新建打包文件</span><br><span class=\"line\">-t  #查看打包文件的内容含有哪些文件名</span><br><span class=\"line\">-x  #解打包或解压缩的功能，可以搭配-C（大写）指定解压的目录，注意-c,-t,-x不能同时出现在同一条命令中</span><br><span class=\"line\">-j  #通过bzip2的支持进行压缩/解压缩</span><br><span class=\"line\">-z  #通过gzip的支持进行压缩/解压缩</span><br><span class=\"line\">-v  #在压缩/解压缩过程中，将正在处理的文件名显示出来</span><br><span class=\"line\">-f filename  #filename为要处理的文件</span><br><span class=\"line\">-C dir  #指定压缩/解压缩的目录dir</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">6.2</font> 压缩：<code>tar -jcv -f filename.tar.bz2</code> (要被处理的文件或目录名称) 查询：<code>tar -jtv -f filename.tar.bz2</code> 解压：<code>tar -jxv -f filename.tar.bz2 -C</code> (欲解压缩的目录)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bunzip2 file1.bz2  #解压一个叫做 &#x27;file1.bz2&#x27;的文件 </span><br><span class=\"line\">bzip2 file1        #压缩一个叫做 &#x27;file1&#x27; 的文件 </span><br><span class=\"line\">gunzip file1.gz    #解压一个叫做 &#x27;file1.gz&#x27;的文件 </span><br><span class=\"line\">gzip file1         #压缩一个叫做 &#x27;file1&#x27;的文件 </span><br><span class=\"line\">gzip -9 file1      #最大程度压缩 </span><br><span class=\"line\">rar a file1.rar test_file         #创建一个叫做 &#x27;file1.rar&#x27; 的包 </span><br><span class=\"line\">rar a file1.rar file1 file2 dir1  #同时压缩 &#x27;file1&#x27;, &#x27;file2&#x27; 以及目录 &#x27;dir1&#x27; </span><br><span class=\"line\">rar x file1.rar    #解压rar包</span><br><span class=\"line\"></span><br><span class=\"line\">zip file1.zip file1   #创建一个zip格式的压缩包 </span><br><span class=\"line\">unzip file1.zip       #解压一个zip格式压缩包 </span><br><span class=\"line\">zip -r file1.zip file1 file2 dir1    #将几个文件和目录同时压缩成一个zip格式的压缩包</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"7-系统和关机（关机、重启和登出）\"><a href=\"#7-系统和关机（关机、重启和登出）\" class=\"headerlink\" title=\"7. 系统和关机（关机、重启和登出）\"></a><font color=\"#dd000\">7. 系统和关机（关机、重启和登出）</font></h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown -h now  #关闭系统(1) </span><br><span class=\"line\">init 0           #关闭系统(2) </span><br><span class=\"line\">telinit 0        #关闭系统(3) </span><br><span class=\"line\">shutdown -h hours:minutes &amp;   #按预定时间关闭系统 </span><br><span class=\"line\">shutdown -c      #取消按预定时间关闭系统 </span><br><span class=\"line\">shutdown -r now  #重启(1) </span><br><span class=\"line\">reboot           #重启(2) </span><br><span class=\"line\">logout           #注销 </span><br><span class=\"line\">time             #测算一个命令（即程序）的执行时间 </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-进程相关的命令\"><a href=\"#8-进程相关的命令\" class=\"headerlink\" title=\"8. 进程相关的命令\"></a><font color=\"#dd000\">8. 进程相关的命令</font></h3><p><font color=\"#dd0000\">8.1 </font> <code>jps</code> 命令，显示当前系统的java进程情况，及其id号 <code>jps (Java Virtual Machine Process Status Tool)</code> 是JDK 1.5提供的一个显示当前所有java进程pid的命令，简单实用，非常适合在linux/unix平台上简单察看当前java进程的一些简单情况。</p>\n<p><font color=\"#dd0000\">8.2</font> <code>ps</code> 命令，用于将某个时间点的进程运行情况选取下来并输出，<code>process</code> 之意</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-A   #所有的进程均显示出来</span><br><span class=\"line\">-a   #不与terminal有关的所有进程</span><br><span class=\"line\">-u   #有效用户的相关进程</span><br><span class=\"line\">-x   #一般与a参数一起使用，可列出较完整的信息</span><br><span class=\"line\">-l   #较长，较详细地将PID的信息列出</span><br><span class=\"line\"></span><br><span class=\"line\">ps aux  # 查看系统所有的进程数据</span><br><span class=\"line\">ps ax   # 查看不与terminal有关的所有进程</span><br><span class=\"line\">ps -lA  # 查看系统所有的进程数据</span><br><span class=\"line\">ps axjf # 查看连同一部分进程树状态</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">8.3</font> <code>kill</code> 命令,用于向某个工作（jobnumber）或者是某个PID（数字）传送一个信号，它通常与ps和jobs命令一起使用</p>\n<p>命令格式 : kill[命令参数][进程id]</p>\n<p>命令参数:</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-l  #信号，若果不加信号的编号参数，则使用“-l”参数会列出全部的信号名称</span><br><span class=\"line\">-a  #当处理当前进程时，不限制命令名和进程号的对应关系</span><br><span class=\"line\">-p  #指定kill 命令只打印相关进程的进程号，而不发送任何信号</span><br><span class=\"line\">-s  #指定发送信号</span><br><span class=\"line\">-u  #指定用户</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>🌰1：列出所有信号名称 命令：<code>kill -l</code> 输出：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost test6]# kill -l</span><br><span class=\"line\"> 1) SIGHUP       2) SIGINT       3) SIGQUIT      4) SIGILL</span><br><span class=\"line\"> 5) SIGTRAP      6) SIGABRT      7) SIGBUS       8) SIGFPE</span><br><span class=\"line\"> 9) SIGKILL     10) SIGUSR1     11) SIGSEGV     12) SIGUSR2</span><br><span class=\"line\">13) SIGPIPE     14) SIGALRM     15) SIGTERM     16) SIGSTKFLT</span><br><span class=\"line\">17) SIGCHLD     18) SIGCONT     19) SIGSTOP     20) SIGTSTP</span><br><span class=\"line\">21) SIGTTIN     22) SIGTTOU     23) SIGURG      24) SIGXCPU</span><br><span class=\"line\">25) SIGXFSZ     26) SIGVTALRM   27) SIGPROF     28) SIGWINCH</span><br><span class=\"line\">29) SIGIO       30) SIGPWR      31) SIGSYS      34) SIGRTMIN</span><br><span class=\"line\">35) SIGRTMIN+1  36) SIGRTMIN+2  37) SIGRTMIN+3  38) SIGRTMIN+4</span><br><span class=\"line\">39) SIGRTMIN+5  40) SIGRTMIN+6  41) SIGRTMIN+7  42) SIGRTMIN+8</span><br><span class=\"line\">43) SIGRTMIN+9  44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12</span><br><span class=\"line\">47) SIGRTMIN+13 48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14</span><br><span class=\"line\">51) SIGRTMAX-13 52) SIGRTMAX-12 53) SIGRTMAX-11 54) SIGRTMAX-10</span><br><span class=\"line\">55) SIGRTMAX-9  56) SIGRTMAX-8  57) SIGRTMAX-7  58) SIGRTMAX-6</span><br><span class=\"line\">59) SIGRTMAX-5  60) SIGRTMAX-4  61) SIGRTMAX-3  62) SIGRTMAX-2</span><br><span class=\"line\">63) SIGRTMAX-1  64) SIGRTMAX</span><br></pre></td></tr></table></figure>\n\n<p>说明：</p>\n<p>只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略。   下面是常用的信号</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">HUP     1     #终端断线</span><br><span class=\"line\">INT     2    #中断（同 Ctrl + C）</span><br><span class=\"line\">QUIT    3    #退出（同 Ctrl + \\）</span><br><span class=\"line\">TERM    15    #终止</span><br><span class=\"line\">KILL    9    #强制终止</span><br><span class=\"line\">CONT    18    #继续（与STOP相反， fg/bg命令）</span><br><span class=\"line\">STOP    19   #暂停（同 Ctrl + Z）</span><br></pre></td></tr></table></figure>\n\n\n<p>🌰2: 得到指定信号的数值</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@localhost test6]# kill -l KILL</span><br><span class=\"line\">[root@localhost test6]# kill -l SIGKILL</span><br><span class=\"line\">[root@localhost test6]# kill -l TERM</span><br><span class=\"line\">[root@localhost test6]# kill -l SIGTERM</span><br><span class=\"line\">[root@localhost test6]#</span><br></pre></td></tr></table></figure>\n\n\n<p>🌰3: 先用 <code>ps</code> 查找进程，然后用 <code>kill</code> 杀掉</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">命令：</span></span><br><span class=\"line\">kill 3268</span><br><span class=\"line\">[root@localhost test6]# ps -ef|grep vim </span><br><span class=\"line\">root      3268  2884  0 16:21 pts/1    00:00:00 vim install.log</span><br><span class=\"line\">root      3370  2822  0 16:21 pts/0    00:00:00 grep vim</span><br><span class=\"line\">[root@localhost test6]# kill 3268 </span><br></pre></td></tr></table></figure>\n\n<p>🌰4: 彻底杀死进程</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\"> #</span><span class=\"bash\">命令：</span></span><br><span class=\"line\">kill –9 3268   # -9 强制杀掉进程</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">8.4</font> <code>killall</code> 命令，向一个命令启动的进程发送一个信号，用于杀死指定名字的进程</p>\n<p>命令格式 : killall[命令参数][进程名]</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">命令参数：</span></span><br><span class=\"line\">-Z      #只杀死拥有scontext 的进程</span><br><span class=\"line\">-e      #要求匹配进程名称</span><br><span class=\"line\">-I      #忽略小写</span><br><span class=\"line\">-g      #杀死进程组而不是进程</span><br><span class=\"line\">-i      #交互模式，杀死进程前先询问用户</span><br><span class=\"line\">-l      #列出所有的已知信号名称</span><br><span class=\"line\">-q      #不输出警告信息</span><br><span class=\"line\">-s      #发送指定的信号</span><br><span class=\"line\">-v      #报告信号是否成功发送</span><br><span class=\"line\">-w      #等待进程死亡</span><br><span class=\"line\">--help  #显示帮助信息</span><br><span class=\"line\">--version  #显示版本显示</span><br></pre></td></tr></table></figure>\n\n<p>🌰: </p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">1：杀死所有同名进程</span></span><br><span class=\"line\">    killall nginx</span><br><span class=\"line\">    killall -9 bash</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\">2.向进程发送指定信号</span></span><br><span class=\"line\">    killall -TERM ngixn  或者  killall -KILL nginx</span><br></pre></td></tr></table></figure>\n\n<p><font color=\"#dd0000\">8.5</font> <code>top</code> 命令，是Linux下常用的性能分析工具，能够实时显示系统中各个进程的资源占用状况，类似于Windows的任务管理器。</p>\n<p>如何杀死进程：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">（1）图形化界面的方式</span><br><span class=\"line\">（2）kill -9 pid  （-9表示强制关闭）</span><br><span class=\"line\">（3）killall -9 程序的名字</span><br><span class=\"line\">（4）pkill 程序的名字</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n<p>查看进程端口号：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">netstat -tunlp|grep 端口号</span><br></pre></td></tr></table></figure>"},{"title":"一些书","date":"2020-09-23T22:01:29.000Z","_content":"### javaScript\n\n1. [Eloquent JavaScript](https://eloquentjavascript.net) (javaScript 编程精解) 英文","source":"_posts/some-books.md","raw":"---\ntitle: 一些书\ndate: 2020-09-24 06:01:29\ntags:\n---\n### javaScript\n\n1. [Eloquent JavaScript](https://eloquentjavascript.net) (javaScript 编程精解) 英文","slug":"some-books","published":1,"updated":"2020-09-23T07:25:39.938Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi70011jwj53393e8vk","content":"<h3 id=\"javaScript\"><a href=\"#javaScript\" class=\"headerlink\" title=\"javaScript\"></a>javaScript</h3><ol>\n<li><a href=\"https://eloquentjavascript.net/\">Eloquent JavaScript</a> (javaScript 编程精解) 英文</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"javaScript\"><a href=\"#javaScript\" class=\"headerlink\" title=\"javaScript\"></a>javaScript</h3><ol>\n<li><a href=\"https://eloquentjavascript.net/\">Eloquent JavaScript</a> (javaScript 编程精解) 英文</li>\n</ol>\n"},{"title":"SSL证书","date":"2020-09-07T08:25:41.000Z","_content":"* 前言\n\n[freessl.cn](https://freessl.cn) 是一个提供免费HTTPS证书申请的网站；\n\n个人网站如果购买证书，成本还是比较高的（毕竟个人网站不盈利），偶然发现可以申请免费证书，并且流程很简单，于是就找了个时间尝试搞了一下；\n\n<!-- more -->\n* 申请证书\n1. 填入要申请证书的域名\n\n2. 品牌选择：<b class=\"bgc-e4e6e8\">亚洲诚信</b> // 双域名 有效期一年 （默认就是这个选项，到期需要手动续期）\n\n3. 点击（创建免费的SSL证书）\n4. 这一步需要选择 <b class=\"bgc-e4e6e8\">证书类型</b>（RSA ｜ ECC）、<b class=\"bgc-e4e6e8\">验证类型</b>（DNS ｜ 文件验证）、<b class=\"bgc-e4e6e8\">CSR生成</b>（离线生成 ｜ 一键申请 ｜ 浏览器生成 ｜ 我有CSR），按照默认选项, 填入邮箱（点击创建）；\n5. 创建之后，需要在<b class=\"bgc-e4e6e8\">域名解析</b>按照提示添加一条记录（这一步是为了验证域名是你的）\n6. 验证成功后，就可以把域名导出到 <b class=\"bgc-e4e6e8\">KeyManager </b>；（KeyManager需要安装）\n7. KeyManager --> 证书管理 --> 证书请求， <b class=\"bgc-e4e6e8\">颁发状态</b> 是 <b class=\"bgc-e4e6e8\">已颁发</b> 就是申请成功了；\n\n* 导出证书\n\nKeyManager --> 证书管理 --> 证书请求 --> 操作--更多--详情-->查看证书（右下角）--> 导出证书\n\n* 上传到服务器\n\nscp <本地文件名> <用户名>@<服务器IP>:<上传保存路径即文件名>\n\n🌰\n```\nscp /documents/file.zip root@127.0.0.1:/root \n\n# 把本地documents文件夹下的file.zip，用127.0.0.1的root用户上传到服务器的root目录下\n\n```\n* 解压\n\nubuntu下解压zip文件\n\n```\nunzip test.zip\n# 解压到当前目录下 \n```\n* 配置Nginx\n \n在 nginx 目录下 conf.d 文件夹里新建 443.conf 配置文件，文件内容如下 \n\n🌰\n```\nserver {\n  listen 443 ssl;\n  server_name breakname.com www.breakname.com;\n  ssl         on;\n\n  # path == 你自己机器上的路径,对应文件的存放位置\n\n  root /path/breakname-com/;\n\n  ssl_certificate /path/breakname-com/breakname.com_chain.crt; # 证书路径\n  ssl_certificate_key /path/breakname-com/breakname.com_key.key; # 私钥路径\n\n  # path == 你自己机器上的路径,对应文件的存放位置\n  location /{\n    root /path/build;\n    index index.html index.htm;\n  }\n}\n```\n检查nginx配置文件 \n```\nnginx -t\n\n# nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n# nginx: configuration file /etc/nginx/nginx.conf test is successful\n```\n重启nginx; \n```\nnginx -s reload\n```\n去浏览器访问自己网站，如果通过https可以访问到，那就是配置成功了; /手动狗头\n\n<font color=\"#dd0000\">\n如果你用的阿里云服务器：到安全组规则里把 443 端口添加进去\n</font>\n\n\n\n\n","source":"_posts/ssl-https.md","raw":"---\ntitle: SSL证书\ndate: 2020-09-07 16:25:41\ntags: Nginx\n---\n* 前言\n\n[freessl.cn](https://freessl.cn) 是一个提供免费HTTPS证书申请的网站；\n\n个人网站如果购买证书，成本还是比较高的（毕竟个人网站不盈利），偶然发现可以申请免费证书，并且流程很简单，于是就找了个时间尝试搞了一下；\n\n<!-- more -->\n* 申请证书\n1. 填入要申请证书的域名\n\n2. 品牌选择：<b class=\"bgc-e4e6e8\">亚洲诚信</b> // 双域名 有效期一年 （默认就是这个选项，到期需要手动续期）\n\n3. 点击（创建免费的SSL证书）\n4. 这一步需要选择 <b class=\"bgc-e4e6e8\">证书类型</b>（RSA ｜ ECC）、<b class=\"bgc-e4e6e8\">验证类型</b>（DNS ｜ 文件验证）、<b class=\"bgc-e4e6e8\">CSR生成</b>（离线生成 ｜ 一键申请 ｜ 浏览器生成 ｜ 我有CSR），按照默认选项, 填入邮箱（点击创建）；\n5. 创建之后，需要在<b class=\"bgc-e4e6e8\">域名解析</b>按照提示添加一条记录（这一步是为了验证域名是你的）\n6. 验证成功后，就可以把域名导出到 <b class=\"bgc-e4e6e8\">KeyManager </b>；（KeyManager需要安装）\n7. KeyManager --> 证书管理 --> 证书请求， <b class=\"bgc-e4e6e8\">颁发状态</b> 是 <b class=\"bgc-e4e6e8\">已颁发</b> 就是申请成功了；\n\n* 导出证书\n\nKeyManager --> 证书管理 --> 证书请求 --> 操作--更多--详情-->查看证书（右下角）--> 导出证书\n\n* 上传到服务器\n\nscp <本地文件名> <用户名>@<服务器IP>:<上传保存路径即文件名>\n\n🌰\n```\nscp /documents/file.zip root@127.0.0.1:/root \n\n# 把本地documents文件夹下的file.zip，用127.0.0.1的root用户上传到服务器的root目录下\n\n```\n* 解压\n\nubuntu下解压zip文件\n\n```\nunzip test.zip\n# 解压到当前目录下 \n```\n* 配置Nginx\n \n在 nginx 目录下 conf.d 文件夹里新建 443.conf 配置文件，文件内容如下 \n\n🌰\n```\nserver {\n  listen 443 ssl;\n  server_name breakname.com www.breakname.com;\n  ssl         on;\n\n  # path == 你自己机器上的路径,对应文件的存放位置\n\n  root /path/breakname-com/;\n\n  ssl_certificate /path/breakname-com/breakname.com_chain.crt; # 证书路径\n  ssl_certificate_key /path/breakname-com/breakname.com_key.key; # 私钥路径\n\n  # path == 你自己机器上的路径,对应文件的存放位置\n  location /{\n    root /path/build;\n    index index.html index.htm;\n  }\n}\n```\n检查nginx配置文件 \n```\nnginx -t\n\n# nginx: the configuration file /etc/nginx/nginx.conf syntax is ok\n# nginx: configuration file /etc/nginx/nginx.conf test is successful\n```\n重启nginx; \n```\nnginx -s reload\n```\n去浏览器访问自己网站，如果通过https可以访问到，那就是配置成功了; /手动狗头\n\n<font color=\"#dd0000\">\n如果你用的阿里云服务器：到安全组规则里把 443 端口添加进去\n</font>\n\n\n\n\n","slug":"ssl-https","published":1,"updated":"2020-10-05T14:44:11.568Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi80014jwj50ghq2xaz","content":"<ul>\n<li>前言</li>\n</ul>\n<p><a href=\"https://freessl.cn/\">freessl.cn</a> 是一个提供免费HTTPS证书申请的网站；</p>\n<p>个人网站如果购买证书，成本还是比较高的（毕竟个人网站不盈利），偶然发现可以申请免费证书，并且流程很简单，于是就找了个时间尝试搞了一下；</p>\n<a id=\"more\"></a>\n<ul>\n<li>申请证书</li>\n</ul>\n<ol>\n<li><p>填入要申请证书的域名</p>\n</li>\n<li><p>品牌选择：<b class=\"bgc-e4e6e8\">亚洲诚信</b> // 双域名 有效期一年 （默认就是这个选项，到期需要手动续期）</p>\n</li>\n<li><p>点击（创建免费的SSL证书）</p>\n</li>\n<li><p>这一步需要选择 <b class=\"bgc-e4e6e8\">证书类型</b>（RSA ｜ ECC）、<b class=\"bgc-e4e6e8\">验证类型</b>（DNS ｜ 文件验证）、<b class=\"bgc-e4e6e8\">CSR生成</b>（离线生成 ｜ 一键申请 ｜ 浏览器生成 ｜ 我有CSR），按照默认选项, 填入邮箱（点击创建）；</p>\n</li>\n<li><p>创建之后，需要在<b class=\"bgc-e4e6e8\">域名解析</b>按照提示添加一条记录（这一步是为了验证域名是你的）</p>\n</li>\n<li><p>验证成功后，就可以把域名导出到 <b class=\"bgc-e4e6e8\">KeyManager </b>；（KeyManager需要安装）</p>\n</li>\n<li><p>KeyManager –&gt; 证书管理 –&gt; 证书请求， <b class=\"bgc-e4e6e8\">颁发状态</b> 是 <b class=\"bgc-e4e6e8\">已颁发</b> 就是申请成功了；</p>\n</li>\n</ol>\n<ul>\n<li>导出证书</li>\n</ul>\n<p>KeyManager –&gt; 证书管理 –&gt; 证书请求 –&gt; 操作–更多–详情–&gt;查看证书（右下角）–&gt; 导出证书</p>\n<ul>\n<li>上传到服务器</li>\n</ul>\n<p>scp &lt;本地文件名&gt; &lt;用户名&gt;@&lt;服务器IP&gt;:&lt;上传保存路径即文件名&gt;</p>\n<p>🌰</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp &#x2F;documents&#x2F;file.zip root@127.0.0.1:&#x2F;root </span><br><span class=\"line\"></span><br><span class=\"line\"># 把本地documents文件夹下的file.zip，用127.0.0.1的root用户上传到服务器的root目录下</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>解压</li>\n</ul>\n<p>ubuntu下解压zip文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip test.zip</span><br><span class=\"line\"># 解压到当前目录下 </span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置Nginx</li>\n</ul>\n<p>在 nginx 目录下 conf.d 文件夹里新建 443.conf 配置文件，文件内容如下 </p>\n<p>🌰</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 443 ssl;</span><br><span class=\"line\">  server_name breakname.com www.breakname.com;</span><br><span class=\"line\">  ssl         on;</span><br><span class=\"line\"></span><br><span class=\"line\">  # path &#x3D;&#x3D; 你自己机器上的路径,对应文件的存放位置</span><br><span class=\"line\"></span><br><span class=\"line\">  root &#x2F;path&#x2F;breakname-com&#x2F;;</span><br><span class=\"line\"></span><br><span class=\"line\">  ssl_certificate &#x2F;path&#x2F;breakname-com&#x2F;breakname.com_chain.crt; # 证书路径</span><br><span class=\"line\">  ssl_certificate_key &#x2F;path&#x2F;breakname-com&#x2F;breakname.com_key.key; # 私钥路径</span><br><span class=\"line\"></span><br><span class=\"line\">  # path &#x3D;&#x3D; 你自己机器上的路径,对应文件的存放位置</span><br><span class=\"line\">  location &#x2F;&#123;</span><br><span class=\"line\">    root &#x2F;path&#x2F;build;</span><br><span class=\"line\">    index index.html index.htm;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>检查nginx配置文件 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br><span class=\"line\"></span><br><span class=\"line\"># nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class=\"line\"># nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br></pre></td></tr></table></figure>\n<p>重启nginx; </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>去浏览器访问自己网站，如果通过https可以访问到，那就是配置成功了; /手动狗头</p>\n<font color=\"#dd0000\">\n如果你用的阿里云服务器：到安全组规则里把 443 端口添加进去\n</font>\n\n\n\n\n","site":{"data":{}},"excerpt":"<ul>\n<li>前言</li>\n</ul>\n<p><a href=\"https://freessl.cn/\">freessl.cn</a> 是一个提供免费HTTPS证书申请的网站；</p>\n<p>个人网站如果购买证书，成本还是比较高的（毕竟个人网站不盈利），偶然发现可以申请免费证书，并且流程很简单，于是就找了个时间尝试搞了一下；</p>","more":"<ul>\n<li>申请证书</li>\n</ul>\n<ol>\n<li><p>填入要申请证书的域名</p>\n</li>\n<li><p>品牌选择：<b class=\"bgc-e4e6e8\">亚洲诚信</b> // 双域名 有效期一年 （默认就是这个选项，到期需要手动续期）</p>\n</li>\n<li><p>点击（创建免费的SSL证书）</p>\n</li>\n<li><p>这一步需要选择 <b class=\"bgc-e4e6e8\">证书类型</b>（RSA ｜ ECC）、<b class=\"bgc-e4e6e8\">验证类型</b>（DNS ｜ 文件验证）、<b class=\"bgc-e4e6e8\">CSR生成</b>（离线生成 ｜ 一键申请 ｜ 浏览器生成 ｜ 我有CSR），按照默认选项, 填入邮箱（点击创建）；</p>\n</li>\n<li><p>创建之后，需要在<b class=\"bgc-e4e6e8\">域名解析</b>按照提示添加一条记录（这一步是为了验证域名是你的）</p>\n</li>\n<li><p>验证成功后，就可以把域名导出到 <b class=\"bgc-e4e6e8\">KeyManager </b>；（KeyManager需要安装）</p>\n</li>\n<li><p>KeyManager –&gt; 证书管理 –&gt; 证书请求， <b class=\"bgc-e4e6e8\">颁发状态</b> 是 <b class=\"bgc-e4e6e8\">已颁发</b> 就是申请成功了；</p>\n</li>\n</ol>\n<ul>\n<li>导出证书</li>\n</ul>\n<p>KeyManager –&gt; 证书管理 –&gt; 证书请求 –&gt; 操作–更多–详情–&gt;查看证书（右下角）–&gt; 导出证书</p>\n<ul>\n<li>上传到服务器</li>\n</ul>\n<p>scp &lt;本地文件名&gt; &lt;用户名&gt;@&lt;服务器IP&gt;:&lt;上传保存路径即文件名&gt;</p>\n<p>🌰</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp &#x2F;documents&#x2F;file.zip root@127.0.0.1:&#x2F;root </span><br><span class=\"line\"></span><br><span class=\"line\"># 把本地documents文件夹下的file.zip，用127.0.0.1的root用户上传到服务器的root目录下</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li>解压</li>\n</ul>\n<p>ubuntu下解压zip文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">unzip test.zip</span><br><span class=\"line\"># 解压到当前目录下 </span><br></pre></td></tr></table></figure>\n<ul>\n<li>配置Nginx</li>\n</ul>\n<p>在 nginx 目录下 conf.d 文件夹里新建 443.conf 配置文件，文件内容如下 </p>\n<p>🌰</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">  listen 443 ssl;</span><br><span class=\"line\">  server_name breakname.com www.breakname.com;</span><br><span class=\"line\">  ssl         on;</span><br><span class=\"line\"></span><br><span class=\"line\">  # path &#x3D;&#x3D; 你自己机器上的路径,对应文件的存放位置</span><br><span class=\"line\"></span><br><span class=\"line\">  root &#x2F;path&#x2F;breakname-com&#x2F;;</span><br><span class=\"line\"></span><br><span class=\"line\">  ssl_certificate &#x2F;path&#x2F;breakname-com&#x2F;breakname.com_chain.crt; # 证书路径</span><br><span class=\"line\">  ssl_certificate_key &#x2F;path&#x2F;breakname-com&#x2F;breakname.com_key.key; # 私钥路径</span><br><span class=\"line\"></span><br><span class=\"line\">  # path &#x3D;&#x3D; 你自己机器上的路径,对应文件的存放位置</span><br><span class=\"line\">  location &#x2F;&#123;</span><br><span class=\"line\">    root &#x2F;path&#x2F;build;</span><br><span class=\"line\">    index index.html index.htm;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>检查nginx配置文件 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -t</span><br><span class=\"line\"></span><br><span class=\"line\"># nginx: the configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf syntax is ok</span><br><span class=\"line\"># nginx: configuration file &#x2F;etc&#x2F;nginx&#x2F;nginx.conf test is successful</span><br></pre></td></tr></table></figure>\n<p>重启nginx; </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s reload</span><br></pre></td></tr></table></figure>\n<p>去浏览器访问自己网站，如果通过https可以访问到，那就是配置成功了; /手动狗头</p>\n<font color=\"#dd0000\">\n如果你用的阿里云服务器：到安全组规则里把 443 端口添加进去\n</font>"},{"title":"React生命周期钩子函数","date":"2020-08-20T15:36:51.000Z","_content":"\n##### 组件生命周期的三个阶段\n1. Mounting（挂载）\n2. Updating（更新）\n3. Unmounting（卸载）\n\n<!-- more -->\n\n##### 挂载 (Mounting)\n当组件实例被创建并插入 DOM 中时，其生命周期调用顺序如下：\n+ constructor()\n+ static getDerivedStateFromProps()\n+ render()\n+ componentDidMount()\n\n##### 更新 (Updating)\n当组件的 props 或 state 发生变化时会触发更新。组件更新的生命周期调用顺序如下：\n+ static getDerivedStateFromProps()\n+ shouldComponentUpdate()\n+ render()\n+ getSnapshotBeforeUpdate()\n+ componentDidUpdate()\n\n##### 卸载 (Unmounting)\n当组件从 DOM 中移除时会调用如下方法：\n+ componentWillUnmount()\n\n##### 错误处理\n当渲染过程，生命周期，或子组件的构造函数中抛出错误时，会调用如下方法：\n+ static getDerivedStateFromError()\n+ componentDidCatch()\n\n```jsx\nclass Welcome extends React.Component {\n constructor(props) {\n    super(props);\n    this.state = {}\n  }\n   /**\n    * 组件每次被render的时候，包括在组件构建之后（虚拟dom之后，实际dom挂载之前）\n    * 每次获取新的props或state之后；\n    * 每次接收新的props之后都会返回一个对象作为新的state，返回null则说明不需要更新state；\n    */\n   static getDerivedStateFromProps(props, state) {\n     return state\n   }\n   /**\n    * 获取到javascript错误\n    */\n   componentDidCatch(error, info) {}\n   /**\n    * 挂载后\n    */\n   componentDidMount() {}\n   /**\n    * 组件props或者state改变时触发，\n    * true:更新\n    * false:不更新\n    */\n   shouldComponentUpdate(nextProps, nextState) {\n     return true;\n   }\n   /**\n    * 组件更新前触发\n    */\n   getSnapshotBeforeUpdate(prevProps, prevState) {\n     if(prevProps.value != this.props.value){\n       return true\n     }\n     return null;\n   }\n   /**\n    * 组件更新后触发\n    */\n   componentDidUpdate(prevProps, prevState, snapshot) {\n     if(snapshot != null){\n        \n     }\n  }\n   /**\n    * 组件卸载时触发\n    */\n   componentWillUnmount() {}\n\n   render() {\n    return <h1>Hello, {this.props.name}</h1>;\n   }\n}\n```\n\n1. React16新的生命周期弃用了`componentWillMount`、`componentWillReceiveProps`，`componentWillUpdate`\n\n2. 新增了`getDerivedStateFromProps`、`getSnapshotBeforeUpdate`来代替弃用的三个钩子函数 `componentWillMount`、`componentWillReceiveProps`，`componentWillUpdate` \n\n3. React16并没有删除这三个钩子函数，但是不能和新增的钩子函数 `getDerivedStateFromProps`、`getSnapshotBeforeUpdate` 混用，React17将会删除 `componentWillMount`、`componentWillReceiveProps`、`componentWillUpdate`\n\n4. 新增了对错误的处理 `componentDidCatch`\n\n[异步渲染之更新](https://zh-hans.reactjs.org/blog/2018/03/27/update-on-async-rendering.html)\n\n[React](https://reactjs.org) 组件生命周期钩子函数\n","source":"_posts/react-component-life-cycle.md","raw":"---\ntitle: React生命周期钩子函数\ndate: 2020-08-20 23:36:51\ntags: React\n---\n\n##### 组件生命周期的三个阶段\n1. Mounting（挂载）\n2. Updating（更新）\n3. Unmounting（卸载）\n\n<!-- more -->\n\n##### 挂载 (Mounting)\n当组件实例被创建并插入 DOM 中时，其生命周期调用顺序如下：\n+ constructor()\n+ static getDerivedStateFromProps()\n+ render()\n+ componentDidMount()\n\n##### 更新 (Updating)\n当组件的 props 或 state 发生变化时会触发更新。组件更新的生命周期调用顺序如下：\n+ static getDerivedStateFromProps()\n+ shouldComponentUpdate()\n+ render()\n+ getSnapshotBeforeUpdate()\n+ componentDidUpdate()\n\n##### 卸载 (Unmounting)\n当组件从 DOM 中移除时会调用如下方法：\n+ componentWillUnmount()\n\n##### 错误处理\n当渲染过程，生命周期，或子组件的构造函数中抛出错误时，会调用如下方法：\n+ static getDerivedStateFromError()\n+ componentDidCatch()\n\n```jsx\nclass Welcome extends React.Component {\n constructor(props) {\n    super(props);\n    this.state = {}\n  }\n   /**\n    * 组件每次被render的时候，包括在组件构建之后（虚拟dom之后，实际dom挂载之前）\n    * 每次获取新的props或state之后；\n    * 每次接收新的props之后都会返回一个对象作为新的state，返回null则说明不需要更新state；\n    */\n   static getDerivedStateFromProps(props, state) {\n     return state\n   }\n   /**\n    * 获取到javascript错误\n    */\n   componentDidCatch(error, info) {}\n   /**\n    * 挂载后\n    */\n   componentDidMount() {}\n   /**\n    * 组件props或者state改变时触发，\n    * true:更新\n    * false:不更新\n    */\n   shouldComponentUpdate(nextProps, nextState) {\n     return true;\n   }\n   /**\n    * 组件更新前触发\n    */\n   getSnapshotBeforeUpdate(prevProps, prevState) {\n     if(prevProps.value != this.props.value){\n       return true\n     }\n     return null;\n   }\n   /**\n    * 组件更新后触发\n    */\n   componentDidUpdate(prevProps, prevState, snapshot) {\n     if(snapshot != null){\n        \n     }\n  }\n   /**\n    * 组件卸载时触发\n    */\n   componentWillUnmount() {}\n\n   render() {\n    return <h1>Hello, {this.props.name}</h1>;\n   }\n}\n```\n\n1. React16新的生命周期弃用了`componentWillMount`、`componentWillReceiveProps`，`componentWillUpdate`\n\n2. 新增了`getDerivedStateFromProps`、`getSnapshotBeforeUpdate`来代替弃用的三个钩子函数 `componentWillMount`、`componentWillReceiveProps`，`componentWillUpdate` \n\n3. React16并没有删除这三个钩子函数，但是不能和新增的钩子函数 `getDerivedStateFromProps`、`getSnapshotBeforeUpdate` 混用，React17将会删除 `componentWillMount`、`componentWillReceiveProps`、`componentWillUpdate`\n\n4. 新增了对错误的处理 `componentDidCatch`\n\n[异步渲染之更新](https://zh-hans.reactjs.org/blog/2018/03/27/update-on-async-rendering.html)\n\n[React](https://reactjs.org) 组件生命周期钩子函数\n","slug":"react-component-life-cycle","published":1,"updated":"2020-09-22T10:36:30.075Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi80016jwj54ja4g3h9","content":"<h5 id=\"组件生命周期的三个阶段\"><a href=\"#组件生命周期的三个阶段\" class=\"headerlink\" title=\"组件生命周期的三个阶段\"></a>组件生命周期的三个阶段</h5><ol>\n<li>Mounting（挂载）</li>\n<li>Updating（更新）</li>\n<li>Unmounting（卸载）</li>\n</ol>\n<a id=\"more\"></a>\n\n<h5 id=\"挂载-Mounting\"><a href=\"#挂载-Mounting\" class=\"headerlink\" title=\"挂载 (Mounting)\"></a>挂载 (Mounting)</h5><p>当组件实例被创建并插入 DOM 中时，其生命周期调用顺序如下：</p>\n<ul>\n<li>constructor()</li>\n<li>static getDerivedStateFromProps()</li>\n<li>render()</li>\n<li>componentDidMount()</li>\n</ul>\n<h5 id=\"更新-Updating\"><a href=\"#更新-Updating\" class=\"headerlink\" title=\"更新 (Updating)\"></a>更新 (Updating)</h5><p>当组件的 props 或 state 发生变化时会触发更新。组件更新的生命周期调用顺序如下：</p>\n<ul>\n<li>static getDerivedStateFromProps()</li>\n<li>shouldComponentUpdate()</li>\n<li>render()</li>\n<li>getSnapshotBeforeUpdate()</li>\n<li>componentDidUpdate()</li>\n</ul>\n<h5 id=\"卸载-Unmounting\"><a href=\"#卸载-Unmounting\" class=\"headerlink\" title=\"卸载 (Unmounting)\"></a>卸载 (Unmounting)</h5><p>当组件从 DOM 中移除时会调用如下方法：</p>\n<ul>\n<li>componentWillUnmount()</li>\n</ul>\n<h5 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h5><p>当渲染过程，生命周期，或子组件的构造函数中抛出错误时，会调用如下方法：</p>\n<ul>\n<li>static getDerivedStateFromError()</li>\n<li>componentDidCatch()</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(props);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.state = &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件每次被render的时候，包括在组件构建之后（虚拟dom之后，实际dom挂载之前）</span></span><br><span class=\"line\"><span class=\"comment\">    * 每次获取新的props或state之后；</span></span><br><span class=\"line\"><span class=\"comment\">    * 每次接收新的props之后都会返回一个对象作为新的state，返回null则说明不需要更新state；</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">static</span> getDerivedStateFromProps(props, state) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> state</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 获取到javascript错误</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentDidCatch(error, info) &#123;&#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 挂载后</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentDidMount() &#123;&#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件props或者state改变时触发，</span></span><br><span class=\"line\"><span class=\"comment\">    * true:更新</span></span><br><span class=\"line\"><span class=\"comment\">    * false:不更新</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   shouldComponentUpdate(nextProps, nextState) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件更新前触发</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   getSnapshotBeforeUpdate(prevProps, prevState) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(prevProps.value != <span class=\"built_in\">this</span>.props.value)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件更新后触发</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentDidUpdate(prevProps, prevState, snapshot) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(snapshot != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件卸载时触发</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentWillUnmount() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>React16新的生命周期弃用了<code>componentWillMount</code>、<code>componentWillReceiveProps</code>，<code>componentWillUpdate</code></p>\n</li>\n<li><p>新增了<code>getDerivedStateFromProps</code>、<code>getSnapshotBeforeUpdate</code>来代替弃用的三个钩子函数 <code>componentWillMount</code>、<code>componentWillReceiveProps</code>，<code>componentWillUpdate</code> </p>\n</li>\n<li><p>React16并没有删除这三个钩子函数，但是不能和新增的钩子函数 <code>getDerivedStateFromProps</code>、<code>getSnapshotBeforeUpdate</code> 混用，React17将会删除 <code>componentWillMount</code>、<code>componentWillReceiveProps</code>、<code>componentWillUpdate</code></p>\n</li>\n<li><p>新增了对错误的处理 <code>componentDidCatch</code></p>\n</li>\n</ol>\n<p><a href=\"https://zh-hans.reactjs.org/blog/2018/03/27/update-on-async-rendering.html\">异步渲染之更新</a></p>\n<p><a href=\"https://reactjs.org/\">React</a> 组件生命周期钩子函数</p>\n","site":{"data":{}},"excerpt":"<h5 id=\"组件生命周期的三个阶段\"><a href=\"#组件生命周期的三个阶段\" class=\"headerlink\" title=\"组件生命周期的三个阶段\"></a>组件生命周期的三个阶段</h5><ol>\n<li>Mounting（挂载）</li>\n<li>Updating（更新）</li>\n<li>Unmounting（卸载）</li>\n</ol>","more":"<h5 id=\"挂载-Mounting\"><a href=\"#挂载-Mounting\" class=\"headerlink\" title=\"挂载 (Mounting)\"></a>挂载 (Mounting)</h5><p>当组件实例被创建并插入 DOM 中时，其生命周期调用顺序如下：</p>\n<ul>\n<li>constructor()</li>\n<li>static getDerivedStateFromProps()</li>\n<li>render()</li>\n<li>componentDidMount()</li>\n</ul>\n<h5 id=\"更新-Updating\"><a href=\"#更新-Updating\" class=\"headerlink\" title=\"更新 (Updating)\"></a>更新 (Updating)</h5><p>当组件的 props 或 state 发生变化时会触发更新。组件更新的生命周期调用顺序如下：</p>\n<ul>\n<li>static getDerivedStateFromProps()</li>\n<li>shouldComponentUpdate()</li>\n<li>render()</li>\n<li>getSnapshotBeforeUpdate()</li>\n<li>componentDidUpdate()</li>\n</ul>\n<h5 id=\"卸载-Unmounting\"><a href=\"#卸载-Unmounting\" class=\"headerlink\" title=\"卸载 (Unmounting)\"></a>卸载 (Unmounting)</h5><p>当组件从 DOM 中移除时会调用如下方法：</p>\n<ul>\n<li>componentWillUnmount()</li>\n</ul>\n<h5 id=\"错误处理\"><a href=\"#错误处理\" class=\"headerlink\" title=\"错误处理\"></a>错误处理</h5><p>当渲染过程，生命周期，或子组件的构造函数中抛出错误时，会调用如下方法：</p>\n<ul>\n<li>static getDerivedStateFromError()</li>\n<li>componentDidCatch()</li>\n</ul>\n<figure class=\"highlight jsx\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Welcome</span> <span class=\"keyword\">extends</span> <span class=\"title\">React</span>.<span class=\"title\">Component</span> </span>&#123;</span><br><span class=\"line\"> <span class=\"keyword\">constructor</span>(props) &#123;</span><br><span class=\"line\">    <span class=\"built_in\">super</span>(props);</span><br><span class=\"line\">    <span class=\"built_in\">this</span>.state = &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件每次被render的时候，包括在组件构建之后（虚拟dom之后，实际dom挂载之前）</span></span><br><span class=\"line\"><span class=\"comment\">    * 每次获取新的props或state之后；</span></span><br><span class=\"line\"><span class=\"comment\">    * 每次接收新的props之后都会返回一个对象作为新的state，返回null则说明不需要更新state；</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"keyword\">static</span> getDerivedStateFromProps(props, state) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> state</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 获取到javascript错误</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentDidCatch(error, info) &#123;&#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 挂载后</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentDidMount() &#123;&#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件props或者state改变时触发，</span></span><br><span class=\"line\"><span class=\"comment\">    * true:更新</span></span><br><span class=\"line\"><span class=\"comment\">    * false:不更新</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   shouldComponentUpdate(nextProps, nextState) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件更新前触发</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   getSnapshotBeforeUpdate(prevProps, prevState) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(prevProps.value != <span class=\"built_in\">this</span>.props.value)&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">true</span></span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件更新后触发</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentDidUpdate(prevProps, prevState, snapshot) &#123;</span><br><span class=\"line\">     <span class=\"keyword\">if</span>(snapshot != <span class=\"literal\">null</span>)&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    * 组件卸载时触发</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   componentWillUnmount() &#123;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   render() &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"xml\"><span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Hello, &#123;this.props.name&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol>\n<li><p>React16新的生命周期弃用了<code>componentWillMount</code>、<code>componentWillReceiveProps</code>，<code>componentWillUpdate</code></p>\n</li>\n<li><p>新增了<code>getDerivedStateFromProps</code>、<code>getSnapshotBeforeUpdate</code>来代替弃用的三个钩子函数 <code>componentWillMount</code>、<code>componentWillReceiveProps</code>，<code>componentWillUpdate</code> </p>\n</li>\n<li><p>React16并没有删除这三个钩子函数，但是不能和新增的钩子函数 <code>getDerivedStateFromProps</code>、<code>getSnapshotBeforeUpdate</code> 混用，React17将会删除 <code>componentWillMount</code>、<code>componentWillReceiveProps</code>、<code>componentWillUpdate</code></p>\n</li>\n<li><p>新增了对错误的处理 <code>componentDidCatch</code></p>\n</li>\n</ol>\n<p><a href=\"https://zh-hans.reactjs.org/blog/2018/03/27/update-on-async-rendering.html\">异步渲染之更新</a></p>\n<p><a href=\"https://reactjs.org/\">React</a> 组件生命周期钩子函数</p>"},{"title":"URLSearchParams","date":"2020-08-31T00:18:09.000Z","_content":"\n<b class=\"bgc-e4e6e8\">URLSearchParams</b>\n\n```javascript\nlet params = new URLSearchParams(window.location.search);\nparams.has('name') // true\nparams.get('name') // js\n\nparams.set('age', '24');\nparams.toString(); // name=js&age=24\n\nparams.delete('age');\nparams.toString(); // name=js\n \n```","source":"_posts/url-search-params.md","raw":"---\ntitle: URLSearchParams\ndate: 2020-08-31 08:18:09\ntags: javaScript\n---\n\n<b class=\"bgc-e4e6e8\">URLSearchParams</b>\n\n```javascript\nlet params = new URLSearchParams(window.location.search);\nparams.has('name') // true\nparams.get('name') // js\n\nparams.set('age', '24');\nparams.toString(); // name=js&age=24\n\nparams.delete('age');\nparams.toString(); // name=js\n \n```","slug":"url-search-params","published":1,"updated":"2020-09-21T09:28:16.500Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgi90017jwj59zua6kvl","content":"<p><b class=\"bgc-e4e6e8\">URLSearchParams</b></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> params = <span class=\"keyword\">new</span> URLSearchParams(<span class=\"built_in\">window</span>.location.search);</span><br><span class=\"line\">params.has(<span class=\"string\">&#x27;name&#x27;</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">params.get(<span class=\"string\">&#x27;name&#x27;</span>) <span class=\"comment\">// js</span></span><br><span class=\"line\"></span><br><span class=\"line\">params.set(<span class=\"string\">&#x27;age&#x27;</span>, <span class=\"string\">&#x27;24&#x27;</span>);</span><br><span class=\"line\">params.toString(); <span class=\"comment\">// name=js&amp;age=24</span></span><br><span class=\"line\"></span><br><span class=\"line\">params.delete(<span class=\"string\">&#x27;age&#x27;</span>);</span><br><span class=\"line\">params.toString(); <span class=\"comment\">// name=js</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p><b class=\"bgc-e4e6e8\">URLSearchParams</b></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> params = <span class=\"keyword\">new</span> URLSearchParams(<span class=\"built_in\">window</span>.location.search);</span><br><span class=\"line\">params.has(<span class=\"string\">&#x27;name&#x27;</span>) <span class=\"comment\">// true</span></span><br><span class=\"line\">params.get(<span class=\"string\">&#x27;name&#x27;</span>) <span class=\"comment\">// js</span></span><br><span class=\"line\"></span><br><span class=\"line\">params.set(<span class=\"string\">&#x27;age&#x27;</span>, <span class=\"string\">&#x27;24&#x27;</span>);</span><br><span class=\"line\">params.toString(); <span class=\"comment\">// name=js&amp;age=24</span></span><br><span class=\"line\"></span><br><span class=\"line\">params.delete(<span class=\"string\">&#x27;age&#x27;</span>);</span><br><span class=\"line\">params.toString(); <span class=\"comment\">// name=js</span></span><br><span class=\"line\"> </span><br></pre></td></tr></table></figure>"},{"title":"Vue.js 里拉伸 div","date":"2020-09-02T06:35:06.000Z","_content":"在Vue.js里拉伸div显示更多内容\n\n<!-- more -->\n\n```vue\n<template>\n  <div class=\"stretch-box\">\n    <div class=\"table-box\" :style=\"{height: `${tableHeight}px`}\">\n\n    </div>\n    <div class=\"move-button\" @mousedown=\"moveFooter\" :style=\"moveButtonStyle\">\n      <span></span>\n      <span></span>\n    </div>\n    <div class=\"footer-box\" :style=\"{height: `${footerHeight}px`}\">\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"stretch\",\n  data() {\n    return {\n      tableHeight: 150,\n      footerHeight: 150,\n      moveButtonStyle: '',\n    }\n  },\n  methods: {\n    moveFooter(e) {\n      e.stopPropagation()\n      // let startX = e.clientX;\n      let startY = e.clientY;\n      let self = this;\n      let distY;\n      document.onmousemove = function (e) {\n        e.preventDefault();\n        // let distX = Math.abs(e.clientX - startX);\n        distY = startY - e.clientY;\n        let moveBtnY = e.clientY;\n        console.log(e.clientY)\n        self.moveButtonStyle = {\n          position: 'absolute',\n          top: `${moveBtnY}px`\n        }\n      }\n\n      document.onmouseup = function (e) {\n        e.stopPropagation()\n        self.footerHeight = self.footerHeight + distY;\n        self.tableHeight  = self.tableHeight - distY;\n        self.moveButtonStyle = ''\n        document.onmousemove = null;\n        document.onmouseup = null;\n      }\n    }\n  },\n}\n</script>\n\n<style  scoped>\n.table-box {\n  border: 1px solid darkgray;\n  margin-bottom: 20px;\n  background: darkgray;\n}\n.move-button{\n  border: 2px solid red;\n  height: 10px;\n  cursor:ns-resize;\n  width: 100%;\n  margin-bottom: 20px;\n  border-radius: 2px;\n}\n.footer-box {\n  border: 1px solid gray;\n  background: gray;\n}\n</style>\n```","source":"_posts/vue-Stretch-div.md","raw":"---\ntitle: Vue.js 里拉伸 div\ndate: 2020-09-02 14:35:06\ntags: Vue\n---\n在Vue.js里拉伸div显示更多内容\n\n<!-- more -->\n\n```vue\n<template>\n  <div class=\"stretch-box\">\n    <div class=\"table-box\" :style=\"{height: `${tableHeight}px`}\">\n\n    </div>\n    <div class=\"move-button\" @mousedown=\"moveFooter\" :style=\"moveButtonStyle\">\n      <span></span>\n      <span></span>\n    </div>\n    <div class=\"footer-box\" :style=\"{height: `${footerHeight}px`}\">\n\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"stretch\",\n  data() {\n    return {\n      tableHeight: 150,\n      footerHeight: 150,\n      moveButtonStyle: '',\n    }\n  },\n  methods: {\n    moveFooter(e) {\n      e.stopPropagation()\n      // let startX = e.clientX;\n      let startY = e.clientY;\n      let self = this;\n      let distY;\n      document.onmousemove = function (e) {\n        e.preventDefault();\n        // let distX = Math.abs(e.clientX - startX);\n        distY = startY - e.clientY;\n        let moveBtnY = e.clientY;\n        console.log(e.clientY)\n        self.moveButtonStyle = {\n          position: 'absolute',\n          top: `${moveBtnY}px`\n        }\n      }\n\n      document.onmouseup = function (e) {\n        e.stopPropagation()\n        self.footerHeight = self.footerHeight + distY;\n        self.tableHeight  = self.tableHeight - distY;\n        self.moveButtonStyle = ''\n        document.onmousemove = null;\n        document.onmouseup = null;\n      }\n    }\n  },\n}\n</script>\n\n<style  scoped>\n.table-box {\n  border: 1px solid darkgray;\n  margin-bottom: 20px;\n  background: darkgray;\n}\n.move-button{\n  border: 2px solid red;\n  height: 10px;\n  cursor:ns-resize;\n  width: 100%;\n  margin-bottom: 20px;\n  border-radius: 2px;\n}\n.footer-box {\n  border: 1px solid gray;\n  background: gray;\n}\n</style>\n```","slug":"vue-Stretch-div","published":1,"updated":"2020-09-21T09:31:21.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgia001ajwj57e058vm5","content":"<p>在Vue.js里拉伸div显示更多内容</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;stretch-box&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;table-box&quot; :style&#x3D;&quot;&#123;height: &#96;$&#123;tableHeight&#125;px&#96;&#125;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;move-button&quot; @mousedown&#x3D;&quot;moveFooter&quot; :style&#x3D;&quot;moveButtonStyle&quot;&gt;</span><br><span class=\"line\">      &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class=\"line\">      &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;footer-box&quot; :style&#x3D;&quot;&#123;height: &#96;$&#123;footerHeight&#125;px&#96;&#125;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;stretch&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      tableHeight: 150,</span><br><span class=\"line\">      footerHeight: 150,</span><br><span class=\"line\">      moveButtonStyle: &#39;&#39;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    moveFooter(e) &#123;</span><br><span class=\"line\">      e.stopPropagation()</span><br><span class=\"line\">      &#x2F;&#x2F; let startX &#x3D; e.clientX;</span><br><span class=\"line\">      let startY &#x3D; e.clientY;</span><br><span class=\"line\">      let self &#x3D; this;</span><br><span class=\"line\">      let distY;</span><br><span class=\"line\">      document.onmousemove &#x3D; function (e) &#123;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        &#x2F;&#x2F; let distX &#x3D; Math.abs(e.clientX - startX);</span><br><span class=\"line\">        distY &#x3D; startY - e.clientY;</span><br><span class=\"line\">        let moveBtnY &#x3D; e.clientY;</span><br><span class=\"line\">        console.log(e.clientY)</span><br><span class=\"line\">        self.moveButtonStyle &#x3D; &#123;</span><br><span class=\"line\">          position: &#39;absolute&#39;,</span><br><span class=\"line\">          top: &#96;$&#123;moveBtnY&#125;px&#96;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      document.onmouseup &#x3D; function (e) &#123;</span><br><span class=\"line\">        e.stopPropagation()</span><br><span class=\"line\">        self.footerHeight &#x3D; self.footerHeight + distY;</span><br><span class=\"line\">        self.tableHeight  &#x3D; self.tableHeight - distY;</span><br><span class=\"line\">        self.moveButtonStyle &#x3D; &#39;&#39;</span><br><span class=\"line\">        document.onmousemove &#x3D; null;</span><br><span class=\"line\">        document.onmouseup &#x3D; null;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style  scoped&gt;</span><br><span class=\"line\">.table-box &#123;</span><br><span class=\"line\">  border: 1px solid darkgray;</span><br><span class=\"line\">  margin-bottom: 20px;</span><br><span class=\"line\">  background: darkgray;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.move-button&#123;</span><br><span class=\"line\">  border: 2px solid red;</span><br><span class=\"line\">  height: 10px;</span><br><span class=\"line\">  cursor:ns-resize;</span><br><span class=\"line\">  width: 100%;</span><br><span class=\"line\">  margin-bottom: 20px;</span><br><span class=\"line\">  border-radius: 2px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.footer-box &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  background: gray;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>在Vue.js里拉伸div显示更多内容</p>","more":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;div class&#x3D;&quot;stretch-box&quot;&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;table-box&quot; :style&#x3D;&quot;&#123;height: &#96;$&#123;tableHeight&#125;px&#96;&#125;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;move-button&quot; @mousedown&#x3D;&quot;moveFooter&quot; :style&#x3D;&quot;moveButtonStyle&quot;&gt;</span><br><span class=\"line\">      &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class=\"line\">      &lt;span&gt;&lt;&#x2F;span&gt;</span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">    &lt;div class&#x3D;&quot;footer-box&quot; :style&#x3D;&quot;&#123;height: &#96;$&#123;footerHeight&#125;px&#96;&#125;&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;&#x2F;div&gt;</span><br><span class=\"line\">  &lt;&#x2F;div&gt;</span><br><span class=\"line\">&lt;&#x2F;template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">export default &#123;</span><br><span class=\"line\">  name: &quot;stretch&quot;,</span><br><span class=\"line\">  data() &#123;</span><br><span class=\"line\">    return &#123;</span><br><span class=\"line\">      tableHeight: 150,</span><br><span class=\"line\">      footerHeight: 150,</span><br><span class=\"line\">      moveButtonStyle: &#39;&#39;,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  methods: &#123;</span><br><span class=\"line\">    moveFooter(e) &#123;</span><br><span class=\"line\">      e.stopPropagation()</span><br><span class=\"line\">      &#x2F;&#x2F; let startX &#x3D; e.clientX;</span><br><span class=\"line\">      let startY &#x3D; e.clientY;</span><br><span class=\"line\">      let self &#x3D; this;</span><br><span class=\"line\">      let distY;</span><br><span class=\"line\">      document.onmousemove &#x3D; function (e) &#123;</span><br><span class=\"line\">        e.preventDefault();</span><br><span class=\"line\">        &#x2F;&#x2F; let distX &#x3D; Math.abs(e.clientX - startX);</span><br><span class=\"line\">        distY &#x3D; startY - e.clientY;</span><br><span class=\"line\">        let moveBtnY &#x3D; e.clientY;</span><br><span class=\"line\">        console.log(e.clientY)</span><br><span class=\"line\">        self.moveButtonStyle &#x3D; &#123;</span><br><span class=\"line\">          position: &#39;absolute&#39;,</span><br><span class=\"line\">          top: &#96;$&#123;moveBtnY&#125;px&#96;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      document.onmouseup &#x3D; function (e) &#123;</span><br><span class=\"line\">        e.stopPropagation()</span><br><span class=\"line\">        self.footerHeight &#x3D; self.footerHeight + distY;</span><br><span class=\"line\">        self.tableHeight  &#x3D; self.tableHeight - distY;</span><br><span class=\"line\">        self.moveButtonStyle &#x3D; &#39;&#39;</span><br><span class=\"line\">        document.onmousemove &#x3D; null;</span><br><span class=\"line\">        document.onmouseup &#x3D; null;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;style  scoped&gt;</span><br><span class=\"line\">.table-box &#123;</span><br><span class=\"line\">  border: 1px solid darkgray;</span><br><span class=\"line\">  margin-bottom: 20px;</span><br><span class=\"line\">  background: darkgray;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.move-button&#123;</span><br><span class=\"line\">  border: 2px solid red;</span><br><span class=\"line\">  height: 10px;</span><br><span class=\"line\">  cursor:ns-resize;</span><br><span class=\"line\">  width: 100%;</span><br><span class=\"line\">  margin-bottom: 20px;</span><br><span class=\"line\">  border-radius: 2px;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">.footer-box &#123;</span><br><span class=\"line\">  border: 1px solid gray;</span><br><span class=\"line\">  background: gray;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;&#x2F;style&gt;</span><br></pre></td></tr></table></figure>"},{"title":"消息队列助你成为高薪 Node.js 工程师","date":"2020-10-10T10:43:25.000Z","_content":"\n[消息队列助你成为高薪 Node.js 工程师](https://cloud.tencent.com/developer/article/1549997)","source":"_posts/nodejs-message-queue.md","raw":"---\ntitle: 消息队列助你成为高薪 Node.js 工程师\ndate: 2020-10-10 18:43:25\ntags: javaScript\n---\n\n[消息队列助你成为高薪 Node.js 工程师](https://cloud.tencent.com/developer/article/1549997)","slug":"nodejs-message-queue","published":1,"updated":"2020-10-10T10:44:52.676Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgib001cjwj59yp2f5ps","content":"<p><a href=\"https://cloud.tencent.com/developer/article/1549997\">消息队列助你成为高薪 Node.js 工程师</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://cloud.tencent.com/developer/article/1549997\">消息队列助你成为高薪 Node.js 工程师</a></p>\n"},{"title":"Ubuntu 防火墙","date":"2020-09-10T05:32:48.000Z","_content":"\n+ 开启防火墙\n\n```shell script\nsudo ufw enable\n```\n\n+ 重启\n\n```shell script\nsudo ufw reload\n```\n\n+ 打开一个端口\n\n```shell script\nsudo ufw allow 8080\n```\n\n+ 查看服务器端口使用情况\n\n```shell script\nsudo ufw status\n```","source":"_posts/ufw-config.md","raw":"---\ntitle: Ubuntu 防火墙\ndate: 2020-09-10 13:32:48\ntags: ufw\n---\n\n+ 开启防火墙\n\n```shell script\nsudo ufw enable\n```\n\n+ 重启\n\n```shell script\nsudo ufw reload\n```\n\n+ 打开一个端口\n\n```shell script\nsudo ufw allow 8080\n```\n\n+ 查看服务器端口使用情况\n\n```shell script\nsudo ufw status\n```","slug":"ufw-config","published":1,"updated":"2020-09-22T05:45:10.867Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgic001ejwj5a6pi9hum","content":"<ul>\n<li>开启防火墙</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw enable</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重启</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw reload</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>打开一个端口</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw allow 8080</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查看服务器端口使用情况</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw status</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>开启防火墙</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw enable</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>重启</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw reload</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>打开一个端口</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw allow 8080</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>查看服务器端口使用情况</li>\n</ul>\n<figure class=\"highlight shell\"><figcaption><span>script</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo ufw status</span><br></pre></td></tr></table></figure>"},{"title":"yslow","date":"2020-09-29T08:03:44.000Z","_content":"\n`YSlow`根据Yahoo!的高性能网站规则来分析网页以及为什么网页变慢\n<!-- more -->\n 1. [最小化HTTP请求](http://developer.yahoo.com/performance/rules.html#num_http)\n 2. [使用内容交付网络](http://developer.yahoo.com/performance/rules.html#cdn)\n 3. [避免空src或href](http://developer.yahoo.com/performance/rules.html#emptysrc)\n 4. [添加过期或缓存控制标头](http://developer.yahoo.com/performance/rules.html#expires)\n 5. [Gzip组件](http://developer.yahoo.com/performance/rules.html#gzip)\n 6. [将StyleSheets放在顶部](http://developer.yahoo.com/performance/rules.html#css_top)\n 7. [将脚本放在最下面](http://developer.yahoo.com/performance/rules.html#js_bottom)\n 8. [避免CSS表达式](http://developer.yahoo.com/performance/rules.html#css_expressions)\n 9. [将JavaScript和CSS设为外部](http://developer.yahoo.com/performance/rules.html#external)\n 10. [减少DNS查找](http://developer.yahoo.com/performance/rules.html#dns_lookups)\n 11. [缩小JavaScript和CSS](http://developer.yahoo.com/performance/rules.html#minify)\n 12. [避免重定向](http://developer.yahoo.com/performance/rules.html#redirects)\n 13. [删除重复的脚本](http://developer.yahoo.com/performance/rules.html#js_dupes)\n 14. [配置ETag](http://developer.yahoo.com/performance/rules.html#etags)\n 15. [使AJAX可缓存](http://developer.yahoo.com/performance/rules.html#cacheajax)\n 16. [使用GET处理AJAX请求](http://developer.yahoo.com/performance/rules.html#ajax_get)\n 17. [减少DOM元素的数量](http://developer.yahoo.com/performance/rules.html#min_dom)\n 18. [没有404](http://developer.yahoo.com/performance/rules.html#no404)\n 19. [减少Cookie大小](http://developer.yahoo.com/performance/rules.html#cookie_size)\n 20. [对组件使用无Cookie域](http://developer.yahoo.com/performance/rules.html#cookie_free)\n 21. [避免使用过滤器](http://developer.yahoo.com/performance/rules.html#no_filters)\n 22. [不缩放HTML中的图像](http://developer.yahoo.com/performance/rules.html#no_scale)\n 23. [使favicon.ico小型且可缓存](http://developer.yahoo.com/performance/rules.html#favicon)","source":"_posts/web-yslow.md","raw":"---\ntitle: yslow\ndate: 2020-09-29 16:03:44\ntags: yslow\n---\n\n`YSlow`根据Yahoo!的高性能网站规则来分析网页以及为什么网页变慢\n<!-- more -->\n 1. [最小化HTTP请求](http://developer.yahoo.com/performance/rules.html#num_http)\n 2. [使用内容交付网络](http://developer.yahoo.com/performance/rules.html#cdn)\n 3. [避免空src或href](http://developer.yahoo.com/performance/rules.html#emptysrc)\n 4. [添加过期或缓存控制标头](http://developer.yahoo.com/performance/rules.html#expires)\n 5. [Gzip组件](http://developer.yahoo.com/performance/rules.html#gzip)\n 6. [将StyleSheets放在顶部](http://developer.yahoo.com/performance/rules.html#css_top)\n 7. [将脚本放在最下面](http://developer.yahoo.com/performance/rules.html#js_bottom)\n 8. [避免CSS表达式](http://developer.yahoo.com/performance/rules.html#css_expressions)\n 9. [将JavaScript和CSS设为外部](http://developer.yahoo.com/performance/rules.html#external)\n 10. [减少DNS查找](http://developer.yahoo.com/performance/rules.html#dns_lookups)\n 11. [缩小JavaScript和CSS](http://developer.yahoo.com/performance/rules.html#minify)\n 12. [避免重定向](http://developer.yahoo.com/performance/rules.html#redirects)\n 13. [删除重复的脚本](http://developer.yahoo.com/performance/rules.html#js_dupes)\n 14. [配置ETag](http://developer.yahoo.com/performance/rules.html#etags)\n 15. [使AJAX可缓存](http://developer.yahoo.com/performance/rules.html#cacheajax)\n 16. [使用GET处理AJAX请求](http://developer.yahoo.com/performance/rules.html#ajax_get)\n 17. [减少DOM元素的数量](http://developer.yahoo.com/performance/rules.html#min_dom)\n 18. [没有404](http://developer.yahoo.com/performance/rules.html#no404)\n 19. [减少Cookie大小](http://developer.yahoo.com/performance/rules.html#cookie_size)\n 20. [对组件使用无Cookie域](http://developer.yahoo.com/performance/rules.html#cookie_free)\n 21. [避免使用过滤器](http://developer.yahoo.com/performance/rules.html#no_filters)\n 22. [不缩放HTML中的图像](http://developer.yahoo.com/performance/rules.html#no_scale)\n 23. [使favicon.ico小型且可缓存](http://developer.yahoo.com/performance/rules.html#favicon)","slug":"web-yslow","published":1,"updated":"2020-09-30T03:29:50.166Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgic001gjwj55b2o0lk9","content":"<p><code>YSlow</code>根据Yahoo!的高性能网站规则来分析网页以及为什么网页变慢</p>\n<a id=\"more\"></a>\n<ol>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#num_http\">最小化HTTP请求</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cdn\">使用内容交付网络</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#emptysrc\">避免空src或href</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#expires\">添加过期或缓存控制标头</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#gzip\">Gzip组件</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#css_top\">将StyleSheets放在顶部</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">将脚本放在最下面</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#css_expressions\">避免CSS表达式</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#external\">将JavaScript和CSS设为外部</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#dns_lookups\">减少DNS查找</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#minify\">缩小JavaScript和CSS</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#redirects\">避免重定向</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#js_dupes\">删除重复的脚本</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#etags\">配置ETag</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cacheajax\">使AJAX可缓存</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#ajax_get\">使用GET处理AJAX请求</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#min_dom\">减少DOM元素的数量</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#no404\">没有404</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cookie_size\">减少Cookie大小</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cookie_free\">对组件使用无Cookie域</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#no_filters\">避免使用过滤器</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#no_scale\">不缩放HTML中的图像</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#favicon\">使favicon.ico小型且可缓存</a></li>\n</ol>\n","site":{"data":{}},"excerpt":"<p><code>YSlow</code>根据Yahoo!的高性能网站规则来分析网页以及为什么网页变慢</p>","more":"<ol>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#num_http\">最小化HTTP请求</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cdn\">使用内容交付网络</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#emptysrc\">避免空src或href</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#expires\">添加过期或缓存控制标头</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#gzip\">Gzip组件</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#css_top\">将StyleSheets放在顶部</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#js_bottom\">将脚本放在最下面</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#css_expressions\">避免CSS表达式</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#external\">将JavaScript和CSS设为外部</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#dns_lookups\">减少DNS查找</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#minify\">缩小JavaScript和CSS</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#redirects\">避免重定向</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#js_dupes\">删除重复的脚本</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#etags\">配置ETag</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cacheajax\">使AJAX可缓存</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#ajax_get\">使用GET处理AJAX请求</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#min_dom\">减少DOM元素的数量</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#no404\">没有404</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cookie_size\">减少Cookie大小</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#cookie_free\">对组件使用无Cookie域</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#no_filters\">避免使用过滤器</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#no_scale\">不缩放HTML中的图像</a></li>\n<li><a href=\"http://developer.yahoo.com/performance/rules.html#favicon\">使favicon.ico小型且可缓存</a></li>\n</ol>"},{"title":"什么时候在react里用状态管理器","date":"2020-09-17T06:23:35.000Z","_content":"\n\n* ##### 从项目整体看\n\n1. 用户的使用方式复杂\n2. 不同身份的用户有不同的使用方式（比如普通用户和管理员）\n3. 多个用户之间可以协作\n4. 与服务器大量交互，或者使用了WebSocket\n5. View要从多个来源获取数据\n\n* ##### 从组件角度看\n1. 某个组件的状态，需要共享\n2. 某个状态需要在任何地方都可以拿到\n3. 一个组件需要改变全局状态\n4. 一个组件需要改变另一个组件的状态\n","source":"_posts/when-to-use-state-management-in-react.md","raw":"---\ntitle: 什么时候在react里用状态管理器\ndate: 2020-09-17 14:23:35\ntags: React\n---\n\n\n* ##### 从项目整体看\n\n1. 用户的使用方式复杂\n2. 不同身份的用户有不同的使用方式（比如普通用户和管理员）\n3. 多个用户之间可以协作\n4. 与服务器大量交互，或者使用了WebSocket\n5. View要从多个来源获取数据\n\n* ##### 从组件角度看\n1. 某个组件的状态，需要共享\n2. 某个状态需要在任何地方都可以拿到\n3. 一个组件需要改变全局状态\n4. 一个组件需要改变另一个组件的状态\n","slug":"when-to-use-state-management-in-react","published":1,"updated":"2020-09-22T01:59:46.513Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckheodgid001jjwj5cspg0m51","content":"<ul>\n<li><h5 id=\"从项目整体看\"><a href=\"#从项目整体看\" class=\"headerlink\" title=\"从项目整体看\"></a>从项目整体看</h5></li>\n</ul>\n<ol>\n<li>用户的使用方式复杂</li>\n<li>不同身份的用户有不同的使用方式（比如普通用户和管理员）</li>\n<li>多个用户之间可以协作</li>\n<li>与服务器大量交互，或者使用了WebSocket</li>\n<li>View要从多个来源获取数据</li>\n</ol>\n<ul>\n<li><h5 id=\"从组件角度看\"><a href=\"#从组件角度看\" class=\"headerlink\" title=\"从组件角度看\"></a>从组件角度看</h5></li>\n</ul>\n<ol>\n<li>某个组件的状态，需要共享</li>\n<li>某个状态需要在任何地方都可以拿到</li>\n<li>一个组件需要改变全局状态</li>\n<li>一个组件需要改变另一个组件的状态</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li><h5 id=\"从项目整体看\"><a href=\"#从项目整体看\" class=\"headerlink\" title=\"从项目整体看\"></a>从项目整体看</h5></li>\n</ul>\n<ol>\n<li>用户的使用方式复杂</li>\n<li>不同身份的用户有不同的使用方式（比如普通用户和管理员）</li>\n<li>多个用户之间可以协作</li>\n<li>与服务器大量交互，或者使用了WebSocket</li>\n<li>View要从多个来源获取数据</li>\n</ol>\n<ul>\n<li><h5 id=\"从组件角度看\"><a href=\"#从组件角度看\" class=\"headerlink\" title=\"从组件角度看\"></a>从组件角度看</h5></li>\n</ul>\n<ol>\n<li>某个组件的状态，需要共享</li>\n<li>某个状态需要在任何地方都可以拿到</li>\n<li>一个组件需要改变全局状态</li>\n<li>一个组件需要改变另一个组件的状态</li>\n</ol>\n"},{"layout":"posts","title":"MutationObserver 监控元素改动","date":"2020-11-30T07:38:15.000Z","_content":"\n来通过 MDN\n\n`MutationObserver` 接口提供了监视对DOM树所做更改的能力。它被设计为旧的Mutation Events功能的替代品，该功能是DOM3 Events规范的一部分\n\n<!-- more -->\n\n```javascript\n// 选择需要观察变动的节点\nconst targetNode = document.getElementById('some-id');\n\n// 观察器的配置（需要观察什么变动）\nconst config = { attributes: true, childList: true, subtree: true };\n\n// 当观察到变动时执行的回调函数\nconst callback = function(mutationsList, observer) {\n    // Use traditional 'for loops' for IE 11\n    for(let mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n            console.log('A child node has been added or removed.');\n        }\n        else if (mutation.type === 'attributes') {\n            console.log('The ' + mutation.attributeName + ' attribute was modified.');\n        }\n    }\n};\n\n// 创建一个观察器实例并传入回调函数\nconst observer = new MutationObserver(callback);\n\n// 以上述配置开始观察目标节点\nobserver.observe(targetNode, config);\n\n// 之后，可停止观察\nobserver.disconnect();\n```","source":"_posts/MutationObserver.md","raw":"---\nlayout: posts\ntitle: MutationObserver 监控元素改动\ndate: 2020-11-30 15:38:15\ntags: javsScript\n---\n\n来通过 MDN\n\n`MutationObserver` 接口提供了监视对DOM树所做更改的能力。它被设计为旧的Mutation Events功能的替代品，该功能是DOM3 Events规范的一部分\n\n<!-- more -->\n\n```javascript\n// 选择需要观察变动的节点\nconst targetNode = document.getElementById('some-id');\n\n// 观察器的配置（需要观察什么变动）\nconst config = { attributes: true, childList: true, subtree: true };\n\n// 当观察到变动时执行的回调函数\nconst callback = function(mutationsList, observer) {\n    // Use traditional 'for loops' for IE 11\n    for(let mutation of mutationsList) {\n        if (mutation.type === 'childList') {\n            console.log('A child node has been added or removed.');\n        }\n        else if (mutation.type === 'attributes') {\n            console.log('The ' + mutation.attributeName + ' attribute was modified.');\n        }\n    }\n};\n\n// 创建一个观察器实例并传入回调函数\nconst observer = new MutationObserver(callback);\n\n// 以上述配置开始观察目标节点\nobserver.observe(targetNode, config);\n\n// 之后，可停止观察\nobserver.disconnect();\n```","slug":"MutationObserver","published":1,"updated":"2020-11-30T07:48:25.670Z","_id":"cki490lpy00005nj524sx39o7","comments":1,"photos":[],"link":"","content":"<p>来通过 MDN</p>\n<p><code>MutationObserver</code> 接口提供了监视对DOM树所做更改的能力。它被设计为旧的Mutation Events功能的替代品，该功能是DOM3 Events规范的一部分</p>\n<a id=\"more\"></a>\n\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 选择需要观察变动的节点</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> targetNode = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;some-id&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 观察器的配置（需要观察什么变动）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123; <span class=\"attr\">attributes</span>: <span class=\"literal\">true</span>, <span class=\"attr\">childList</span>: <span class=\"literal\">true</span>, <span class=\"attr\">subtree</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当观察到变动时执行的回调函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> callback = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mutationsList, observer</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Use traditional &#x27;for loops&#x27; for IE 11</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> mutation <span class=\"keyword\">of</span> mutationsList) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mutation.type === <span class=\"string\">&#x27;childList&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;A child node has been added or removed.&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (mutation.type === <span class=\"string\">&#x27;attributes&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;The &#x27;</span> + mutation.attributeName + <span class=\"string\">&#x27; attribute was modified.&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个观察器实例并传入回调函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> MutationObserver(callback);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以上述配置开始观察目标节点</span></span><br><span class=\"line\">observer.observe(targetNode, config);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 之后，可停止观察</span></span><br><span class=\"line\">observer.disconnect();</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>来通过 MDN</p>\n<p><code>MutationObserver</code> 接口提供了监视对DOM树所做更改的能力。它被设计为旧的Mutation Events功能的替代品，该功能是DOM3 Events规范的一部分</p>","more":"<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 选择需要观察变动的节点</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> targetNode = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">&#x27;some-id&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 观察器的配置（需要观察什么变动）</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> config = &#123; <span class=\"attr\">attributes</span>: <span class=\"literal\">true</span>, <span class=\"attr\">childList</span>: <span class=\"literal\">true</span>, <span class=\"attr\">subtree</span>: <span class=\"literal\">true</span> &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 当观察到变动时执行的回调函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> callback = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">mutationsList, observer</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Use traditional &#x27;for loops&#x27; for IE 11</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">let</span> mutation <span class=\"keyword\">of</span> mutationsList) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mutation.type === <span class=\"string\">&#x27;childList&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;A child node has been added or removed.&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (mutation.type === <span class=\"string\">&#x27;attributes&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"built_in\">console</span>.log(<span class=\"string\">&#x27;The &#x27;</span> + mutation.attributeName + <span class=\"string\">&#x27; attribute was modified.&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 创建一个观察器实例并传入回调函数</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> MutationObserver(callback);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 以上述配置开始观察目标节点</span></span><br><span class=\"line\">observer.observe(targetNode, config);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 之后，可停止观察</span></span><br><span class=\"line\">observer.disconnect();</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ckheodghn0003jwj5a7dd8xc3","tag_id":"ckheodgho0005jwj5atokc6j4","_id":"ckheodghq0007jwj55tgfg8dp"},{"post_id":"ckheodght0008jwj5b6mz1jb5","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodghy000fjwj57z2xahwj"},{"post_id":"ckheodghu0009jwj52suz30qs","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgi0000jjwj530c90eos"},{"post_id":"ckheodghz000hjwj5bjvu5gem","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgi0000ljwj58plb7h7c"},{"post_id":"ckheodgi0000kjwj5hqsl2dtl","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgi2000ojwj54ew7e4xw"},{"post_id":"ckheodghv000bjwj509s590hf","tag_id":"ckheodghz000ijwj559nm93ji","_id":"ckheodgi3000qjwj576w09t4j"},{"post_id":"ckheodgi1000mjwj54tez577w","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgi5000tjwj50nki2ngu"},{"post_id":"ckheodgi3000pjwj52d7j9ut8","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgi5000vjwj5bts7dqzz"},{"post_id":"ckheodghw000djwj5drexb46l","tag_id":"ckheodgi2000njwj5b2wa6mmk","_id":"ckheodgi6000yjwj56dmnctss"},{"post_id":"ckheodghy000gjwj550txf8gh","tag_id":"ckheodgi2000njwj5b2wa6mmk","_id":"ckheodgi70010jwj531ryh5g6"},{"post_id":"ckheodgi5000wjwj58el1ghen","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgi80013jwj50cs76f50"},{"post_id":"ckheodgi3000rjwj59eyl2mbd","tag_id":"ckheodgi6000xjwj5g28jd8mc","_id":"ckheodgi80015jwj59ion9m5j"},{"post_id":"ckheodgi5000ujwj5g6n7gmc4","tag_id":"ckheodgi80012jwj54mvxbkob","_id":"ckheodgia0019jwj5gd36aleb"},{"post_id":"ckheodgi90017jwj59zua6kvl","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgib001bjwj57lreayt1"},{"post_id":"ckheodgi6000zjwj57yv7byq3","tag_id":"ckheodgia0018jwj5eksd4yes","_id":"ckheodgic001fjwj5asmxet9e"},{"post_id":"ckheodgib001cjwj59yp2f5ps","tag_id":"ckheodghv000ajwj54fu393pb","_id":"ckheodgid001hjwj51z575rfq"},{"post_id":"ckheodgi80014jwj50ghq2xaz","tag_id":"ckheodgib001djwj51xuq8bfb","_id":"ckheodgie001kjwj554204ygy"},{"post_id":"ckheodgid001jjwj5cspg0m51","tag_id":"ckheodgid001ijwj5f82uhlaa","_id":"ckheodgie001ljwj53lsq4dju"},{"post_id":"ckheodgi80016jwj54ja4g3h9","tag_id":"ckheodgid001ijwj5f82uhlaa","_id":"ckheodgif001njwj5cagh3kpt"},{"post_id":"ckheodgia001ajwj57e058vm5","tag_id":"ckheodgie001mjwj5caru22h0","_id":"ckheodgih001pjwj56kpwdrxf"},{"post_id":"ckheodgic001ejwj5a6pi9hum","tag_id":"ckheodgif001ojwj5ab7100t5","_id":"ckheodgih001rjwj5hwld042m"},{"post_id":"ckheodgic001gjwj55b2o0lk9","tag_id":"ckheodgih001qjwj5eb0q8wg0","_id":"ckheodgih001sjwj50qrve1z1"},{"post_id":"cki490lpy00005nj524sx39o7","tag_id":"cki490lq400015nj5fdp3g6a3","_id":"cki490lqa00025nj5hwnwe1b2"}],"Tag":[{"name":"协慌网","_id":"ckheodgho0005jwj5atokc6j4"},{"name":"javaScript","_id":"ckheodghv000ajwj54fu393pb"},{"name":"test","_id":"ckheodghz000ijwj559nm93ji"},{"name":"git","_id":"ckheodgi2000njwj5b2wa6mmk"},{"name":"Node.js","_id":"ckheodgi6000xjwj5g28jd8mc"},{"name":"component library","_id":"ckheodgi80012jwj54mvxbkob"},{"name":"Linux","_id":"ckheodgia0018jwj5eksd4yes"},{"name":"Nginx","_id":"ckheodgib001djwj51xuq8bfb"},{"name":"React","_id":"ckheodgid001ijwj5f82uhlaa"},{"name":"Vue","_id":"ckheodgie001mjwj5caru22h0"},{"name":"ufw","_id":"ckheodgif001ojwj5ab7100t5"},{"name":"yslow","_id":"ckheodgih001qjwj5eb0q8wg0"},{"name":"javsScript","_id":"cki490lq400015nj5fdp3g6a3"}]}}